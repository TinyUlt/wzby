// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gt_buyu.proto

#ifndef PROTOBUF_gt_5fbuyu_2eproto__INCLUDED
#define PROTOBUF_gt_5fbuyu_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "gt_enum.pb.h"
// @@protoc_insertion_point(includes)

namespace gt_msg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_gt_5fbuyu_2eproto();
void protobuf_AssignDesc_gt_5fbuyu_2eproto();
void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

class ActionData;
class Cell;
class ColliderCircle;
class FishProductNode;
class MapData;
class MapGroup;
class MessageTimer;
class NavData;
class NavMeshGroup;
class Nears;
class PathGroup;
class PointInfo;
class PosData;
class ProductItem;
class ProductItemContent;
class ProductItemGroup;
class Proto_Buf;
class Proto_BufEffect;
class Proto_BufList;
class Proto_BuffData;
class Proto_EffectData;
class Proto_EffectInfo;
class Proto_FlyInfo;
class Proto_LearnSkill;
class Proto_LearnSkillList;
class Proto_Monster;
class Proto_MonsterList;
class Proto_Skill;
class Proto_SkillData;
class Proto_SkillEffect;
class Proto_SkillEffectList;
class Proto_SkillList;
class Quate;
class R_Attack;
class R_ChangeMultiple;
class R_Move;
class R_TestDelay;
class S_Attack;
class S_ChangeMultiple;
class S_FrameSync;
class S_Hit;
class S_ItemScore;
class S_KillItem;
class S_LV;
class S_Move;
class S_MovePosList;
class S_SpawnItem;
class S_StartGame;
class S_TestDelay;
class SinglePath;
class Size;
class SynPos;
class TestPoint;
class Vec2;
class Vec3;
class Victim;
class row;

// ===================================================================

class Vec2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Vec2) */ {
 public:
  Vec2();
  virtual ~Vec2();

  Vec2(const Vec2& from);

  inline Vec2& operator=(const Vec2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vec2& default_instance();

  void Swap(Vec2* other);

  // implements Message ----------------------------------------------

  inline Vec2* New() const { return New(NULL); }

  Vec2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vec2& from);
  void MergeFrom(const Vec2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Vec2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.Vec2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Vec2* default_instance_;
};
// -------------------------------------------------------------------

class Vec3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Vec3) */ {
 public:
  Vec3();
  virtual ~Vec3();

  Vec3(const Vec3& from);

  inline Vec3& operator=(const Vec3& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vec3& default_instance();

  void Swap(Vec3* other);

  // implements Message ----------------------------------------------

  inline Vec3* New() const { return New(NULL); }

  Vec3* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Vec3& from);
  void MergeFrom(const Vec3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Vec3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.Vec3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Vec3* default_instance_;
};
// -------------------------------------------------------------------

class TestPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.TestPoint) */ {
 public:
  TestPoint();
  virtual ~TestPoint();

  TestPoint(const TestPoint& from);

  inline TestPoint& operator=(const TestPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestPoint& default_instance();

  void Swap(TestPoint* other);

  // implements Message ----------------------------------------------

  inline TestPoint* New() const { return New(NULL); }

  TestPoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestPoint& from);
  void MergeFrom(const TestPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TestPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 Point = 2;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 2;
  const ::gt_msg::Vec3& point() const;
  ::gt_msg::Vec3* mutable_point();
  ::gt_msg::Vec3* release_point();
  void set_allocated_point(::gt_msg::Vec3* point);

  // @@protoc_insertion_point(class_scope:gt_msg.TestPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::Vec3* point_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static TestPoint* default_instance_;
};
// -------------------------------------------------------------------

class ColliderCircle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ColliderCircle) */ {
 public:
  ColliderCircle();
  virtual ~ColliderCircle();

  ColliderCircle(const ColliderCircle& from);

  inline ColliderCircle& operator=(const ColliderCircle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColliderCircle& default_instance();

  void Swap(ColliderCircle* other);

  // implements Message ----------------------------------------------

  inline ColliderCircle* New() const { return New(NULL); }

  ColliderCircle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColliderCircle& from);
  void MergeFrom(const ColliderCircle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ColliderCircle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.Vec3 Offset = 1;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  const ::gt_msg::Vec3& offset() const;
  ::gt_msg::Vec3* mutable_offset();
  ::gt_msg::Vec3* release_offset();
  void set_allocated_offset(::gt_msg::Vec3* offset);

  // optional float Radius = 2;
  void clear_radius();
  static const int kRadiusFieldNumber = 2;
  float radius() const;
  void set_radius(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.ColliderCircle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::Vec3* offset_;
  float radius_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ColliderCircle* default_instance_;
};
// -------------------------------------------------------------------

class Quate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Quate) */ {
 public:
  Quate();
  virtual ~Quate();

  Quate(const Quate& from);

  inline Quate& operator=(const Quate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quate& default_instance();

  void Swap(Quate* other);

  // implements Message ----------------------------------------------

  inline Quate* New() const { return New(NULL); }

  Quate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quate& from);
  void MergeFrom(const Quate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Quate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // optional float w = 4;
  void clear_w();
  static const int kWFieldNumber = 4;
  float w() const;
  void set_w(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.Quate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  float w_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Quate* default_instance_;
};
// -------------------------------------------------------------------

class Size : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Size) */ {
 public:
  Size();
  virtual ~Size();

  Size(const Size& from);

  inline Size& operator=(const Size& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Size& default_instance();

  void Swap(Size* other);

  // implements Message ----------------------------------------------

  inline Size* New() const { return New(NULL); }

  Size* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Size& from);
  void MergeFrom(const Size& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Size* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float widht = 1;
  void clear_widht();
  static const int kWidhtFieldNumber = 1;
  float widht() const;
  void set_widht(float value);

  // optional float height = 2;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  float height() const;
  void set_height(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.Size)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float widht_;
  float height_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Size* default_instance_;
};
// -------------------------------------------------------------------

class PointInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PointInfo) */ {
 public:
  PointInfo();
  virtual ~PointInfo();

  PointInfo(const PointInfo& from);

  inline PointInfo& operator=(const PointInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointInfo& default_instance();

  void Swap(PointInfo* other);

  // implements Message ----------------------------------------------

  inline PointInfo* New() const { return New(NULL); }

  PointInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointInfo& from);
  void MergeFrom(const PointInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // optional float distance = 4;
  void clear_distance();
  static const int kDistanceFieldNumber = 4;
  float distance() const;
  void set_distance(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.PointInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  float z_;
  float distance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PointInfo* default_instance_;
};
// -------------------------------------------------------------------

class SinglePath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.SinglePath) */ {
 public:
  SinglePath();
  virtual ~SinglePath();

  SinglePath(const SinglePath& from);

  inline SinglePath& operator=(const SinglePath& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SinglePath& default_instance();

  void Swap(SinglePath* other);

  // implements Message ----------------------------------------------

  inline SinglePath* New() const { return New(NULL); }

  SinglePath* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SinglePath& from);
  void MergeFrom(const SinglePath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SinglePath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pathName = 1;
  void clear_pathname();
  static const int kPathNameFieldNumber = 1;
  const ::std::string& pathname() const;
  void set_pathname(const ::std::string& value);
  void set_pathname(const char* value);
  void set_pathname(const char* value, size_t size);
  ::std::string* mutable_pathname();
  ::std::string* release_pathname();
  void set_allocated_pathname(::std::string* pathname);

  // repeated .gt_msg.PointInfo pathPointList = 2;
  int pathpointlist_size() const;
  void clear_pathpointlist();
  static const int kPathPointListFieldNumber = 2;
  const ::gt_msg::PointInfo& pathpointlist(int index) const;
  ::gt_msg::PointInfo* mutable_pathpointlist(int index);
  ::gt_msg::PointInfo* add_pathpointlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PointInfo >*
      mutable_pathpointlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::PointInfo >&
      pathpointlist() const;

  // repeated .gt_msg.ActionData actions = 3;
  int actions_size() const;
  void clear_actions();
  static const int kActionsFieldNumber = 3;
  const ::gt_msg::ActionData& actions(int index) const;
  ::gt_msg::ActionData* mutable_actions(int index);
  ::gt_msg::ActionData* add_actions();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >*
      mutable_actions();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >&
      actions() const;

  // optional string copyPathName = 4;
  void clear_copypathname();
  static const int kCopyPathNameFieldNumber = 4;
  const ::std::string& copypathname() const;
  void set_copypathname(const ::std::string& value);
  void set_copypathname(const char* value);
  void set_copypathname(const char* value, size_t size);
  ::std::string* mutable_copypathname();
  ::std::string* release_copypathname();
  void set_allocated_copypathname(::std::string* copypathname);

  // optional float RadianOffset = 5;
  void clear_radianoffset();
  static const int kRadianOffsetFieldNumber = 5;
  float radianoffset() const;
  void set_radianoffset(float value);

  // optional float DeepOffset = 6;
  void clear_deepoffset();
  static const int kDeepOffsetFieldNumber = 6;
  float deepoffset() const;
  void set_deepoffset(float value);

  // optional float speedScale = 9;
  void clear_speedscale();
  static const int kSpeedScaleFieldNumber = 9;
  float speedscale() const;
  void set_speedscale(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.SinglePath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr pathname_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PointInfo > pathpointlist_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData > actions_;
  ::google::protobuf::internal::ArenaStringPtr copypathname_;
  float radianoffset_;
  float deepoffset_;
  float speedscale_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static SinglePath* default_instance_;
};
// -------------------------------------------------------------------

class PathGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PathGroup) */ {
 public:
  PathGroup();
  virtual ~PathGroup();

  PathGroup(const PathGroup& from);

  inline PathGroup& operator=(const PathGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathGroup& default_instance();

  void Swap(PathGroup* other);

  // implements Message ----------------------------------------------

  inline PathGroup* New() const { return New(NULL); }

  PathGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathGroup& from);
  void MergeFrom(const PathGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.SinglePath pathList = 1;
  int pathlist_size() const;
  void clear_pathlist();
  static const int kPathListFieldNumber = 1;
  const ::gt_msg::SinglePath& pathlist(int index) const;
  ::gt_msg::SinglePath* mutable_pathlist(int index);
  ::gt_msg::SinglePath* add_pathlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePath >*
      mutable_pathlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePath >&
      pathlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.PathGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePath > pathlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PathGroup* default_instance_;
};
// -------------------------------------------------------------------

class MapGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.MapGroup) */ {
 public:
  MapGroup();
  virtual ~MapGroup();

  MapGroup(const MapGroup& from);

  inline MapGroup& operator=(const MapGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapGroup& default_instance();

  void Swap(MapGroup* other);

  // implements Message ----------------------------------------------

  inline MapGroup* New() const { return New(NULL); }

  MapGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapGroup& from);
  void MergeFrom(const MapGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MapGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 pathList = 1;
  int pathlist_size() const;
  void clear_pathlist();
  static const int kPathListFieldNumber = 1;
  ::google::protobuf::int32 pathlist(int index) const;
  void set_pathlist(int index, ::google::protobuf::int32 value);
  void add_pathlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pathlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pathlist();

  // @@protoc_insertion_point(class_scope:gt_msg.MapGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pathlist_;
  mutable int _pathlist_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static MapGroup* default_instance_;
};
// -------------------------------------------------------------------

class NavMeshGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.NavMeshGroup) */ {
 public:
  NavMeshGroup();
  virtual ~NavMeshGroup();

  NavMeshGroup(const NavMeshGroup& from);

  inline NavMeshGroup& operator=(const NavMeshGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NavMeshGroup& default_instance();

  void Swap(NavMeshGroup* other);

  // implements Message ----------------------------------------------

  inline NavMeshGroup* New() const { return New(NULL); }

  NavMeshGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NavMeshGroup& from);
  void MergeFrom(const NavMeshGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NavMeshGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 indexList = 1;
  int indexlist_size() const;
  void clear_indexlist();
  static const int kIndexListFieldNumber = 1;
  ::google::protobuf::int32 indexlist(int index) const;
  void set_indexlist(int index, ::google::protobuf::int32 value);
  void add_indexlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      indexlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_indexlist();

  // repeated .gt_msg.Vec3 verticeList = 2;
  int verticelist_size() const;
  void clear_verticelist();
  static const int kVerticeListFieldNumber = 2;
  const ::gt_msg::Vec3& verticelist(int index) const;
  ::gt_msg::Vec3* mutable_verticelist(int index);
  ::gt_msg::Vec3* add_verticelist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
      mutable_verticelist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
      verticelist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.NavMeshGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > indexlist_;
  mutable int _indexlist_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 > verticelist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static NavMeshGroup* default_instance_;
};
// -------------------------------------------------------------------

class ActionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ActionData) */ {
 public:
  ActionData();
  virtual ~ActionData();

  ActionData(const ActionData& from);

  inline ActionData& operator=(const ActionData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionData& default_instance();

  void Swap(ActionData* other);

  // implements Message ----------------------------------------------

  inline ActionData* New() const { return New(NULL); }

  ActionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionData& from);
  void MergeFrom(const ActionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 actionFrame = 1;
  void clear_actionframe();
  static const int kActionFrameFieldNumber = 1;
  ::google::protobuf::int32 actionframe() const;
  void set_actionframe(::google::protobuf::int32 value);

  // optional int32 playIdleIndex = 2;
  void clear_playidleindex();
  static const int kPlayIdleIndexFieldNumber = 2;
  ::google::protobuf::int32 playidleindex() const;
  void set_playidleindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.ActionData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 actionframe_;
  ::google::protobuf::int32 playidleindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ActionData* default_instance_;
};
// -------------------------------------------------------------------

class MessageTimer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.MessageTimer) */ {
 public:
  MessageTimer();
  virtual ~MessageTimer();

  MessageTimer(const MessageTimer& from);

  inline MessageTimer& operator=(const MessageTimer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageTimer& default_instance();

  void Swap(MessageTimer* other);

  // implements Message ----------------------------------------------

  inline MessageTimer* New() const { return New(NULL); }

  MessageTimer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageTimer& from);
  void MergeFrom(const MessageTimer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageTimer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 passFrame = 1;
  void clear_passframe();
  static const int kPassFrameFieldNumber = 1;
  ::google::protobuf::int32 passframe() const;
  void set_passframe(::google::protobuf::int32 value);

  // optional string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:gt_msg.MessageTimer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 passframe_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static MessageTimer* default_instance_;
};
// -------------------------------------------------------------------

class ProductItemContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ProductItemContent) */ {
 public:
  ProductItemContent();
  virtual ~ProductItemContent();

  ProductItemContent(const ProductItemContent& from);

  inline ProductItemContent& operator=(const ProductItemContent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductItemContent& default_instance();

  void Swap(ProductItemContent* other);

  // implements Message ----------------------------------------------

  inline ProductItemContent* New() const { return New(NULL); }

  ProductItemContent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductItemContent& from);
  void MergeFrom(const ProductItemContent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductItemContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ProductItemIndex = 1;
  int productitemindex_size() const;
  void clear_productitemindex();
  static const int kProductItemIndexFieldNumber = 1;
  ::google::protobuf::int32 productitemindex(int index) const;
  void set_productitemindex(int index, ::google::protobuf::int32 value);
  void add_productitemindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      productitemindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_productitemindex();

  // optional int32 frame = 2;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // repeated string fishList = 3;
  int fishlist_size() const;
  void clear_fishlist();
  static const int kFishListFieldNumber = 3;
  const ::std::string& fishlist(int index) const;
  ::std::string* mutable_fishlist(int index);
  void set_fishlist(int index, const ::std::string& value);
  void set_fishlist(int index, const char* value);
  void set_fishlist(int index, const char* value, size_t size);
  ::std::string* add_fishlist();
  void add_fishlist(const ::std::string& value);
  void add_fishlist(const char* value);
  void add_fishlist(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& fishlist() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fishlist();

  // optional float SpeedScale = 4;
  void clear_speedscale();
  static const int kSpeedScaleFieldNumber = 4;
  float speedscale() const;
  void set_speedscale(float value);

  // optional int32 AngleOffset = 5;
  void clear_angleoffset();
  static const int kAngleOffsetFieldNumber = 5;
  ::google::protobuf::int32 angleoffset() const;
  void set_angleoffset(::google::protobuf::int32 value);

  // optional int32 FollowCount = 7;
  void clear_followcount();
  static const int kFollowCountFieldNumber = 7;
  ::google::protobuf::int32 followcount() const;
  void set_followcount(::google::protobuf::int32 value);

  // optional int32 FollowDistance = 8;
  void clear_followdistance();
  static const int kFollowDistanceFieldNumber = 8;
  ::google::protobuf::int32 followdistance() const;
  void set_followdistance(::google::protobuf::int32 value);

  // optional bool Forever = 9;
  void clear_forever();
  static const int kForeverFieldNumber = 9;
  bool forever() const;
  void set_forever(bool value);

  // repeated .gt_msg.ProductItem items = 10;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 10;
  const ::gt_msg::ProductItem& items(int index) const;
  ::gt_msg::ProductItem* mutable_items(int index);
  ::gt_msg::ProductItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
      items() const;

  // @@protoc_insertion_point(class_scope:gt_msg.ProductItemContent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > productitemindex_;
  mutable int _productitemindex_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fishlist_;
  ::google::protobuf::int32 frame_;
  float speedscale_;
  ::google::protobuf::int32 angleoffset_;
  ::google::protobuf::int32 followcount_;
  ::google::protobuf::int32 followdistance_;
  bool forever_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem > items_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ProductItemContent* default_instance_;
};
// -------------------------------------------------------------------

class ProductItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ProductItem) */ {
 public:
  ProductItem();
  virtual ~ProductItem();

  ProductItem(const ProductItem& from);

  inline ProductItem& operator=(const ProductItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductItem& default_instance();

  void Swap(ProductItem* other);

  // implements Message ----------------------------------------------

  inline ProductItem* New() const { return New(NULL); }

  ProductItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductItem& from);
  void MergeFrom(const ProductItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ContentName = 1;
  void clear_contentname();
  static const int kContentNameFieldNumber = 1;
  const ::std::string& contentname() const;
  void set_contentname(const ::std::string& value);
  void set_contentname(const char* value);
  void set_contentname(const char* value, size_t size);
  ::std::string* mutable_contentname();
  ::std::string* release_contentname();
  void set_allocated_contentname(::std::string* contentname);

  // optional bool isSync = 2;
  void clear_issync();
  static const int kIsSyncFieldNumber = 2;
  bool issync() const;
  void set_issync(bool value);

  // optional int32 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // repeated .gt_msg.ProductItemContent contentItems = 4;
  int contentitems_size() const;
  void clear_contentitems();
  static const int kContentItemsFieldNumber = 4;
  const ::gt_msg::ProductItemContent& contentitems(int index) const;
  ::gt_msg::ProductItemContent* mutable_contentitems(int index);
  ::gt_msg::ProductItemContent* add_contentitems();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >*
      mutable_contentitems();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >&
      contentitems() const;

  // @@protoc_insertion_point(class_scope:gt_msg.ProductItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr contentname_;
  bool issync_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent > contentitems_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ProductItem* default_instance_;
};
// -------------------------------------------------------------------

class ProductItemGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.ProductItemGroup) */ {
 public:
  ProductItemGroup();
  virtual ~ProductItemGroup();

  ProductItemGroup(const ProductItemGroup& from);

  inline ProductItemGroup& operator=(const ProductItemGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductItemGroup& default_instance();

  void Swap(ProductItemGroup* other);

  // implements Message ----------------------------------------------

  inline ProductItemGroup* New() const { return New(NULL); }

  ProductItemGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProductItemGroup& from);
  void MergeFrom(const ProductItemGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProductItemGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.ProductItem itemList = 1;
  int itemlist_size() const;
  void clear_itemlist();
  static const int kItemListFieldNumber = 1;
  const ::gt_msg::ProductItem& itemlist(int index) const;
  ::gt_msg::ProductItem* mutable_itemlist(int index);
  ::gt_msg::ProductItem* add_itemlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
      mutable_itemlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
      itemlist() const;

  // optional int32 mainEnter = 2;
  void clear_mainenter();
  static const int kMainEnterFieldNumber = 2;
  ::google::protobuf::int32 mainenter() const;
  void set_mainenter(::google::protobuf::int32 value);

  // optional int32 AddFishEnter = 3;
  void clear_addfishenter();
  static const int kAddFishEnterFieldNumber = 3;
  ::google::protobuf::int32 addfishenter() const;
  void set_addfishenter(::google::protobuf::int32 value);

  // optional bool EnableAddFish = 4;
  void clear_enableaddfish();
  static const int kEnableAddFishFieldNumber = 4;
  bool enableaddfish() const;
  void set_enableaddfish(bool value);

  // @@protoc_insertion_point(class_scope:gt_msg.ProductItemGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem > itemlist_;
  ::google::protobuf::int32 mainenter_;
  ::google::protobuf::int32 addfishenter_;
  bool enableaddfish_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static ProductItemGroup* default_instance_;
};
// -------------------------------------------------------------------

class FishProductNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.FishProductNode) */ {
 public:
  FishProductNode();
  virtual ~FishProductNode();

  FishProductNode(const FishProductNode& from);

  inline FishProductNode& operator=(const FishProductNode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FishProductNode& default_instance();

  void Swap(FishProductNode* other);

  // implements Message ----------------------------------------------

  inline FishProductNode* New() const { return New(NULL); }

  FishProductNode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FishProductNode& from);
  void MergeFrom(const FishProductNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FishProductNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string productName = 1;
  void clear_productname();
  static const int kProductNameFieldNumber = 1;
  const ::std::string& productname() const;
  void set_productname(const ::std::string& value);
  void set_productname(const char* value);
  void set_productname(const char* value, size_t size);
  ::std::string* mutable_productname();
  ::std::string* release_productname();
  void set_allocated_productname(::std::string* productname);

  // optional int32 repeatTime = 2;
  void clear_repeattime();
  static const int kRepeatTimeFieldNumber = 2;
  ::google::protobuf::int32 repeattime() const;
  void set_repeattime(::google::protobuf::int32 value);

  // optional string fishType = 3;
  void clear_fishtype();
  static const int kFishTypeFieldNumber = 3;
  const ::std::string& fishtype() const;
  void set_fishtype(const ::std::string& value);
  void set_fishtype(const char* value);
  void set_fishtype(const char* value, size_t size);
  ::std::string* mutable_fishtype();
  ::std::string* release_fishtype();
  void set_allocated_fishtype(::std::string* fishtype);

  // optional int32 startFrame = 4;
  void clear_startframe();
  static const int kStartFrameFieldNumber = 4;
  ::google::protobuf::int32 startframe() const;
  void set_startframe(::google::protobuf::int32 value);

  // repeated .gt_msg.FishProductNode childs = 5;
  int childs_size() const;
  void clear_childs();
  static const int kChildsFieldNumber = 5;
  const ::gt_msg::FishProductNode& childs(int index) const;
  ::gt_msg::FishProductNode* mutable_childs(int index);
  ::gt_msg::FishProductNode* add_childs();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >*
      mutable_childs();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >&
      childs() const;

  // @@protoc_insertion_point(class_scope:gt_msg.FishProductNode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr productname_;
  ::google::protobuf::internal::ArenaStringPtr fishtype_;
  ::google::protobuf::int32 repeattime_;
  ::google::protobuf::int32 startframe_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode > childs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static FishProductNode* default_instance_;
};
// -------------------------------------------------------------------

class row : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.row) */ {
 public:
  row();
  virtual ~row();

  row(const row& from);

  inline row& operator=(const row& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const row& default_instance();

  void Swap(row* other);

  // implements Message ----------------------------------------------

  inline row* New() const { return New(NULL); }

  row* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const row& from);
  void MergeFrom(const row& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(row* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data(int index) const;
  void set_data(int index, ::google::protobuf::int32 value);
  void add_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:gt_msg.row)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  mutable int _data_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static row* default_instance_;
};
// -------------------------------------------------------------------

class MapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.MapData) */ {
 public:
  MapData();
  virtual ~MapData();

  MapData(const MapData& from);

  inline MapData& operator=(const MapData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapData& default_instance();

  void Swap(MapData* other);

  // implements Message ----------------------------------------------

  inline MapData* New() const { return New(NULL); }

  MapData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapData& from);
  void MergeFrom(const MapData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MapData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.row data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::gt_msg::row& data(int index) const;
  ::gt_msg::row* mutable_data(int index);
  ::gt_msg::row* add_data();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::row >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::row >&
      data() const;

  // @@protoc_insertion_point(class_scope:gt_msg.MapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::row > data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static MapData* default_instance_;
};
// -------------------------------------------------------------------

class Nears : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Nears) */ {
 public:
  Nears();
  virtual ~Nears();

  Nears(const Nears& from);

  inline Nears& operator=(const Nears& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Nears& default_instance();

  void Swap(Nears* other);

  // implements Message ----------------------------------------------

  inline Nears* New() const { return New(NULL); }

  Nears* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Nears& from);
  void MergeFrom(const Nears& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Nears* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional float distance = 2;
  void clear_distance();
  static const int kDistanceFieldNumber = 2;
  float distance() const;
  void set_distance(float value);

  // repeated int32 pointIndex = 3;
  int pointindex_size() const;
  void clear_pointindex();
  static const int kPointIndexFieldNumber = 3;
  ::google::protobuf::int32 pointindex(int index) const;
  void set_pointindex(int index, ::google::protobuf::int32 value);
  void add_pointindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pointindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pointindex();

  // optional int32 lineIndex = 4;
  void clear_lineindex();
  static const int kLineIndexFieldNumber = 4;
  ::google::protobuf::int32 lineindex() const;
  void set_lineindex(::google::protobuf::int32 value);

  // optional int32 OtherLineIndex = 5;
  void clear_otherlineindex();
  static const int kOtherLineIndexFieldNumber = 5;
  ::google::protobuf::int32 otherlineindex() const;
  void set_otherlineindex(::google::protobuf::int32 value);

  // optional bool enable = 6;
  void clear_enable();
  static const int kEnableFieldNumber = 6;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:gt_msg.Nears)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 index_;
  float distance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pointindex_;
  mutable int _pointindex_cached_byte_size_;
  ::google::protobuf::int32 lineindex_;
  ::google::protobuf::int32 otherlineindex_;
  bool enable_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Nears* default_instance_;
};
// -------------------------------------------------------------------

class Cell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Cell) */ {
 public:
  Cell();
  virtual ~Cell();

  Cell(const Cell& from);

  inline Cell& operator=(const Cell& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cell& default_instance();

  void Swap(Cell* other);

  // implements Message ----------------------------------------------

  inline Cell* New() const { return New(NULL); }

  Cell* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cell& from);
  void MergeFrom(const Cell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // repeated .gt_msg.Vec3 v = 2;
  int v_size() const;
  void clear_v();
  static const int kVFieldNumber = 2;
  const ::gt_msg::Vec3& v(int index) const;
  ::gt_msg::Vec3* mutable_v(int index);
  ::gt_msg::Vec3* add_v();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
      mutable_v();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
      v() const;

  // repeated int32 vIndex = 3;
  int vindex_size() const;
  void clear_vindex();
  static const int kVIndexFieldNumber = 3;
  ::google::protobuf::int32 vindex(int index) const;
  void set_vindex(int index, ::google::protobuf::int32 value);
  void add_vindex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      vindex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_vindex();

  // optional .gt_msg.Vec3 midPos = 4;
  bool has_midpos() const;
  void clear_midpos();
  static const int kMidPosFieldNumber = 4;
  const ::gt_msg::Vec3& midpos() const;
  ::gt_msg::Vec3* mutable_midpos();
  ::gt_msg::Vec3* release_midpos();
  void set_allocated_midpos(::gt_msg::Vec3* midpos);

  // repeated .gt_msg.Nears nears = 5;
  int nears_size() const;
  void clear_nears();
  static const int kNearsFieldNumber = 5;
  const ::gt_msg::Nears& nears(int index) const;
  ::gt_msg::Nears* mutable_nears(int index);
  ::gt_msg::Nears* add_nears();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Nears >*
      mutable_nears();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Nears >&
      nears() const;

  // repeated float lineMidSqrDistance = 6;
  int linemidsqrdistance_size() const;
  void clear_linemidsqrdistance();
  static const int kLineMidSqrDistanceFieldNumber = 6;
  float linemidsqrdistance(int index) const;
  void set_linemidsqrdistance(int index, float value);
  void add_linemidsqrdistance(float value);
  const ::google::protobuf::RepeatedField< float >&
      linemidsqrdistance() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_linemidsqrdistance();

  // repeated .gt_msg.Vec3 lineMidPos = 7;
  int linemidpos_size() const;
  void clear_linemidpos();
  static const int kLineMidPosFieldNumber = 7;
  const ::gt_msg::Vec3& linemidpos(int index) const;
  ::gt_msg::Vec3* mutable_linemidpos(int index);
  ::gt_msg::Vec3* add_linemidpos();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
      mutable_linemidpos();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
      linemidpos() const;

  // repeated .gt_msg.Vec3 normalize = 8;
  int normalize_size() const;
  void clear_normalize();
  static const int kNormalizeFieldNumber = 8;
  const ::gt_msg::Vec3& normalize(int index) const;
  ::gt_msg::Vec3* mutable_normalize(int index);
  ::gt_msg::Vec3* add_normalize();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
      mutable_normalize();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
      normalize() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Cell)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 > v_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > vindex_;
  mutable int _vindex_cached_byte_size_;
  ::gt_msg::Vec3* midpos_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Nears > nears_;
  ::google::protobuf::RepeatedField< float > linemidsqrdistance_;
  mutable int _linemidsqrdistance_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 > linemidpos_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 > normalize_;
  ::google::protobuf::int32 index_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Cell* default_instance_;
};
// -------------------------------------------------------------------

class PosData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.PosData) */ {
 public:
  PosData();
  virtual ~PosData();

  PosData(const PosData& from);

  inline PosData& operator=(const PosData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PosData& default_instance();

  void Swap(PosData* other);

  // implements Message ----------------------------------------------

  inline PosData* New() const { return New(NULL); }

  PosData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PosData& from);
  void MergeFrom(const PosData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PosData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.Vec3 Pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::gt_msg::Vec3& pos() const;
  ::gt_msg::Vec3* mutable_pos();
  ::gt_msg::Vec3* release_pos();
  void set_allocated_pos(::gt_msg::Vec3* pos);

  // repeated int32 CellIndexs = 2;
  int cellindexs_size() const;
  void clear_cellindexs();
  static const int kCellIndexsFieldNumber = 2;
  ::google::protobuf::int32 cellindexs(int index) const;
  void set_cellindexs(int index, ::google::protobuf::int32 value);
  void add_cellindexs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cellindexs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cellindexs();

  // @@protoc_insertion_point(class_scope:gt_msg.PosData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::Vec3* pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cellindexs_;
  mutable int _cellindexs_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static PosData* default_instance_;
};
// -------------------------------------------------------------------

class NavData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.NavData) */ {
 public:
  NavData();
  virtual ~NavData();

  NavData(const NavData& from);

  inline NavData& operator=(const NavData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NavData& default_instance();

  void Swap(NavData* other);

  // implements Message ----------------------------------------------

  inline NavData* New() const { return New(NULL); }

  NavData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NavData& from);
  void MergeFrom(const NavData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NavData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.Cell celllist = 1;
  int celllist_size() const;
  void clear_celllist();
  static const int kCelllistFieldNumber = 1;
  const ::gt_msg::Cell& celllist(int index) const;
  ::gt_msg::Cell* mutable_celllist(int index);
  ::gt_msg::Cell* add_celllist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Cell >*
      mutable_celllist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Cell >&
      celllist() const;

  // repeated .gt_msg.PosData posList = 3;
  int poslist_size() const;
  void clear_poslist();
  static const int kPosListFieldNumber = 3;
  const ::gt_msg::PosData& poslist(int index) const;
  ::gt_msg::PosData* mutable_poslist(int index);
  ::gt_msg::PosData* add_poslist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PosData >*
      mutable_poslist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::PosData >&
      poslist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.NavData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Cell > celllist_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::PosData > poslist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static NavData* default_instance_;
};
// -------------------------------------------------------------------

class SynPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.SynPos) */ {
 public:
  SynPos();
  virtual ~SynPos();

  SynPos(const SynPos& from);

  inline SynPos& operator=(const SynPos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynPos& default_instance();

  void Swap(SynPos* other);

  // implements Message ----------------------------------------------

  inline SynPos* New() const { return New(NULL); }

  SynPos* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynPos& from);
  void MergeFrom(const SynPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SynPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 MoverId = 1;
  void clear_moverid();
  static const int kMoverIdFieldNumber = 1;
  ::google::protobuf::int32 moverid() const;
  void set_moverid(::google::protobuf::int32 value);

  // optional int32 Frame = 2;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 Position = 3;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 3;
  const ::gt_msg::Vec3& position() const;
  ::gt_msg::Vec3* mutable_position();
  ::gt_msg::Vec3* release_position();
  void set_allocated_position(::gt_msg::Vec3* position);

  // optional int32 State = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.SynPos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 moverid_;
  ::google::protobuf::int32 frame_;
  ::gt_msg::Vec3* position_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static SynPos* default_instance_;
};
// -------------------------------------------------------------------

class S_StartGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_StartGame) */ {
 public:
  S_StartGame();
  virtual ~S_StartGame();

  S_StartGame(const S_StartGame& from);

  inline S_StartGame& operator=(const S_StartGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_StartGame& default_instance();

  void Swap(S_StartGame* other);

  // implements Message ----------------------------------------------

  inline S_StartGame* New() const { return New(NULL); }

  S_StartGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_StartGame& from);
  void MergeFrom(const S_StartGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_StartGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ResultCode = 1;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 resultcode() const;
  void set_resultcode(::google::protobuf::int32 value);

  // optional .gt_msg.Size WorldSize = 2;
  bool has_worldsize() const;
  void clear_worldsize();
  static const int kWorldSizeFieldNumber = 2;
  const ::gt_msg::Size& worldsize() const;
  ::gt_msg::Size* mutable_worldsize();
  ::gt_msg::Size* release_worldsize();
  void set_allocated_worldsize(::gt_msg::Size* worldsize);

  // optional int32 Frame = 3;
  void clear_frame();
  static const int kFrameFieldNumber = 3;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 ExecuteDelayFrame = 4;
  void clear_executedelayframe();
  static const int kExecuteDelayFrameFieldNumber = 4;
  ::google::protobuf::int32 executedelayframe() const;
  void set_executedelayframe(::google::protobuf::int32 value);

  // optional int32 PosSendFrame = 5;
  void clear_possendframe();
  static const int kPosSendFrameFieldNumber = 5;
  ::google::protobuf::int32 possendframe() const;
  void set_possendframe(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.S_StartGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::Size* worldsize_;
  ::google::protobuf::int32 resultcode_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 executedelayframe_;
  ::google::protobuf::int32 possendframe_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_StartGame* default_instance_;
};
// -------------------------------------------------------------------

class S_FrameSync : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_FrameSync) */ {
 public:
  S_FrameSync();
  virtual ~S_FrameSync();

  S_FrameSync(const S_FrameSync& from);

  inline S_FrameSync& operator=(const S_FrameSync& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_FrameSync& default_instance();

  void Swap(S_FrameSync* other);

  // implements Message ----------------------------------------------

  inline S_FrameSync* New() const { return New(NULL); }

  S_FrameSync* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_FrameSync& from);
  void MergeFrom(const S_FrameSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_FrameSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // repeated .gt_msg.TestPoint Monsters = 2;
  int monsters_size() const;
  void clear_monsters();
  static const int kMonstersFieldNumber = 2;
  const ::gt_msg::TestPoint& monsters(int index) const;
  ::gt_msg::TestPoint* mutable_monsters(int index);
  ::gt_msg::TestPoint* add_monsters();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
      mutable_monsters();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
      monsters() const;

  // repeated .gt_msg.TestPoint Players = 3;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 3;
  const ::gt_msg::TestPoint& players(int index) const;
  ::gt_msg::TestPoint* mutable_players(int index);
  ::gt_msg::TestPoint* add_players();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
      players() const;

  // repeated .gt_msg.TestPoint Bullets = 4;
  int bullets_size() const;
  void clear_bullets();
  static const int kBulletsFieldNumber = 4;
  const ::gt_msg::TestPoint& bullets(int index) const;
  ::gt_msg::TestPoint* mutable_bullets(int index);
  ::gt_msg::TestPoint* add_bullets();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
      mutable_bullets();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
      bullets() const;

  // @@protoc_insertion_point(class_scope:gt_msg.S_FrameSync)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint > monsters_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint > players_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint > bullets_;
  ::google::protobuf::int32 frame_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_FrameSync* default_instance_;
};
// -------------------------------------------------------------------

class S_SpawnItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_SpawnItem) */ {
 public:
  S_SpawnItem();
  virtual ~S_SpawnItem();

  S_SpawnItem(const S_SpawnItem& from);

  inline S_SpawnItem& operator=(const S_SpawnItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_SpawnItem& default_instance();

  void Swap(S_SpawnItem* other);

  // implements Message ----------------------------------------------

  inline S_SpawnItem* New() const { return New(NULL); }

  S_SpawnItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_SpawnItem& from);
  void MergeFrom(const S_SpawnItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_SpawnItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ItemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 Frame = 2;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 Type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 Pos = 4;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  const ::gt_msg::Vec3& pos() const;
  ::gt_msg::Vec3* mutable_pos();
  ::gt_msg::Vec3* release_pos();
  void set_allocated_pos(::gt_msg::Vec3* pos);

  // optional int32 TeamId = 5;
  void clear_teamid();
  static const int kTeamIdFieldNumber = 5;
  ::google::protobuf::int32 teamid() const;
  void set_teamid(::google::protobuf::int32 value);

  // optional int64 Score = 6;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // optional int32 HP = 7;
  void clear_hp();
  static const int kHPFieldNumber = 7;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // optional int32 EXP = 8;
  void clear_exp();
  static const int kEXPFieldNumber = 8;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // optional int32 LV = 9;
  void clear_lv();
  static const int kLVFieldNumber = 9;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // optional int32 DMG = 10;
  void clear_dmg();
  static const int kDMGFieldNumber = 10;
  ::google::protobuf::int32 dmg() const;
  void set_dmg(::google::protobuf::int32 value);

  // optional int32 MaxExp = 11;
  void clear_maxexp();
  static const int kMaxExpFieldNumber = 11;
  ::google::protobuf::int32 maxexp() const;
  void set_maxexp(::google::protobuf::int32 value);

  // optional int32 Multiple = 12;
  void clear_multiple();
  static const int kMultipleFieldNumber = 12;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // repeated int32 MulList = 13;
  int mullist_size() const;
  void clear_mullist();
  static const int kMulListFieldNumber = 13;
  ::google::protobuf::int32 mullist(int index) const;
  void set_mullist(int index, ::google::protobuf::int32 value);
  void add_mullist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mullist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mullist();

  // @@protoc_insertion_point(class_scope:gt_msg.S_SpawnItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 frame_;
  ::gt_msg::Vec3* pos_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 dmg_;
  ::google::protobuf::int32 maxexp_;
  ::google::protobuf::int32 multiple_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mullist_;
  mutable int _mullist_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_SpawnItem* default_instance_;
};
// -------------------------------------------------------------------

class R_ChangeMultiple : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.R_ChangeMultiple) */ {
 public:
  R_ChangeMultiple();
  virtual ~R_ChangeMultiple();

  R_ChangeMultiple(const R_ChangeMultiple& from);

  inline R_ChangeMultiple& operator=(const R_ChangeMultiple& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const R_ChangeMultiple& default_instance();

  void Swap(R_ChangeMultiple* other);

  // implements Message ----------------------------------------------

  inline R_ChangeMultiple* New() const { return New(NULL); }

  R_ChangeMultiple* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const R_ChangeMultiple& from);
  void MergeFrom(const R_ChangeMultiple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(R_ChangeMultiple* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // optional int32 Frame = 2;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.R_ChangeMultiple)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 frame_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static R_ChangeMultiple* default_instance_;
};
// -------------------------------------------------------------------

class S_ChangeMultiple : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_ChangeMultiple) */ {
 public:
  S_ChangeMultiple();
  virtual ~S_ChangeMultiple();

  S_ChangeMultiple(const S_ChangeMultiple& from);

  inline S_ChangeMultiple& operator=(const S_ChangeMultiple& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ChangeMultiple& default_instance();

  void Swap(S_ChangeMultiple* other);

  // implements Message ----------------------------------------------

  inline S_ChangeMultiple* New() const { return New(NULL); }

  S_ChangeMultiple* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_ChangeMultiple& from);
  void MergeFrom(const S_ChangeMultiple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_ChangeMultiple* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ItemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 Value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // optional int32 Frame = 3;
  void clear_frame();
  static const int kFrameFieldNumber = 3;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.S_ChangeMultiple)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 frame_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_ChangeMultiple* default_instance_;
};
// -------------------------------------------------------------------

class S_KillItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_KillItem) */ {
 public:
  S_KillItem();
  virtual ~S_KillItem();

  S_KillItem(const S_KillItem& from);

  inline S_KillItem& operator=(const S_KillItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_KillItem& default_instance();

  void Swap(S_KillItem* other);

  // implements Message ----------------------------------------------

  inline S_KillItem* New() const { return New(NULL); }

  S_KillItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_KillItem& from);
  void MergeFrom(const S_KillItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_KillItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 DeadId = 1;
  void clear_deadid();
  static const int kDeadIdFieldNumber = 1;
  ::google::protobuf::int32 deadid() const;
  void set_deadid(::google::protobuf::int32 value);

  // optional int32 Frame = 2;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 KillerId = 3;
  void clear_killerid();
  static const int kKillerIdFieldNumber = 3;
  ::google::protobuf::int32 killerid() const;
  void set_killerid(::google::protobuf::int32 value);

  // optional int32 KillerExperience = 4;
  void clear_killerexperience();
  static const int kKillerExperienceFieldNumber = 4;
  ::google::protobuf::int32 killerexperience() const;
  void set_killerexperience(::google::protobuf::int32 value);

  // optional int32 ReBirth = 5;
  void clear_rebirth();
  static const int kReBirthFieldNumber = 5;
  ::google::protobuf::int32 rebirth() const;
  void set_rebirth(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.S_KillItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 deadid_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 killerid_;
  ::google::protobuf::int32 killerexperience_;
  ::google::protobuf::int32 rebirth_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_KillItem* default_instance_;
};
// -------------------------------------------------------------------

class R_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.R_Move) */ {
 public:
  R_Move();
  virtual ~R_Move();

  R_Move(const R_Move& from);

  inline R_Move& operator=(const R_Move& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const R_Move& default_instance();

  void Swap(R_Move* other);

  // implements Message ----------------------------------------------

  inline R_Move* New() const { return New(NULL); }

  R_Move* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const R_Move& from);
  void MergeFrom(const R_Move& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(R_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.SynPos Data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::gt_msg::SynPos& data() const;
  ::gt_msg::SynPos* mutable_data();
  ::gt_msg::SynPos* release_data();
  void set_allocated_data(::gt_msg::SynPos* data);

  // optional int32 CellIndex = 2;
  void clear_cellindex();
  static const int kCellIndexFieldNumber = 2;
  ::google::protobuf::int32 cellindex() const;
  void set_cellindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.R_Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::SynPos* data_;
  ::google::protobuf::int32 cellindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static R_Move* default_instance_;
};
// -------------------------------------------------------------------

class S_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_Move) */ {
 public:
  S_Move();
  virtual ~S_Move();

  S_Move(const S_Move& from);

  inline S_Move& operator=(const S_Move& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Move& default_instance();

  void Swap(S_Move* other);

  // implements Message ----------------------------------------------

  inline S_Move* New() const { return New(NULL); }

  S_Move* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_Move& from);
  void MergeFrom(const S_Move& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.SynPos Data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::gt_msg::SynPos& data() const;
  ::gt_msg::SynPos* mutable_data();
  ::gt_msg::SynPos* release_data();
  void set_allocated_data(::gt_msg::SynPos* data);

  // @@protoc_insertion_point(class_scope:gt_msg.S_Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::gt_msg::SynPos* data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_Move* default_instance_;
};
// -------------------------------------------------------------------

class R_Attack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.R_Attack) */ {
 public:
  R_Attack();
  virtual ~R_Attack();

  R_Attack(const R_Attack& from);

  inline R_Attack& operator=(const R_Attack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const R_Attack& default_instance();

  void Swap(R_Attack* other);

  // implements Message ----------------------------------------------

  inline R_Attack* New() const { return New(NULL); }

  R_Attack* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const R_Attack& from);
  void MergeFrom(const R_Attack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(R_Attack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 AttackerId = 1;
  void clear_attackerid();
  static const int kAttackerIdFieldNumber = 1;
  ::google::protobuf::int32 attackerid() const;
  void set_attackerid(::google::protobuf::int32 value);

  // optional int32 VictimId = 2;
  void clear_victimid();
  static const int kVictimIdFieldNumber = 2;
  ::google::protobuf::int32 victimid() const;
  void set_victimid(::google::protobuf::int32 value);

  // optional int32 Frame = 3;
  void clear_frame();
  static const int kFrameFieldNumber = 3;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 SkillId = 4;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 4;
  ::google::protobuf::int32 skillid() const;
  void set_skillid(::google::protobuf::int32 value);

  // optional int32 SkillLevel = 5;
  void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 5;
  ::google::protobuf::int32 skilllevel() const;
  void set_skilllevel(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 Direction = 6;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 6;
  const ::gt_msg::Vec3& direction() const;
  ::gt_msg::Vec3* mutable_direction();
  ::gt_msg::Vec3* release_direction();
  void set_allocated_direction(::gt_msg::Vec3* direction);

  // optional int32 Multiple = 7;
  void clear_multiple();
  static const int kMultipleFieldNumber = 7;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 Position = 8;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 8;
  const ::gt_msg::Vec3& position() const;
  ::gt_msg::Vec3* mutable_position();
  ::gt_msg::Vec3* release_position();
  void set_allocated_position(::gt_msg::Vec3* position);

  // optional int32 CellIndex = 9;
  void clear_cellindex();
  static const int kCellIndexFieldNumber = 9;
  ::google::protobuf::int32 cellindex() const;
  void set_cellindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.R_Attack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 attackerid_;
  ::google::protobuf::int32 victimid_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 skillid_;
  ::gt_msg::Vec3* direction_;
  ::google::protobuf::int32 skilllevel_;
  ::google::protobuf::int32 multiple_;
  ::gt_msg::Vec3* position_;
  ::google::protobuf::int32 cellindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static R_Attack* default_instance_;
};
// -------------------------------------------------------------------

class S_Attack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_Attack) */ {
 public:
  S_Attack();
  virtual ~S_Attack();

  S_Attack(const S_Attack& from);

  inline S_Attack& operator=(const S_Attack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Attack& default_instance();

  void Swap(S_Attack* other);

  // implements Message ----------------------------------------------

  inline S_Attack* New() const { return New(NULL); }

  S_Attack* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_Attack& from);
  void MergeFrom(const S_Attack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_Attack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 AttackerId = 1;
  void clear_attackerid();
  static const int kAttackerIdFieldNumber = 1;
  ::google::protobuf::int32 attackerid() const;
  void set_attackerid(::google::protobuf::int32 value);

  // optional int32 VictimId = 2;
  void clear_victimid();
  static const int kVictimIdFieldNumber = 2;
  ::google::protobuf::int32 victimid() const;
  void set_victimid(::google::protobuf::int32 value);

  // optional int32 Frame = 3;
  void clear_frame();
  static const int kFrameFieldNumber = 3;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 SkillId = 4;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 4;
  ::google::protobuf::int32 skillid() const;
  void set_skillid(::google::protobuf::int32 value);

  // optional int32 SkillLevel = 5;
  void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 5;
  ::google::protobuf::int32 skilllevel() const;
  void set_skilllevel(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 Direction = 6;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 6;
  const ::gt_msg::Vec3& direction() const;
  ::gt_msg::Vec3* mutable_direction();
  ::gt_msg::Vec3* release_direction();
  void set_allocated_direction(::gt_msg::Vec3* direction);

  // optional int32 Multiple = 7;
  void clear_multiple();
  static const int kMultipleFieldNumber = 7;
  ::google::protobuf::int32 multiple() const;
  void set_multiple(::google::protobuf::int32 value);

  // optional .gt_msg.Vec3 Position = 8;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 8;
  const ::gt_msg::Vec3& position() const;
  ::gt_msg::Vec3* mutable_position();
  ::gt_msg::Vec3* release_position();
  void set_allocated_position(::gt_msg::Vec3* position);

  // optional int32 CellIndex = 9;
  void clear_cellindex();
  static const int kCellIndexFieldNumber = 9;
  ::google::protobuf::int32 cellindex() const;
  void set_cellindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.S_Attack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 attackerid_;
  ::google::protobuf::int32 victimid_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 skillid_;
  ::gt_msg::Vec3* direction_;
  ::google::protobuf::int32 skilllevel_;
  ::google::protobuf::int32 multiple_;
  ::gt_msg::Vec3* position_;
  ::google::protobuf::int32 cellindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_Attack* default_instance_;
};
// -------------------------------------------------------------------

class S_ItemScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_ItemScore) */ {
 public:
  S_ItemScore();
  virtual ~S_ItemScore();

  S_ItemScore(const S_ItemScore& from);

  inline S_ItemScore& operator=(const S_ItemScore& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ItemScore& default_instance();

  void Swap(S_ItemScore* other);

  // implements Message ----------------------------------------------

  inline S_ItemScore* New() const { return New(NULL); }

  S_ItemScore* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_ItemScore& from);
  void MergeFrom(const S_ItemScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_ItemScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ItemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 Frame = 2;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int64 Score = 3;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // optional int32 Experience = 4;
  void clear_experience();
  static const int kExperienceFieldNumber = 4;
  ::google::protobuf::int32 experience() const;
  void set_experience(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.S_ItemScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::int32 experience_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_ItemScore* default_instance_;
};
// -------------------------------------------------------------------

class S_TestDelay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_TestDelay) */ {
 public:
  S_TestDelay();
  virtual ~S_TestDelay();

  S_TestDelay(const S_TestDelay& from);

  inline S_TestDelay& operator=(const S_TestDelay& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_TestDelay& default_instance();

  void Swap(S_TestDelay* other);

  // implements Message ----------------------------------------------

  inline S_TestDelay* New() const { return New(NULL); }

  S_TestDelay* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_TestDelay& from);
  void MergeFrom(const S_TestDelay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_TestDelay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gt_msg.S_TestDelay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_TestDelay* default_instance_;
};
// -------------------------------------------------------------------

class R_TestDelay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.R_TestDelay) */ {
 public:
  R_TestDelay();
  virtual ~R_TestDelay();

  R_TestDelay(const R_TestDelay& from);

  inline R_TestDelay& operator=(const R_TestDelay& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const R_TestDelay& default_instance();

  void Swap(R_TestDelay* other);

  // implements Message ----------------------------------------------

  inline R_TestDelay* New() const { return New(NULL); }

  R_TestDelay* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const R_TestDelay& from);
  void MergeFrom(const R_TestDelay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(R_TestDelay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gt_msg.R_TestDelay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static R_TestDelay* default_instance_;
};
// -------------------------------------------------------------------

class S_MovePosList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_MovePosList) */ {
 public:
  S_MovePosList();
  virtual ~S_MovePosList();

  S_MovePosList(const S_MovePosList& from);

  inline S_MovePosList& operator=(const S_MovePosList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_MovePosList& default_instance();

  void Swap(S_MovePosList* other);

  // implements Message ----------------------------------------------

  inline S_MovePosList* New() const { return New(NULL); }

  S_MovePosList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_MovePosList& from);
  void MergeFrom(const S_MovePosList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_MovePosList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Frame = 1;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 MoverId = 2;
  void clear_moverid();
  static const int kMoverIdFieldNumber = 2;
  ::google::protobuf::int32 moverid() const;
  void set_moverid(::google::protobuf::int32 value);

  // repeated .gt_msg.Vec3 list = 3;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 3;
  const ::gt_msg::Vec3& list(int index) const;
  ::gt_msg::Vec3* mutable_list(int index);
  ::gt_msg::Vec3* add_list();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
      list() const;

  // @@protoc_insertion_point(class_scope:gt_msg.S_MovePosList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 moverid_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 > list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_MovePosList* default_instance_;
};
// -------------------------------------------------------------------

class Victim : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Victim) */ {
 public:
  Victim();
  virtual ~Victim();

  Victim(const Victim& from);

  inline Victim& operator=(const Victim& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Victim& default_instance();

  void Swap(Victim* other);

  // implements Message ----------------------------------------------

  inline Victim* New() const { return New(NULL); }

  Victim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Victim& from);
  void MergeFrom(const Victim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Victim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 HP = 2;
  void clear_hp();
  static const int kHPFieldNumber = 2;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.Victim)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 hp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Victim* default_instance_;
};
// -------------------------------------------------------------------

class S_Hit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_Hit) */ {
 public:
  S_Hit();
  virtual ~S_Hit();

  S_Hit(const S_Hit& from);

  inline S_Hit& operator=(const S_Hit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Hit& default_instance();

  void Swap(S_Hit* other);

  // implements Message ----------------------------------------------

  inline S_Hit* New() const { return New(NULL); }

  S_Hit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_Hit& from);
  void MergeFrom(const S_Hit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_Hit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 CasterId = 1;
  void clear_casterid();
  static const int kCasterIdFieldNumber = 1;
  ::google::protobuf::int32 casterid() const;
  void set_casterid(::google::protobuf::int32 value);

  // optional int32 Frame = 2;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  ::google::protobuf::int32 frame() const;
  void set_frame(::google::protobuf::int32 value);

  // optional int32 EndFrame = 3;
  void clear_endframe();
  static const int kEndFrameFieldNumber = 3;
  ::google::protobuf::int32 endframe() const;
  void set_endframe(::google::protobuf::int32 value);

  // optional int32 SkillId = 4;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 4;
  ::google::protobuf::int32 skillid() const;
  void set_skillid(::google::protobuf::int32 value);

  // optional int64 AttackerScore = 5;
  void clear_attackerscore();
  static const int kAttackerScoreFieldNumber = 5;
  ::google::protobuf::int64 attackerscore() const;
  void set_attackerscore(::google::protobuf::int64 value);

  // repeated .gt_msg.Victim VictimList = 6;
  int victimlist_size() const;
  void clear_victimlist();
  static const int kVictimListFieldNumber = 6;
  const ::gt_msg::Victim& victimlist(int index) const;
  ::gt_msg::Victim* mutable_victimlist(int index);
  ::gt_msg::Victim* add_victimlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Victim >*
      mutable_victimlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Victim >&
      victimlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.S_Hit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 casterid_;
  ::google::protobuf::int32 frame_;
  ::google::protobuf::int32 endframe_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int64 attackerscore_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Victim > victimlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_Hit* default_instance_;
};
// -------------------------------------------------------------------

class S_LV : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.S_LV) */ {
 public:
  S_LV();
  virtual ~S_LV();

  S_LV(const S_LV& from);

  inline S_LV& operator=(const S_LV& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_LV& default_instance();

  void Swap(S_LV* other);

  // implements Message ----------------------------------------------

  inline S_LV* New() const { return New(NULL); }

  S_LV* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_LV& from);
  void MergeFrom(const S_LV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_LV* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ItemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 ItemExp = 2;
  void clear_itemexp();
  static const int kItemExpFieldNumber = 2;
  ::google::protobuf::int32 itemexp() const;
  void set_itemexp(::google::protobuf::int32 value);

  // optional int32 Level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 MaxExp = 4;
  void clear_maxexp();
  static const int kMaxExpFieldNumber = 4;
  ::google::protobuf::int32 maxexp() const;
  void set_maxexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.S_LV)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemexp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 maxexp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static S_LV* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SkillData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_SkillData) */ {
 public:
  Proto_SkillData();
  virtual ~Proto_SkillData();

  Proto_SkillData(const Proto_SkillData& from);

  inline Proto_SkillData& operator=(const Proto_SkillData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SkillData& default_instance();

  void Swap(Proto_SkillData* other);

  // implements Message ----------------------------------------------

  inline Proto_SkillData* New() const { return New(NULL); }

  Proto_SkillData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SkillData& from);
  void MergeFrom(const Proto_SkillData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_SkillData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 lev = 2;
  void clear_lev();
  static const int kLevFieldNumber = 2;
  ::google::protobuf::int32 lev() const;
  void set_lev(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_SkillData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lev_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_SkillData* default_instance_;
};
// -------------------------------------------------------------------

class Proto_Monster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_Monster) */ {
 public:
  Proto_Monster();
  virtual ~Proto_Monster();

  Proto_Monster(const Proto_Monster& from);

  inline Proto_Monster& operator=(const Proto_Monster& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_Monster& default_instance();

  void Swap(Proto_Monster* other);

  // implements Message ----------------------------------------------

  inline Proto_Monster* New() const { return New(NULL); }

  Proto_Monster* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_Monster& from);
  void MergeFrom(const Proto_Monster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_Monster* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .gt_msg.JobType job = 3;
  void clear_job();
  static const int kJobFieldNumber = 3;
  ::gt_msg::JobType job() const;
  void set_job(::gt_msg::JobType value);

  // optional int32 scal = 4;
  void clear_scal();
  static const int kScalFieldNumber = 4;
  ::google::protobuf::int32 scal() const;
  void set_scal(::google::protobuf::int32 value);

  // optional int32 exp = 5;
  void clear_exp();
  static const int kExpFieldNumber = 5;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // optional .gt_msg.Object_Type_Enum objType = 6;
  void clear_objtype();
  static const int kObjTypeFieldNumber = 6;
  ::gt_msg::Object_Type_Enum objtype() const;
  void set_objtype(::gt_msg::Object_Type_Enum value);

  // optional string modleName = 7;
  void clear_modlename();
  static const int kModleNameFieldNumber = 7;
  const ::std::string& modlename() const;
  void set_modlename(const ::std::string& value);
  void set_modlename(const char* value);
  void set_modlename(const char* value, size_t size);
  ::std::string* mutable_modlename();
  ::std::string* release_modlename();
  void set_allocated_modlename(::std::string* modlename);

  // optional int32 level = 8;
  void clear_level();
  static const int kLevelFieldNumber = 8;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 maxHp = 9;
  void clear_maxhp();
  static const int kMaxHpFieldNumber = 9;
  ::google::protobuf::int32 maxhp() const;
  void set_maxhp(::google::protobuf::int32 value);

  // optional int32 attack = 10;
  void clear_attack();
  static const int kAttackFieldNumber = 10;
  ::google::protobuf::int32 attack() const;
  void set_attack(::google::protobuf::int32 value);

  // optional int32 magicAtk = 11;
  void clear_magicatk();
  static const int kMagicAtkFieldNumber = 11;
  ::google::protobuf::int32 magicatk() const;
  void set_magicatk(::google::protobuf::int32 value);

  // optional int32 physicsDef = 12;
  void clear_physicsdef();
  static const int kPhysicsDefFieldNumber = 12;
  ::google::protobuf::int32 physicsdef() const;
  void set_physicsdef(::google::protobuf::int32 value);

  // optional int32 magicDef = 13;
  void clear_magicdef();
  static const int kMagicDefFieldNumber = 13;
  ::google::protobuf::int32 magicdef() const;
  void set_magicdef(::google::protobuf::int32 value);

  // optional float hitRate = 14;
  void clear_hitrate();
  static const int kHitRateFieldNumber = 14;
  float hitrate() const;
  void set_hitrate(float value);

  // optional float dodge = 15;
  void clear_dodge();
  static const int kDodgeFieldNumber = 15;
  float dodge() const;
  void set_dodge(float value);

  // optional float burstsRate = 16;
  void clear_burstsrate();
  static const int kBurstsRateFieldNumber = 16;
  float burstsrate() const;
  void set_burstsrate(float value);

  // optional int32 moveSpeed = 17;
  void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 17;
  ::google::protobuf::int32 movespeed() const;
  void set_movespeed(::google::protobuf::int32 value);

  // optional int32 aiID = 18;
  void clear_aiid();
  static const int kAiIDFieldNumber = 18;
  ::google::protobuf::int32 aiid() const;
  void set_aiid(::google::protobuf::int32 value);

  // optional float actionDistance = 19;
  void clear_actiondistance();
  static const int kActionDistanceFieldNumber = 19;
  float actiondistance() const;
  void set_actiondistance(float value);

  // optional float minActionTime = 20;
  void clear_minactiontime();
  static const int kMinActionTimeFieldNumber = 20;
  float minactiontime() const;
  void set_minactiontime(float value);

  // repeated .gt_msg.Proto_SkillData skillList = 21;
  int skilllist_size() const;
  void clear_skilllist();
  static const int kSkillListFieldNumber = 21;
  const ::gt_msg::Proto_SkillData& skilllist(int index) const;
  ::gt_msg::Proto_SkillData* mutable_skilllist(int index);
  ::gt_msg::Proto_SkillData* add_skilllist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
      mutable_skilllist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
      skilllist() const;

  // optional string birthEffectName = 22;
  void clear_birtheffectname();
  static const int kBirthEffectNameFieldNumber = 22;
  const ::std::string& birtheffectname() const;
  void set_birtheffectname(const ::std::string& value);
  void set_birtheffectname(const char* value);
  void set_birtheffectname(const char* value, size_t size);
  ::std::string* mutable_birtheffectname();
  ::std::string* release_birtheffectname();
  void set_allocated_birtheffectname(::std::string* birtheffectname);

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_Monster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  int job_;
  ::google::protobuf::int32 scal_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::internal::ArenaStringPtr modlename_;
  int objtype_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 maxhp_;
  ::google::protobuf::int32 attack_;
  ::google::protobuf::int32 magicatk_;
  ::google::protobuf::int32 physicsdef_;
  ::google::protobuf::int32 magicdef_;
  float hitrate_;
  float dodge_;
  float burstsrate_;
  ::google::protobuf::int32 movespeed_;
  ::google::protobuf::int32 aiid_;
  float actiondistance_;
  float minactiontime_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData > skilllist_;
  ::google::protobuf::internal::ArenaStringPtr birtheffectname_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_Monster* default_instance_;
};
// -------------------------------------------------------------------

class Proto_MonsterList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_MonsterList) */ {
 public:
  Proto_MonsterList();
  virtual ~Proto_MonsterList();

  Proto_MonsterList(const Proto_MonsterList& from);

  inline Proto_MonsterList& operator=(const Proto_MonsterList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_MonsterList& default_instance();

  void Swap(Proto_MonsterList* other);

  // implements Message ----------------------------------------------

  inline Proto_MonsterList* New() const { return New(NULL); }

  Proto_MonsterList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_MonsterList& from);
  void MergeFrom(const Proto_MonsterList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_MonsterList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.Proto_Monster dic = 1;
  int dic_size() const;
  void clear_dic();
  static const int kDicFieldNumber = 1;
  const ::gt_msg::Proto_Monster& dic(int index) const;
  ::gt_msg::Proto_Monster* mutable_dic(int index);
  ::gt_msg::Proto_Monster* add_dic();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Monster >*
      mutable_dic();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Monster >&
      dic() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_MonsterList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Monster > dic_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_MonsterList* default_instance_;
};
// -------------------------------------------------------------------

class Proto_BuffData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_BuffData) */ {
 public:
  Proto_BuffData();
  virtual ~Proto_BuffData();

  Proto_BuffData(const Proto_BuffData& from);

  inline Proto_BuffData& operator=(const Proto_BuffData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_BuffData& default_instance();

  void Swap(Proto_BuffData* other);

  // implements Message ----------------------------------------------

  inline Proto_BuffData* New() const { return New(NULL); }

  Proto_BuffData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_BuffData& from);
  void MergeFrom(const Proto_BuffData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_BuffData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 lev = 2;
  void clear_lev();
  static const int kLevFieldNumber = 2;
  ::google::protobuf::int32 lev() const;
  void set_lev(::google::protobuf::int32 value);

  // optional float time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  float time() const;
  void set_time(float value);

  // optional int32 targetType = 4;
  void clear_targettype();
  static const int kTargetTypeFieldNumber = 4;
  ::google::protobuf::int32 targettype() const;
  void set_targettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_BuffData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lev_;
  float time_;
  ::google::protobuf::int32 targettype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_BuffData* default_instance_;
};
// -------------------------------------------------------------------

class Proto_Skill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_Skill) */ {
 public:
  Proto_Skill();
  virtual ~Proto_Skill();

  Proto_Skill(const Proto_Skill& from);

  inline Proto_Skill& operator=(const Proto_Skill& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_Skill& default_instance();

  void Swap(Proto_Skill* other);

  // implements Message ----------------------------------------------

  inline Proto_Skill* New() const { return New(NULL); }

  Proto_Skill* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_Skill& from);
  void MergeFrom(const Proto_Skill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_Skill* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional int32 maxLevel = 4;
  void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 4;
  ::google::protobuf::int32 maxlevel() const;
  void set_maxlevel(::google::protobuf::int32 value);

  // optional .gt_msg.SkillType type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::gt_msg::SkillType type() const;
  void set_type(::gt_msg::SkillType value);

  // optional .gt_msg.RangeType rangeType = 6;
  void clear_rangetype();
  static const int kRangeTypeFieldNumber = 6;
  ::gt_msg::RangeType rangetype() const;
  void set_rangetype(::gt_msg::RangeType value);

  // optional .gt_msg.SkillEffect_Type effectType = 7;
  void clear_effecttype();
  static const int kEffectTypeFieldNumber = 7;
  ::gt_msg::SkillEffect_Type effecttype() const;
  void set_effecttype(::gt_msg::SkillEffect_Type value);

  // optional .gt_msg.DamageType damageType = 8;
  void clear_damagetype();
  static const int kDamageTypeFieldNumber = 8;
  ::gt_msg::DamageType damagetype() const;
  void set_damagetype(::gt_msg::DamageType value);

  // optional bool break = 9;
  void clear_break_();
  static const int kBreakFieldNumber = 9;
  bool break_() const;
  void set_break_(bool value);

  // optional bool isNeedTarget = 10;
  void clear_isneedtarget();
  static const int kIsNeedTargetFieldNumber = 10;
  bool isneedtarget() const;
  void set_isneedtarget(bool value);

  // optional int32 consumeDander = 11;
  void clear_consumedander();
  static const int kConsumeDanderFieldNumber = 11;
  ::google::protobuf::int32 consumedander() const;
  void set_consumedander(::google::protobuf::int32 value);

  // optional int32 effectID = 12;
  void clear_effectid();
  static const int kEffectIDFieldNumber = 12;
  ::google::protobuf::int32 effectid() const;
  void set_effectid(::google::protobuf::int32 value);

  // optional float intonateTime = 13;
  void clear_intonatetime();
  static const int kIntonateTimeFieldNumber = 13;
  float intonatetime() const;
  void set_intonatetime(float value);

  // optional float range = 14;
  void clear_range();
  static const int kRangeFieldNumber = 14;
  float range() const;
  void set_range(float value);

  // optional float levRange = 15;
  void clear_levrange();
  static const int kLevRangeFieldNumber = 15;
  float levrange() const;
  void set_levrange(float value);

  // optional float castDistance = 16;
  void clear_castdistance();
  static const int kCastDistanceFieldNumber = 16;
  float castdistance() const;
  void set_castdistance(float value);

  // optional float levCastDistance = 17;
  void clear_levcastdistance();
  static const int kLevCastDistanceFieldNumber = 17;
  float levcastdistance() const;
  void set_levcastdistance(float value);

  // optional float coolingTime = 18;
  void clear_coolingtime();
  static const int kCoolingTimeFieldNumber = 18;
  float coolingtime() const;
  void set_coolingtime(float value);

  // optional float levCoolingTime = 19;
  void clear_levcoolingtime();
  static const int kLevCoolingTimeFieldNumber = 19;
  float levcoolingtime() const;
  void set_levcoolingtime(float value);

  // optional float standingTime = 20;
  void clear_standingtime();
  static const int kStandingTimeFieldNumber = 20;
  float standingtime() const;
  void set_standingtime(float value);

  // optional float levStandingTime = 21;
  void clear_levstandingtime();
  static const int kLevStandingTimeFieldNumber = 21;
  float levstandingtime() const;
  void set_levstandingtime(float value);

  // optional float damage = 22;
  void clear_damage();
  static const int kDamageFieldNumber = 22;
  float damage() const;
  void set_damage(float value);

  // optional float levDamage = 23;
  void clear_levdamage();
  static const int kLevDamageFieldNumber = 23;
  float levdamage() const;
  void set_levdamage(float value);

  // optional float percent = 24;
  void clear_percent();
  static const int kPercentFieldNumber = 24;
  float percent() const;
  void set_percent(float value);

  // optional float levPercent = 25;
  void clear_levpercent();
  static const int kLevPercentFieldNumber = 25;
  float levpercent() const;
  void set_levpercent(float value);

  // optional .gt_msg.Proto_BuffData buffList = 26;
  bool has_bufflist() const;
  void clear_bufflist();
  static const int kBuffListFieldNumber = 26;
  const ::gt_msg::Proto_BuffData& bufflist() const;
  ::gt_msg::Proto_BuffData* mutable_bufflist();
  ::gt_msg::Proto_BuffData* release_bufflist();
  void set_allocated_bufflist(::gt_msg::Proto_BuffData* bufflist);

  // optional string sound = 27;
  void clear_sound();
  static const int kSoundFieldNumber = 27;
  const ::std::string& sound() const;
  void set_sound(const ::std::string& value);
  void set_sound(const char* value);
  void set_sound(const char* value, size_t size);
  ::std::string* mutable_sound();
  ::std::string* release_sound();
  void set_allocated_sound(::std::string* sound);

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_Skill)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 maxlevel_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int type_;
  int rangetype_;
  int effecttype_;
  int damagetype_;
  bool break__;
  bool isneedtarget_;
  ::google::protobuf::int32 consumedander_;
  ::google::protobuf::int32 effectid_;
  float intonatetime_;
  float range_;
  float levrange_;
  float castdistance_;
  float levcastdistance_;
  float coolingtime_;
  float levcoolingtime_;
  float standingtime_;
  float levstandingtime_;
  float damage_;
  float levdamage_;
  float percent_;
  float levpercent_;
  ::gt_msg::Proto_BuffData* bufflist_;
  ::google::protobuf::internal::ArenaStringPtr sound_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_Skill* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SkillList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_SkillList) */ {
 public:
  Proto_SkillList();
  virtual ~Proto_SkillList();

  Proto_SkillList(const Proto_SkillList& from);

  inline Proto_SkillList& operator=(const Proto_SkillList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SkillList& default_instance();

  void Swap(Proto_SkillList* other);

  // implements Message ----------------------------------------------

  inline Proto_SkillList* New() const { return New(NULL); }

  Proto_SkillList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SkillList& from);
  void MergeFrom(const Proto_SkillList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_SkillList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.Proto_Skill dic = 1;
  int dic_size() const;
  void clear_dic();
  static const int kDicFieldNumber = 1;
  const ::gt_msg::Proto_Skill& dic(int index) const;
  ::gt_msg::Proto_Skill* mutable_dic(int index);
  ::gt_msg::Proto_Skill* add_dic();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Skill >*
      mutable_dic();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Skill >&
      dic() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_SkillList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Skill > dic_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_SkillList* default_instance_;
};
// -------------------------------------------------------------------

class Proto_FlyInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_FlyInfo) */ {
 public:
  Proto_FlyInfo();
  virtual ~Proto_FlyInfo();

  Proto_FlyInfo(const Proto_FlyInfo& from);

  inline Proto_FlyInfo& operator=(const Proto_FlyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_FlyInfo& default_instance();

  void Swap(Proto_FlyInfo* other);

  // implements Message ----------------------------------------------

  inline Proto_FlyInfo* New() const { return New(NULL); }

  Proto_FlyInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_FlyInfo& from);
  void MergeFrom(const Proto_FlyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_FlyInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string effectName = 1;
  void clear_effectname();
  static const int kEffectNameFieldNumber = 1;
  const ::std::string& effectname() const;
  void set_effectname(const ::std::string& value);
  void set_effectname(const char* value);
  void set_effectname(const char* value, size_t size);
  ::std::string* mutable_effectname();
  ::std::string* release_effectname();
  void set_allocated_effectname(::std::string* effectname);

  // optional int32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_FlyInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr effectname_;
  ::google::protobuf::int32 num_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_FlyInfo* default_instance_;
};
// -------------------------------------------------------------------

class Proto_EffectData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_EffectData) */ {
 public:
  Proto_EffectData();
  virtual ~Proto_EffectData();

  Proto_EffectData(const Proto_EffectData& from);

  inline Proto_EffectData& operator=(const Proto_EffectData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_EffectData& default_instance();

  void Swap(Proto_EffectData* other);

  // implements Message ----------------------------------------------

  inline Proto_EffectData* New() const { return New(NULL); }

  Proto_EffectData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_EffectData& from);
  void MergeFrom(const Proto_EffectData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_EffectData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string effectName = 1;
  void clear_effectname();
  static const int kEffectNameFieldNumber = 1;
  const ::std::string& effectname() const;
  void set_effectname(const ::std::string& value);
  void set_effectname(const char* value);
  void set_effectname(const char* value, size_t size);
  ::std::string* mutable_effectname();
  ::std::string* release_effectname();
  void set_allocated_effectname(::std::string* effectname);

  // optional .gt_msg.AddonIndexEnum addon = 2;
  void clear_addon();
  static const int kAddonFieldNumber = 2;
  ::gt_msg::AddonIndexEnum addon() const;
  void set_addon(::gt_msg::AddonIndexEnum value);

  // optional .gt_msg.Vec3 offset = 3;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  const ::gt_msg::Vec3& offset() const;
  ::gt_msg::Vec3* mutable_offset();
  ::gt_msg::Vec3* release_offset();
  void set_allocated_offset(::gt_msg::Vec3* offset);

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_EffectData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr effectname_;
  ::gt_msg::Vec3* offset_;
  int addon_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_EffectData* default_instance_;
};
// -------------------------------------------------------------------

class Proto_EffectInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_EffectInfo) */ {
 public:
  Proto_EffectInfo();
  virtual ~Proto_EffectInfo();

  Proto_EffectInfo(const Proto_EffectInfo& from);

  inline Proto_EffectInfo& operator=(const Proto_EffectInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_EffectInfo& default_instance();

  void Swap(Proto_EffectInfo* other);

  // implements Message ----------------------------------------------

  inline Proto_EffectInfo* New() const { return New(NULL); }

  Proto_EffectInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_EffectInfo& from);
  void MergeFrom(const Proto_EffectInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_EffectInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .gt_msg.AnimationType animation = 1;
  void clear_animation();
  static const int kAnimationFieldNumber = 1;
  ::gt_msg::AnimationType animation() const;
  void set_animation(::gt_msg::AnimationType value);

  // optional float duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // repeated .gt_msg.Proto_EffectData effectList = 3;
  int effectlist_size() const;
  void clear_effectlist();
  static const int kEffectListFieldNumber = 3;
  const ::gt_msg::Proto_EffectData& effectlist(int index) const;
  ::gt_msg::Proto_EffectData* mutable_effectlist(int index);
  ::gt_msg::Proto_EffectData* add_effectlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_EffectData >*
      mutable_effectlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_EffectData >&
      effectlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_EffectInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int animation_;
  float duration_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_EffectData > effectlist_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_EffectInfo* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SkillEffect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_SkillEffect) */ {
 public:
  Proto_SkillEffect();
  virtual ~Proto_SkillEffect();

  Proto_SkillEffect(const Proto_SkillEffect& from);

  inline Proto_SkillEffect& operator=(const Proto_SkillEffect& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SkillEffect& default_instance();

  void Swap(Proto_SkillEffect* other);

  // implements Message ----------------------------------------------

  inline Proto_SkillEffect* New() const { return New(NULL); }

  Proto_SkillEffect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SkillEffect& from);
  void MergeFrom(const Proto_SkillEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_SkillEffect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string beatenEffectName = 3;
  void clear_beateneffectname();
  static const int kBeatenEffectNameFieldNumber = 3;
  const ::std::string& beateneffectname() const;
  void set_beateneffectname(const ::std::string& value);
  void set_beateneffectname(const char* value);
  void set_beateneffectname(const char* value, size_t size);
  ::std::string* mutable_beateneffectname();
  ::std::string* release_beateneffectname();
  void set_allocated_beateneffectname(::std::string* beateneffectname);

  // optional .gt_msg.AddonIndexEnum flyAddon = 4;
  void clear_flyaddon();
  static const int kFlyAddonFieldNumber = 4;
  ::gt_msg::AddonIndexEnum flyaddon() const;
  void set_flyaddon(::gt_msg::AddonIndexEnum value);

  // optional float flySpeed = 5;
  void clear_flyspeed();
  static const int kFlySpeedFieldNumber = 5;
  float flyspeed() const;
  void set_flyspeed(float value);

  // optional .gt_msg.Proto_EffectInfo firstEffect = 6;
  bool has_firsteffect() const;
  void clear_firsteffect();
  static const int kFirstEffectFieldNumber = 6;
  const ::gt_msg::Proto_EffectInfo& firsteffect() const;
  ::gt_msg::Proto_EffectInfo* mutable_firsteffect();
  ::gt_msg::Proto_EffectInfo* release_firsteffect();
  void set_allocated_firsteffect(::gt_msg::Proto_EffectInfo* firsteffect);

  // optional .gt_msg.Proto_EffectInfo damageEffect = 7;
  bool has_damageeffect() const;
  void clear_damageeffect();
  static const int kDamageEffectFieldNumber = 7;
  const ::gt_msg::Proto_EffectInfo& damageeffect() const;
  ::gt_msg::Proto_EffectInfo* mutable_damageeffect();
  ::gt_msg::Proto_EffectInfo* release_damageeffect();
  void set_allocated_damageeffect(::gt_msg::Proto_EffectInfo* damageeffect);

  // optional .gt_msg.Proto_EffectInfo durationEffect = 8;
  bool has_durationeffect() const;
  void clear_durationeffect();
  static const int kDurationEffectFieldNumber = 8;
  const ::gt_msg::Proto_EffectInfo& durationeffect() const;
  ::gt_msg::Proto_EffectInfo* mutable_durationeffect();
  ::gt_msg::Proto_EffectInfo* release_durationeffect();
  void set_allocated_durationeffect(::gt_msg::Proto_EffectInfo* durationeffect);

  // optional .gt_msg.Proto_FlyInfo flyList = 9;
  bool has_flylist() const;
  void clear_flylist();
  static const int kFlyListFieldNumber = 9;
  const ::gt_msg::Proto_FlyInfo& flylist() const;
  ::gt_msg::Proto_FlyInfo* mutable_flylist();
  ::gt_msg::Proto_FlyInfo* release_flylist();
  void set_allocated_flylist(::gt_msg::Proto_FlyInfo* flylist);

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_SkillEffect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int32 id_;
  int flyaddon_;
  ::google::protobuf::internal::ArenaStringPtr beateneffectname_;
  ::gt_msg::Proto_EffectInfo* firsteffect_;
  ::gt_msg::Proto_EffectInfo* damageeffect_;
  ::gt_msg::Proto_EffectInfo* durationeffect_;
  ::gt_msg::Proto_FlyInfo* flylist_;
  float flyspeed_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_SkillEffect* default_instance_;
};
// -------------------------------------------------------------------

class Proto_SkillEffectList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_SkillEffectList) */ {
 public:
  Proto_SkillEffectList();
  virtual ~Proto_SkillEffectList();

  Proto_SkillEffectList(const Proto_SkillEffectList& from);

  inline Proto_SkillEffectList& operator=(const Proto_SkillEffectList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_SkillEffectList& default_instance();

  void Swap(Proto_SkillEffectList* other);

  // implements Message ----------------------------------------------

  inline Proto_SkillEffectList* New() const { return New(NULL); }

  Proto_SkillEffectList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_SkillEffectList& from);
  void MergeFrom(const Proto_SkillEffectList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_SkillEffectList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.Proto_SkillEffect dic = 1;
  int dic_size() const;
  void clear_dic();
  static const int kDicFieldNumber = 1;
  const ::gt_msg::Proto_SkillEffect& dic(int index) const;
  ::gt_msg::Proto_SkillEffect* mutable_dic(int index);
  ::gt_msg::Proto_SkillEffect* add_dic();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillEffect >*
      mutable_dic();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillEffect >&
      dic() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_SkillEffectList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillEffect > dic_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_SkillEffectList* default_instance_;
};
// -------------------------------------------------------------------

class Proto_BufEffect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_BufEffect) */ {
 public:
  Proto_BufEffect();
  virtual ~Proto_BufEffect();

  Proto_BufEffect(const Proto_BufEffect& from);

  inline Proto_BufEffect& operator=(const Proto_BufEffect& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_BufEffect& default_instance();

  void Swap(Proto_BufEffect* other);

  // implements Message ----------------------------------------------

  inline Proto_BufEffect* New() const { return New(NULL); }

  Proto_BufEffect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_BufEffect& from);
  void MergeFrom(const Proto_BufEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_BufEffect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iD = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 param1 = 3;
  void clear_param1();
  static const int kParam1FieldNumber = 3;
  ::google::protobuf::int32 param1() const;
  void set_param1(::google::protobuf::int32 value);

  // optional float param2 = 4;
  void clear_param2();
  static const int kParam2FieldNumber = 4;
  float param2() const;
  void set_param2(float value);

  // optional float levParam2 = 5;
  void clear_levparam2();
  static const int kLevParam2FieldNumber = 5;
  float levparam2() const;
  void set_levparam2(float value);

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_BufEffect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 param1_;
  float param2_;
  float levparam2_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_BufEffect* default_instance_;
};
// -------------------------------------------------------------------

class Proto_Buf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_Buf) */ {
 public:
  Proto_Buf();
  virtual ~Proto_Buf();

  Proto_Buf(const Proto_Buf& from);

  inline Proto_Buf& operator=(const Proto_Buf& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_Buf& default_instance();

  void Swap(Proto_Buf* other);

  // implements Message ----------------------------------------------

  inline Proto_Buf* New() const { return New(NULL); }

  Proto_Buf* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_Buf& from);
  void MergeFrom(const Proto_Buf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_Buf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional int32 maxLevel = 4;
  void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 4;
  ::google::protobuf::int32 maxlevel() const;
  void set_maxlevel(::google::protobuf::int32 value);

  // optional .gt_msg.BenefitType benefitType = 5;
  void clear_benefittype();
  static const int kBenefitTypeFieldNumber = 5;
  ::gt_msg::BenefitType benefittype() const;
  void set_benefittype(::gt_msg::BenefitType value);

  // optional .gt_msg.ReplaceType replaceType = 6;
  void clear_replacetype();
  static const int kReplaceTypeFieldNumber = 6;
  ::gt_msg::ReplaceType replacetype() const;
  void set_replacetype(::gt_msg::ReplaceType value);

  // optional string effectName = 7;
  void clear_effectname();
  static const int kEffectNameFieldNumber = 7;
  const ::std::string& effectname() const;
  void set_effectname(const ::std::string& value);
  void set_effectname(const char* value);
  void set_effectname(const char* value, size_t size);
  ::std::string* mutable_effectname();
  ::std::string* release_effectname();
  void set_allocated_effectname(::std::string* effectname);

  // optional int32 damage = 8;
  void clear_damage();
  static const int kDamageFieldNumber = 8;
  ::google::protobuf::int32 damage() const;
  void set_damage(::google::protobuf::int32 value);

  // optional bool isPercent = 9;
  void clear_ispercent();
  static const int kIsPercentFieldNumber = 9;
  bool ispercent() const;
  void set_ispercent(bool value);

  // optional .gt_msg.DamageType damageType = 10;
  void clear_damagetype();
  static const int kDamageTypeFieldNumber = 10;
  ::gt_msg::DamageType damagetype() const;
  void set_damagetype(::gt_msg::DamageType value);

  // optional .gt_msg.InfluenceType influenceType = 11;
  void clear_influencetype();
  static const int kInfluenceTypeFieldNumber = 11;
  ::gt_msg::InfluenceType influencetype() const;
  void set_influencetype(::gt_msg::InfluenceType value);

  // optional float cycleTime = 12;
  void clear_cycletime();
  static const int kCycleTimeFieldNumber = 12;
  float cycletime() const;
  void set_cycletime(float value);

  // optional .gt_msg.Vec3 offset = 13;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 13;
  const ::gt_msg::Vec3& offset() const;
  ::gt_msg::Vec3* mutable_offset();
  ::gt_msg::Vec3* release_offset();
  void set_allocated_offset(::gt_msg::Vec3* offset);

  // repeated .gt_msg.Proto_BufEffect effectList = 14;
  int effectlist_size() const;
  void clear_effectlist();
  static const int kEffectListFieldNumber = 14;
  const ::gt_msg::Proto_BufEffect& effectlist(int index) const;
  ::gt_msg::Proto_BufEffect* mutable_effectlist(int index);
  ::gt_msg::Proto_BufEffect* add_effectlist();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_BufEffect >*
      mutable_effectlist();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_BufEffect >&
      effectlist() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_Buf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 maxlevel_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int benefittype_;
  int replacetype_;
  ::google::protobuf::internal::ArenaStringPtr effectname_;
  ::google::protobuf::int32 damage_;
  bool ispercent_;
  int damagetype_;
  int influencetype_;
  ::gt_msg::Vec3* offset_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_BufEffect > effectlist_;
  float cycletime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_Buf* default_instance_;
};
// -------------------------------------------------------------------

class Proto_BufList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_BufList) */ {
 public:
  Proto_BufList();
  virtual ~Proto_BufList();

  Proto_BufList(const Proto_BufList& from);

  inline Proto_BufList& operator=(const Proto_BufList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_BufList& default_instance();

  void Swap(Proto_BufList* other);

  // implements Message ----------------------------------------------

  inline Proto_BufList* New() const { return New(NULL); }

  Proto_BufList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_BufList& from);
  void MergeFrom(const Proto_BufList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_BufList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.Proto_Buf dic = 1;
  int dic_size() const;
  void clear_dic();
  static const int kDicFieldNumber = 1;
  const ::gt_msg::Proto_Buf& dic(int index) const;
  ::gt_msg::Proto_Buf* mutable_dic(int index);
  ::gt_msg::Proto_Buf* add_dic();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Buf >*
      mutable_dic();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Buf >&
      dic() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_BufList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Buf > dic_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_BufList* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LearnSkill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_LearnSkill) */ {
 public:
  Proto_LearnSkill();
  virtual ~Proto_LearnSkill();

  Proto_LearnSkill(const Proto_LearnSkill& from);

  inline Proto_LearnSkill& operator=(const Proto_LearnSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LearnSkill& default_instance();

  void Swap(Proto_LearnSkill* other);

  // implements Message ----------------------------------------------

  inline Proto_LearnSkill* New() const { return New(NULL); }

  Proto_LearnSkill* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LearnSkill& from);
  void MergeFrom(const Proto_LearnSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_LearnSkill* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // repeated .gt_msg.Proto_SkillData fixedSkill = 2;
  int fixedskill_size() const;
  void clear_fixedskill();
  static const int kFixedSkillFieldNumber = 2;
  const ::gt_msg::Proto_SkillData& fixedskill(int index) const;
  ::gt_msg::Proto_SkillData* mutable_fixedskill(int index);
  ::gt_msg::Proto_SkillData* add_fixedskill();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
      mutable_fixedskill();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
      fixedskill() const;

  // repeated .gt_msg.Proto_SkillData learnSkill = 3;
  int learnskill_size() const;
  void clear_learnskill();
  static const int kLearnSkillFieldNumber = 3;
  const ::gt_msg::Proto_SkillData& learnskill(int index) const;
  ::gt_msg::Proto_SkillData* mutable_learnskill(int index);
  ::gt_msg::Proto_SkillData* add_learnskill();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
      mutable_learnskill();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
      learnskill() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_LearnSkill)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData > fixedskill_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData > learnskill_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_LearnSkill* default_instance_;
};
// -------------------------------------------------------------------

class Proto_LearnSkillList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gt_msg.Proto_LearnSkillList) */ {
 public:
  Proto_LearnSkillList();
  virtual ~Proto_LearnSkillList();

  Proto_LearnSkillList(const Proto_LearnSkillList& from);

  inline Proto_LearnSkillList& operator=(const Proto_LearnSkillList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto_LearnSkillList& default_instance();

  void Swap(Proto_LearnSkillList* other);

  // implements Message ----------------------------------------------

  inline Proto_LearnSkillList* New() const { return New(NULL); }

  Proto_LearnSkillList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto_LearnSkillList& from);
  void MergeFrom(const Proto_LearnSkillList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Proto_LearnSkillList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gt_msg.Proto_LearnSkill dic = 1;
  int dic_size() const;
  void clear_dic();
  static const int kDicFieldNumber = 1;
  const ::gt_msg::Proto_LearnSkill& dic(int index) const;
  ::gt_msg::Proto_LearnSkill* mutable_dic(int index);
  ::gt_msg::Proto_LearnSkill* add_dic();
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_LearnSkill >*
      mutable_dic();
  const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_LearnSkill >&
      dic() const;

  // @@protoc_insertion_point(class_scope:gt_msg.Proto_LearnSkillList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_LearnSkill > dic_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gt_5fbuyu_2eproto();
  friend void protobuf_AssignDesc_gt_5fbuyu_2eproto();
  friend void protobuf_ShutdownFile_gt_5fbuyu_2eproto();

  void InitAsDefaultInstance();
  static Proto_LearnSkillList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Vec2

// optional float x = 1;
inline void Vec2::clear_x() {
  x_ = 0;
}
inline float Vec2::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec2.x)
  return x_;
}
inline void Vec2::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec2.x)
}

// optional float y = 2;
inline void Vec2::clear_y() {
  y_ = 0;
}
inline float Vec2::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec2.y)
  return y_;
}
inline void Vec2::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec2.y)
}

// -------------------------------------------------------------------

// Vec3

// optional float x = 1;
inline void Vec3::clear_x() {
  x_ = 0;
}
inline float Vec3::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.x)
  return x_;
}
inline void Vec3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.x)
}

// optional float y = 2;
inline void Vec3::clear_y() {
  y_ = 0;
}
inline float Vec3::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.y)
  return y_;
}
inline void Vec3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.y)
}

// optional float z = 3;
inline void Vec3::clear_z() {
  z_ = 0;
}
inline float Vec3::z() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.z)
  return z_;
}
inline void Vec3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.z)
}

// -------------------------------------------------------------------

// TestPoint

// optional int32 Id = 1;
inline void TestPoint::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 TestPoint::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.TestPoint.Id)
  return id_;
}
inline void TestPoint::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TestPoint.Id)
}

// optional .gt_msg.Vec3 Point = 2;
inline bool TestPoint::has_point() const {
  return !_is_default_instance_ && point_ != NULL;
}
inline void TestPoint::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
inline const ::gt_msg::Vec3& TestPoint::point() const {
  // @@protoc_insertion_point(field_get:gt_msg.TestPoint.Point)
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::gt_msg::Vec3* TestPoint::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.TestPoint.Point)
  return point_;
}
inline ::gt_msg::Vec3* TestPoint::release_point() {
  // @@protoc_insertion_point(field_release:gt_msg.TestPoint.Point)
  
  ::gt_msg::Vec3* temp = point_;
  point_ = NULL;
  return temp;
}
inline void TestPoint::set_allocated_point(::gt_msg::Vec3* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.TestPoint.Point)
}

// -------------------------------------------------------------------

// ColliderCircle

// optional .gt_msg.Vec3 Offset = 1;
inline bool ColliderCircle::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
inline void ColliderCircle::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
inline const ::gt_msg::Vec3& ColliderCircle::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.ColliderCircle.Offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
inline ::gt_msg::Vec3* ColliderCircle::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.ColliderCircle.Offset)
  return offset_;
}
inline ::gt_msg::Vec3* ColliderCircle::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.ColliderCircle.Offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline void ColliderCircle::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ColliderCircle.Offset)
}

// optional float Radius = 2;
inline void ColliderCircle::clear_radius() {
  radius_ = 0;
}
inline float ColliderCircle::radius() const {
  // @@protoc_insertion_point(field_get:gt_msg.ColliderCircle.Radius)
  return radius_;
}
inline void ColliderCircle::set_radius(float value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ColliderCircle.Radius)
}

// -------------------------------------------------------------------

// Quate

// optional float x = 1;
inline void Quate::clear_x() {
  x_ = 0;
}
inline float Quate::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.x)
  return x_;
}
inline void Quate::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.x)
}

// optional float y = 2;
inline void Quate::clear_y() {
  y_ = 0;
}
inline float Quate::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.y)
  return y_;
}
inline void Quate::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.y)
}

// optional float z = 3;
inline void Quate::clear_z() {
  z_ = 0;
}
inline float Quate::z() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.z)
  return z_;
}
inline void Quate::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.z)
}

// optional float w = 4;
inline void Quate::clear_w() {
  w_ = 0;
}
inline float Quate::w() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.w)
  return w_;
}
inline void Quate::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.w)
}

// -------------------------------------------------------------------

// Size

// optional float widht = 1;
inline void Size::clear_widht() {
  widht_ = 0;
}
inline float Size::widht() const {
  // @@protoc_insertion_point(field_get:gt_msg.Size.widht)
  return widht_;
}
inline void Size::set_widht(float value) {
  
  widht_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Size.widht)
}

// optional float height = 2;
inline void Size::clear_height() {
  height_ = 0;
}
inline float Size::height() const {
  // @@protoc_insertion_point(field_get:gt_msg.Size.height)
  return height_;
}
inline void Size::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Size.height)
}

// -------------------------------------------------------------------

// PointInfo

// optional float x = 1;
inline void PointInfo::clear_x() {
  x_ = 0;
}
inline float PointInfo::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.PointInfo.x)
  return x_;
}
inline void PointInfo::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PointInfo.x)
}

// optional float y = 2;
inline void PointInfo::clear_y() {
  y_ = 0;
}
inline float PointInfo::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.PointInfo.y)
  return y_;
}
inline void PointInfo::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PointInfo.y)
}

// optional float z = 3;
inline void PointInfo::clear_z() {
  z_ = 0;
}
inline float PointInfo::z() const {
  // @@protoc_insertion_point(field_get:gt_msg.PointInfo.z)
  return z_;
}
inline void PointInfo::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PointInfo.z)
}

// optional float distance = 4;
inline void PointInfo::clear_distance() {
  distance_ = 0;
}
inline float PointInfo::distance() const {
  // @@protoc_insertion_point(field_get:gt_msg.PointInfo.distance)
  return distance_;
}
inline void PointInfo::set_distance(float value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PointInfo.distance)
}

// -------------------------------------------------------------------

// SinglePath

// optional string pathName = 1;
inline void SinglePath::clear_pathname() {
  pathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SinglePath::pathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.pathName)
  return pathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePath::set_pathname(const ::std::string& value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.pathName)
}
inline void SinglePath::set_pathname(const char* value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.SinglePath.pathName)
}
inline void SinglePath::set_pathname(const char* value, size_t size) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.SinglePath.pathName)
}
inline ::std::string* SinglePath::mutable_pathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePath.pathName)
  return pathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinglePath::release_pathname() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePath.pathName)
  
  return pathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePath::set_allocated_pathname(::std::string* pathname) {
  if (pathname != NULL) {
    
  } else {
    
  }
  pathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePath.pathName)
}

// repeated .gt_msg.PointInfo pathPointList = 2;
inline int SinglePath::pathpointlist_size() const {
  return pathpointlist_.size();
}
inline void SinglePath::clear_pathpointlist() {
  pathpointlist_.Clear();
}
inline const ::gt_msg::PointInfo& SinglePath::pathpointlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.pathPointList)
  return pathpointlist_.Get(index);
}
inline ::gt_msg::PointInfo* SinglePath::mutable_pathpointlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePath.pathPointList)
  return pathpointlist_.Mutable(index);
}
inline ::gt_msg::PointInfo* SinglePath::add_pathpointlist() {
  // @@protoc_insertion_point(field_add:gt_msg.SinglePath.pathPointList)
  return pathpointlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::PointInfo >*
SinglePath::mutable_pathpointlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SinglePath.pathPointList)
  return &pathpointlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::PointInfo >&
SinglePath::pathpointlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.SinglePath.pathPointList)
  return pathpointlist_;
}

// repeated .gt_msg.ActionData actions = 3;
inline int SinglePath::actions_size() const {
  return actions_.size();
}
inline void SinglePath::clear_actions() {
  actions_.Clear();
}
inline const ::gt_msg::ActionData& SinglePath::actions(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.actions)
  return actions_.Get(index);
}
inline ::gt_msg::ActionData* SinglePath::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePath.actions)
  return actions_.Mutable(index);
}
inline ::gt_msg::ActionData* SinglePath::add_actions() {
  // @@protoc_insertion_point(field_add:gt_msg.SinglePath.actions)
  return actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >*
SinglePath::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SinglePath.actions)
  return &actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >&
SinglePath::actions() const {
  // @@protoc_insertion_point(field_list:gt_msg.SinglePath.actions)
  return actions_;
}

// optional string copyPathName = 4;
inline void SinglePath::clear_copypathname() {
  copypathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SinglePath::copypathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.copyPathName)
  return copypathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePath::set_copypathname(const ::std::string& value) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.copyPathName)
}
inline void SinglePath::set_copypathname(const char* value) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.SinglePath.copyPathName)
}
inline void SinglePath::set_copypathname(const char* value, size_t size) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.SinglePath.copyPathName)
}
inline ::std::string* SinglePath::mutable_copypathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePath.copyPathName)
  return copypathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SinglePath::release_copypathname() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePath.copyPathName)
  
  return copypathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SinglePath::set_allocated_copypathname(::std::string* copypathname) {
  if (copypathname != NULL) {
    
  } else {
    
  }
  copypathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), copypathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePath.copyPathName)
}

// optional float RadianOffset = 5;
inline void SinglePath::clear_radianoffset() {
  radianoffset_ = 0;
}
inline float SinglePath::radianoffset() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.RadianOffset)
  return radianoffset_;
}
inline void SinglePath::set_radianoffset(float value) {
  
  radianoffset_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.RadianOffset)
}

// optional float DeepOffset = 6;
inline void SinglePath::clear_deepoffset() {
  deepoffset_ = 0;
}
inline float SinglePath::deepoffset() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.DeepOffset)
  return deepoffset_;
}
inline void SinglePath::set_deepoffset(float value) {
  
  deepoffset_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.DeepOffset)
}

// optional float speedScale = 9;
inline void SinglePath::clear_speedscale() {
  speedscale_ = 0;
}
inline float SinglePath::speedscale() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.speedScale)
  return speedscale_;
}
inline void SinglePath::set_speedscale(float value) {
  
  speedscale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.speedScale)
}

// -------------------------------------------------------------------

// PathGroup

// repeated .gt_msg.SinglePath pathList = 1;
inline int PathGroup::pathlist_size() const {
  return pathlist_.size();
}
inline void PathGroup::clear_pathlist() {
  pathlist_.Clear();
}
inline const ::gt_msg::SinglePath& PathGroup::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.PathGroup.pathList)
  return pathlist_.Get(index);
}
inline ::gt_msg::SinglePath* PathGroup::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.PathGroup.pathList)
  return pathlist_.Mutable(index);
}
inline ::gt_msg::SinglePath* PathGroup::add_pathlist() {
  // @@protoc_insertion_point(field_add:gt_msg.PathGroup.pathList)
  return pathlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePath >*
PathGroup::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.PathGroup.pathList)
  return &pathlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePath >&
PathGroup::pathlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.PathGroup.pathList)
  return pathlist_;
}

// -------------------------------------------------------------------

// MapGroup

// repeated int32 pathList = 1;
inline int MapGroup::pathlist_size() const {
  return pathlist_.size();
}
inline void MapGroup::clear_pathlist() {
  pathlist_.Clear();
}
inline ::google::protobuf::int32 MapGroup::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.MapGroup.pathList)
  return pathlist_.Get(index);
}
inline void MapGroup::set_pathlist(int index, ::google::protobuf::int32 value) {
  pathlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.MapGroup.pathList)
}
inline void MapGroup::add_pathlist(::google::protobuf::int32 value) {
  pathlist_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.MapGroup.pathList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MapGroup::pathlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.MapGroup.pathList)
  return pathlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MapGroup::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.MapGroup.pathList)
  return &pathlist_;
}

// -------------------------------------------------------------------

// NavMeshGroup

// repeated int32 indexList = 1;
inline int NavMeshGroup::indexlist_size() const {
  return indexlist_.size();
}
inline void NavMeshGroup::clear_indexlist() {
  indexlist_.Clear();
}
inline ::google::protobuf::int32 NavMeshGroup::indexlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.NavMeshGroup.indexList)
  return indexlist_.Get(index);
}
inline void NavMeshGroup::set_indexlist(int index, ::google::protobuf::int32 value) {
  indexlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.NavMeshGroup.indexList)
}
inline void NavMeshGroup::add_indexlist(::google::protobuf::int32 value) {
  indexlist_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.NavMeshGroup.indexList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NavMeshGroup::indexlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.NavMeshGroup.indexList)
  return indexlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NavMeshGroup::mutable_indexlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.NavMeshGroup.indexList)
  return &indexlist_;
}

// repeated .gt_msg.Vec3 verticeList = 2;
inline int NavMeshGroup::verticelist_size() const {
  return verticelist_.size();
}
inline void NavMeshGroup::clear_verticelist() {
  verticelist_.Clear();
}
inline const ::gt_msg::Vec3& NavMeshGroup::verticelist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.NavMeshGroup.verticeList)
  return verticelist_.Get(index);
}
inline ::gt_msg::Vec3* NavMeshGroup::mutable_verticelist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.NavMeshGroup.verticeList)
  return verticelist_.Mutable(index);
}
inline ::gt_msg::Vec3* NavMeshGroup::add_verticelist() {
  // @@protoc_insertion_point(field_add:gt_msg.NavMeshGroup.verticeList)
  return verticelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
NavMeshGroup::mutable_verticelist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.NavMeshGroup.verticeList)
  return &verticelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
NavMeshGroup::verticelist() const {
  // @@protoc_insertion_point(field_list:gt_msg.NavMeshGroup.verticeList)
  return verticelist_;
}

// -------------------------------------------------------------------

// ActionData

// optional int32 actionFrame = 1;
inline void ActionData::clear_actionframe() {
  actionframe_ = 0;
}
inline ::google::protobuf::int32 ActionData::actionframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.ActionData.actionFrame)
  return actionframe_;
}
inline void ActionData::set_actionframe(::google::protobuf::int32 value) {
  
  actionframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ActionData.actionFrame)
}

// optional int32 playIdleIndex = 2;
inline void ActionData::clear_playidleindex() {
  playidleindex_ = 0;
}
inline ::google::protobuf::int32 ActionData::playidleindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.ActionData.playIdleIndex)
  return playidleindex_;
}
inline void ActionData::set_playidleindex(::google::protobuf::int32 value) {
  
  playidleindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ActionData.playIdleIndex)
}

// -------------------------------------------------------------------

// MessageTimer

// optional int32 passFrame = 1;
inline void MessageTimer::clear_passframe() {
  passframe_ = 0;
}
inline ::google::protobuf::int32 MessageTimer::passframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.MessageTimer.passFrame)
  return passframe_;
}
inline void MessageTimer::set_passframe(::google::protobuf::int32 value) {
  
  passframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.MessageTimer.passFrame)
}

// optional string message = 2;
inline void MessageTimer::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageTimer::message() const {
  // @@protoc_insertion_point(field_get:gt_msg.MessageTimer.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageTimer::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.MessageTimer.message)
}
inline void MessageTimer::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.MessageTimer.message)
}
inline void MessageTimer::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.MessageTimer.message)
}
inline ::std::string* MessageTimer::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.MessageTimer.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageTimer::release_message() {
  // @@protoc_insertion_point(field_release:gt_msg.MessageTimer.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageTimer::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.MessageTimer.message)
}

// -------------------------------------------------------------------

// ProductItemContent

// repeated int32 ProductItemIndex = 1;
inline int ProductItemContent::productitemindex_size() const {
  return productitemindex_.size();
}
inline void ProductItemContent::clear_productitemindex() {
  productitemindex_.Clear();
}
inline ::google::protobuf::int32 ProductItemContent::productitemindex(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.ProductItemIndex)
  return productitemindex_.Get(index);
}
inline void ProductItemContent::set_productitemindex(int index, ::google::protobuf::int32 value) {
  productitemindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.ProductItemIndex)
}
inline void ProductItemContent::add_productitemindex(::google::protobuf::int32 value) {
  productitemindex_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.ProductItemIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProductItemContent::productitemindex() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.ProductItemIndex)
  return productitemindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProductItemContent::mutable_productitemindex() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.ProductItemIndex)
  return &productitemindex_;
}

// optional int32 frame = 2;
inline void ProductItemContent::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 ProductItemContent::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.frame)
  return frame_;
}
inline void ProductItemContent::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.frame)
}

// repeated string fishList = 3;
inline int ProductItemContent::fishlist_size() const {
  return fishlist_.size();
}
inline void ProductItemContent::clear_fishlist() {
  fishlist_.Clear();
}
inline const ::std::string& ProductItemContent::fishlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.fishList)
  return fishlist_.Get(index);
}
inline ::std::string* ProductItemContent::mutable_fishlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.fishList)
  return fishlist_.Mutable(index);
}
inline void ProductItemContent::set_fishlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.fishList)
  fishlist_.Mutable(index)->assign(value);
}
inline void ProductItemContent::set_fishlist(int index, const char* value) {
  fishlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItemContent.fishList)
}
inline void ProductItemContent::set_fishlist(int index, const char* value, size_t size) {
  fishlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItemContent.fishList)
}
inline ::std::string* ProductItemContent::add_fishlist() {
  // @@protoc_insertion_point(field_add_mutable:gt_msg.ProductItemContent.fishList)
  return fishlist_.Add();
}
inline void ProductItemContent::add_fishlist(const ::std::string& value) {
  fishlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.fishList)
}
inline void ProductItemContent::add_fishlist(const char* value) {
  fishlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gt_msg.ProductItemContent.fishList)
}
inline void ProductItemContent::add_fishlist(const char* value, size_t size) {
  fishlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gt_msg.ProductItemContent.fishList)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProductItemContent::fishlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.fishList)
  return fishlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProductItemContent::mutable_fishlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.fishList)
  return &fishlist_;
}

// optional float SpeedScale = 4;
inline void ProductItemContent::clear_speedscale() {
  speedscale_ = 0;
}
inline float ProductItemContent::speedscale() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.SpeedScale)
  return speedscale_;
}
inline void ProductItemContent::set_speedscale(float value) {
  
  speedscale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.SpeedScale)
}

// optional int32 AngleOffset = 5;
inline void ProductItemContent::clear_angleoffset() {
  angleoffset_ = 0;
}
inline ::google::protobuf::int32 ProductItemContent::angleoffset() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.AngleOffset)
  return angleoffset_;
}
inline void ProductItemContent::set_angleoffset(::google::protobuf::int32 value) {
  
  angleoffset_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.AngleOffset)
}

// optional int32 FollowCount = 7;
inline void ProductItemContent::clear_followcount() {
  followcount_ = 0;
}
inline ::google::protobuf::int32 ProductItemContent::followcount() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.FollowCount)
  return followcount_;
}
inline void ProductItemContent::set_followcount(::google::protobuf::int32 value) {
  
  followcount_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.FollowCount)
}

// optional int32 FollowDistance = 8;
inline void ProductItemContent::clear_followdistance() {
  followdistance_ = 0;
}
inline ::google::protobuf::int32 ProductItemContent::followdistance() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.FollowDistance)
  return followdistance_;
}
inline void ProductItemContent::set_followdistance(::google::protobuf::int32 value) {
  
  followdistance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.FollowDistance)
}

// optional bool Forever = 9;
inline void ProductItemContent::clear_forever() {
  forever_ = false;
}
inline bool ProductItemContent::forever() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.Forever)
  return forever_;
}
inline void ProductItemContent::set_forever(bool value) {
  
  forever_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.Forever)
}

// repeated .gt_msg.ProductItem items = 10;
inline int ProductItemContent::items_size() const {
  return items_.size();
}
inline void ProductItemContent::clear_items() {
  items_.Clear();
}
inline const ::gt_msg::ProductItem& ProductItemContent::items(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.items)
  return items_.Get(index);
}
inline ::gt_msg::ProductItem* ProductItemContent::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.items)
  return items_.Mutable(index);
}
inline ::gt_msg::ProductItem* ProductItemContent::add_items() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
ProductItemContent::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
ProductItemContent::items() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.items)
  return items_;
}

// -------------------------------------------------------------------

// ProductItem

// optional string ContentName = 1;
inline void ProductItem::clear_contentname() {
  contentname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProductItem::contentname() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.ContentName)
  return contentname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItem::set_contentname(const ::std::string& value) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.ContentName)
}
inline void ProductItem::set_contentname(const char* value) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItem.ContentName)
}
inline void ProductItem::set_contentname(const char* value, size_t size) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItem.ContentName)
}
inline ::std::string* ProductItem::mutable_contentname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItem.ContentName)
  return contentname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductItem::release_contentname() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItem.ContentName)
  
  return contentname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductItem::set_allocated_contentname(::std::string* contentname) {
  if (contentname != NULL) {
    
  } else {
    
  }
  contentname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contentname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItem.ContentName)
}

// optional bool isSync = 2;
inline void ProductItem::clear_issync() {
  issync_ = false;
}
inline bool ProductItem::issync() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.isSync)
  return issync_;
}
inline void ProductItem::set_issync(bool value) {
  
  issync_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.isSync)
}

// optional int32 time = 3;
inline void ProductItem::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 ProductItem::time() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.time)
  return time_;
}
inline void ProductItem::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.time)
}

// repeated .gt_msg.ProductItemContent contentItems = 4;
inline int ProductItem::contentitems_size() const {
  return contentitems_.size();
}
inline void ProductItem::clear_contentitems() {
  contentitems_.Clear();
}
inline const ::gt_msg::ProductItemContent& ProductItem::contentitems(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.contentItems)
  return contentitems_.Get(index);
}
inline ::gt_msg::ProductItemContent* ProductItem::mutable_contentitems(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItem.contentItems)
  return contentitems_.Mutable(index);
}
inline ::gt_msg::ProductItemContent* ProductItem::add_contentitems() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItem.contentItems)
  return contentitems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >*
ProductItem::mutable_contentitems() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItem.contentItems)
  return &contentitems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >&
ProductItem::contentitems() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItem.contentItems)
  return contentitems_;
}

// -------------------------------------------------------------------

// ProductItemGroup

// repeated .gt_msg.ProductItem itemList = 1;
inline int ProductItemGroup::itemlist_size() const {
  return itemlist_.size();
}
inline void ProductItemGroup::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::gt_msg::ProductItem& ProductItemGroup::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Get(index);
}
inline ::gt_msg::ProductItem* ProductItemGroup::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Mutable(index);
}
inline ::gt_msg::ProductItem* ProductItemGroup::add_itemlist() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
ProductItemGroup::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemGroup.itemList)
  return &itemlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
ProductItemGroup::itemlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemGroup.itemList)
  return itemlist_;
}

// optional int32 mainEnter = 2;
inline void ProductItemGroup::clear_mainenter() {
  mainenter_ = 0;
}
inline ::google::protobuf::int32 ProductItemGroup::mainenter() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.mainEnter)
  return mainenter_;
}
inline void ProductItemGroup::set_mainenter(::google::protobuf::int32 value) {
  
  mainenter_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.mainEnter)
}

// optional int32 AddFishEnter = 3;
inline void ProductItemGroup::clear_addfishenter() {
  addfishenter_ = 0;
}
inline ::google::protobuf::int32 ProductItemGroup::addfishenter() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.AddFishEnter)
  return addfishenter_;
}
inline void ProductItemGroup::set_addfishenter(::google::protobuf::int32 value) {
  
  addfishenter_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.AddFishEnter)
}

// optional bool EnableAddFish = 4;
inline void ProductItemGroup::clear_enableaddfish() {
  enableaddfish_ = false;
}
inline bool ProductItemGroup::enableaddfish() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.EnableAddFish)
  return enableaddfish_;
}
inline void ProductItemGroup::set_enableaddfish(bool value) {
  
  enableaddfish_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.EnableAddFish)
}

// -------------------------------------------------------------------

// FishProductNode

// optional string productName = 1;
inline void FishProductNode::clear_productname() {
  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishProductNode::productname() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.productName)
  return productname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishProductNode::set_productname(const ::std::string& value) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.productName)
}
inline void FishProductNode::set_productname(const char* value) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishProductNode.productName)
}
inline void FishProductNode::set_productname(const char* value, size_t size) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishProductNode.productName)
}
inline ::std::string* FishProductNode::mutable_productname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.productName)
  return productname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishProductNode::release_productname() {
  // @@protoc_insertion_point(field_release:gt_msg.FishProductNode.productName)
  
  return productname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishProductNode::set_allocated_productname(::std::string* productname) {
  if (productname != NULL) {
    
  } else {
    
  }
  productname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishProductNode.productName)
}

// optional int32 repeatTime = 2;
inline void FishProductNode::clear_repeattime() {
  repeattime_ = 0;
}
inline ::google::protobuf::int32 FishProductNode::repeattime() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.repeatTime)
  return repeattime_;
}
inline void FishProductNode::set_repeattime(::google::protobuf::int32 value) {
  
  repeattime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.repeatTime)
}

// optional string fishType = 3;
inline void FishProductNode::clear_fishtype() {
  fishtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FishProductNode::fishtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.fishType)
  return fishtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishProductNode::set_fishtype(const ::std::string& value) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.fishType)
}
inline void FishProductNode::set_fishtype(const char* value) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishProductNode.fishType)
}
inline void FishProductNode::set_fishtype(const char* value, size_t size) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishProductNode.fishType)
}
inline ::std::string* FishProductNode::mutable_fishtype() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.fishType)
  return fishtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FishProductNode::release_fishtype() {
  // @@protoc_insertion_point(field_release:gt_msg.FishProductNode.fishType)
  
  return fishtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FishProductNode::set_allocated_fishtype(::std::string* fishtype) {
  if (fishtype != NULL) {
    
  } else {
    
  }
  fishtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fishtype);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishProductNode.fishType)
}

// optional int32 startFrame = 4;
inline void FishProductNode::clear_startframe() {
  startframe_ = 0;
}
inline ::google::protobuf::int32 FishProductNode::startframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.startFrame)
  return startframe_;
}
inline void FishProductNode::set_startframe(::google::protobuf::int32 value) {
  
  startframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.startFrame)
}

// repeated .gt_msg.FishProductNode childs = 5;
inline int FishProductNode::childs_size() const {
  return childs_.size();
}
inline void FishProductNode::clear_childs() {
  childs_.Clear();
}
inline const ::gt_msg::FishProductNode& FishProductNode::childs(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.childs)
  return childs_.Get(index);
}
inline ::gt_msg::FishProductNode* FishProductNode::mutable_childs(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.childs)
  return childs_.Mutable(index);
}
inline ::gt_msg::FishProductNode* FishProductNode::add_childs() {
  // @@protoc_insertion_point(field_add:gt_msg.FishProductNode.childs)
  return childs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >*
FishProductNode::mutable_childs() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishProductNode.childs)
  return &childs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >&
FishProductNode::childs() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishProductNode.childs)
  return childs_;
}

// -------------------------------------------------------------------

// row

// repeated int32 data = 1;
inline int row::data_size() const {
  return data_.size();
}
inline void row::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 row::data(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.row.data)
  return data_.Get(index);
}
inline void row::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.row.data)
}
inline void row::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.row.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
row::data() const {
  // @@protoc_insertion_point(field_list:gt_msg.row.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
row::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.row.data)
  return &data_;
}

// -------------------------------------------------------------------

// MapData

// repeated .gt_msg.row data = 1;
inline int MapData::data_size() const {
  return data_.size();
}
inline void MapData::clear_data() {
  data_.Clear();
}
inline const ::gt_msg::row& MapData::data(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.MapData.data)
  return data_.Get(index);
}
inline ::gt_msg::row* MapData::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.MapData.data)
  return data_.Mutable(index);
}
inline ::gt_msg::row* MapData::add_data() {
  // @@protoc_insertion_point(field_add:gt_msg.MapData.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::row >*
MapData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.MapData.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::row >&
MapData::data() const {
  // @@protoc_insertion_point(field_list:gt_msg.MapData.data)
  return data_;
}

// -------------------------------------------------------------------

// Nears

// optional int32 index = 1;
inline void Nears::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 Nears::index() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.index)
  return index_;
}
inline void Nears::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.index)
}

// optional float distance = 2;
inline void Nears::clear_distance() {
  distance_ = 0;
}
inline float Nears::distance() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.distance)
  return distance_;
}
inline void Nears::set_distance(float value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.distance)
}

// repeated int32 pointIndex = 3;
inline int Nears::pointindex_size() const {
  return pointindex_.size();
}
inline void Nears::clear_pointindex() {
  pointindex_.Clear();
}
inline ::google::protobuf::int32 Nears::pointindex(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.pointIndex)
  return pointindex_.Get(index);
}
inline void Nears::set_pointindex(int index, ::google::protobuf::int32 value) {
  pointindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.Nears.pointIndex)
}
inline void Nears::add_pointindex(::google::protobuf::int32 value) {
  pointindex_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.Nears.pointIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Nears::pointindex() const {
  // @@protoc_insertion_point(field_list:gt_msg.Nears.pointIndex)
  return pointindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Nears::mutable_pointindex() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Nears.pointIndex)
  return &pointindex_;
}

// optional int32 lineIndex = 4;
inline void Nears::clear_lineindex() {
  lineindex_ = 0;
}
inline ::google::protobuf::int32 Nears::lineindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.lineIndex)
  return lineindex_;
}
inline void Nears::set_lineindex(::google::protobuf::int32 value) {
  
  lineindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.lineIndex)
}

// optional int32 OtherLineIndex = 5;
inline void Nears::clear_otherlineindex() {
  otherlineindex_ = 0;
}
inline ::google::protobuf::int32 Nears::otherlineindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.OtherLineIndex)
  return otherlineindex_;
}
inline void Nears::set_otherlineindex(::google::protobuf::int32 value) {
  
  otherlineindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.OtherLineIndex)
}

// optional bool enable = 6;
inline void Nears::clear_enable() {
  enable_ = false;
}
inline bool Nears::enable() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.enable)
  return enable_;
}
inline void Nears::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.enable)
}

// -------------------------------------------------------------------

// Cell

// optional int32 index = 1;
inline void Cell::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 Cell::index() const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.index)
  return index_;
}
inline void Cell::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Cell.index)
}

// repeated .gt_msg.Vec3 v = 2;
inline int Cell::v_size() const {
  return v_.size();
}
inline void Cell::clear_v() {
  v_.Clear();
}
inline const ::gt_msg::Vec3& Cell::v(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.v)
  return v_.Get(index);
}
inline ::gt_msg::Vec3* Cell::mutable_v(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.v)
  return v_.Mutable(index);
}
inline ::gt_msg::Vec3* Cell::add_v() {
  // @@protoc_insertion_point(field_add:gt_msg.Cell.v)
  return v_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
Cell::mutable_v() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.v)
  return &v_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
Cell::v() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.v)
  return v_;
}

// repeated int32 vIndex = 3;
inline int Cell::vindex_size() const {
  return vindex_.size();
}
inline void Cell::clear_vindex() {
  vindex_.Clear();
}
inline ::google::protobuf::int32 Cell::vindex(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.vIndex)
  return vindex_.Get(index);
}
inline void Cell::set_vindex(int index, ::google::protobuf::int32 value) {
  vindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.Cell.vIndex)
}
inline void Cell::add_vindex(::google::protobuf::int32 value) {
  vindex_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.Cell.vIndex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Cell::vindex() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.vIndex)
  return vindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Cell::mutable_vindex() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.vIndex)
  return &vindex_;
}

// optional .gt_msg.Vec3 midPos = 4;
inline bool Cell::has_midpos() const {
  return !_is_default_instance_ && midpos_ != NULL;
}
inline void Cell::clear_midpos() {
  if (GetArenaNoVirtual() == NULL && midpos_ != NULL) delete midpos_;
  midpos_ = NULL;
}
inline const ::gt_msg::Vec3& Cell::midpos() const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.midPos)
  return midpos_ != NULL ? *midpos_ : *default_instance_->midpos_;
}
inline ::gt_msg::Vec3* Cell::mutable_midpos() {
  
  if (midpos_ == NULL) {
    midpos_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.midPos)
  return midpos_;
}
inline ::gt_msg::Vec3* Cell::release_midpos() {
  // @@protoc_insertion_point(field_release:gt_msg.Cell.midPos)
  
  ::gt_msg::Vec3* temp = midpos_;
  midpos_ = NULL;
  return temp;
}
inline void Cell::set_allocated_midpos(::gt_msg::Vec3* midpos) {
  delete midpos_;
  midpos_ = midpos;
  if (midpos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Cell.midPos)
}

// repeated .gt_msg.Nears nears = 5;
inline int Cell::nears_size() const {
  return nears_.size();
}
inline void Cell::clear_nears() {
  nears_.Clear();
}
inline const ::gt_msg::Nears& Cell::nears(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.nears)
  return nears_.Get(index);
}
inline ::gt_msg::Nears* Cell::mutable_nears(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.nears)
  return nears_.Mutable(index);
}
inline ::gt_msg::Nears* Cell::add_nears() {
  // @@protoc_insertion_point(field_add:gt_msg.Cell.nears)
  return nears_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Nears >*
Cell::mutable_nears() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.nears)
  return &nears_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Nears >&
Cell::nears() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.nears)
  return nears_;
}

// repeated float lineMidSqrDistance = 6;
inline int Cell::linemidsqrdistance_size() const {
  return linemidsqrdistance_.size();
}
inline void Cell::clear_linemidsqrdistance() {
  linemidsqrdistance_.Clear();
}
inline float Cell::linemidsqrdistance(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.lineMidSqrDistance)
  return linemidsqrdistance_.Get(index);
}
inline void Cell::set_linemidsqrdistance(int index, float value) {
  linemidsqrdistance_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.Cell.lineMidSqrDistance)
}
inline void Cell::add_linemidsqrdistance(float value) {
  linemidsqrdistance_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.Cell.lineMidSqrDistance)
}
inline const ::google::protobuf::RepeatedField< float >&
Cell::linemidsqrdistance() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.lineMidSqrDistance)
  return linemidsqrdistance_;
}
inline ::google::protobuf::RepeatedField< float >*
Cell::mutable_linemidsqrdistance() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.lineMidSqrDistance)
  return &linemidsqrdistance_;
}

// repeated .gt_msg.Vec3 lineMidPos = 7;
inline int Cell::linemidpos_size() const {
  return linemidpos_.size();
}
inline void Cell::clear_linemidpos() {
  linemidpos_.Clear();
}
inline const ::gt_msg::Vec3& Cell::linemidpos(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.lineMidPos)
  return linemidpos_.Get(index);
}
inline ::gt_msg::Vec3* Cell::mutable_linemidpos(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.lineMidPos)
  return linemidpos_.Mutable(index);
}
inline ::gt_msg::Vec3* Cell::add_linemidpos() {
  // @@protoc_insertion_point(field_add:gt_msg.Cell.lineMidPos)
  return linemidpos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
Cell::mutable_linemidpos() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.lineMidPos)
  return &linemidpos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
Cell::linemidpos() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.lineMidPos)
  return linemidpos_;
}

// repeated .gt_msg.Vec3 normalize = 8;
inline int Cell::normalize_size() const {
  return normalize_.size();
}
inline void Cell::clear_normalize() {
  normalize_.Clear();
}
inline const ::gt_msg::Vec3& Cell::normalize(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.normalize)
  return normalize_.Get(index);
}
inline ::gt_msg::Vec3* Cell::mutable_normalize(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.normalize)
  return normalize_.Mutable(index);
}
inline ::gt_msg::Vec3* Cell::add_normalize() {
  // @@protoc_insertion_point(field_add:gt_msg.Cell.normalize)
  return normalize_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
Cell::mutable_normalize() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.normalize)
  return &normalize_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
Cell::normalize() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.normalize)
  return normalize_;
}

// -------------------------------------------------------------------

// PosData

// optional .gt_msg.Vec3 Pos = 1;
inline bool PosData::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
inline void PosData::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::gt_msg::Vec3& PosData::pos() const {
  // @@protoc_insertion_point(field_get:gt_msg.PosData.Pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::gt_msg::Vec3* PosData::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.PosData.Pos)
  return pos_;
}
inline ::gt_msg::Vec3* PosData::release_pos() {
  // @@protoc_insertion_point(field_release:gt_msg.PosData.Pos)
  
  ::gt_msg::Vec3* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PosData::set_allocated_pos(::gt_msg::Vec3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.PosData.Pos)
}

// repeated int32 CellIndexs = 2;
inline int PosData::cellindexs_size() const {
  return cellindexs_.size();
}
inline void PosData::clear_cellindexs() {
  cellindexs_.Clear();
}
inline ::google::protobuf::int32 PosData::cellindexs(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.PosData.CellIndexs)
  return cellindexs_.Get(index);
}
inline void PosData::set_cellindexs(int index, ::google::protobuf::int32 value) {
  cellindexs_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.PosData.CellIndexs)
}
inline void PosData::add_cellindexs(::google::protobuf::int32 value) {
  cellindexs_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.PosData.CellIndexs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PosData::cellindexs() const {
  // @@protoc_insertion_point(field_list:gt_msg.PosData.CellIndexs)
  return cellindexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PosData::mutable_cellindexs() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.PosData.CellIndexs)
  return &cellindexs_;
}

// -------------------------------------------------------------------

// NavData

// repeated .gt_msg.Cell celllist = 1;
inline int NavData::celllist_size() const {
  return celllist_.size();
}
inline void NavData::clear_celllist() {
  celllist_.Clear();
}
inline const ::gt_msg::Cell& NavData::celllist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.NavData.celllist)
  return celllist_.Get(index);
}
inline ::gt_msg::Cell* NavData::mutable_celllist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.NavData.celllist)
  return celllist_.Mutable(index);
}
inline ::gt_msg::Cell* NavData::add_celllist() {
  // @@protoc_insertion_point(field_add:gt_msg.NavData.celllist)
  return celllist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Cell >*
NavData::mutable_celllist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.NavData.celllist)
  return &celllist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Cell >&
NavData::celllist() const {
  // @@protoc_insertion_point(field_list:gt_msg.NavData.celllist)
  return celllist_;
}

// repeated .gt_msg.PosData posList = 3;
inline int NavData::poslist_size() const {
  return poslist_.size();
}
inline void NavData::clear_poslist() {
  poslist_.Clear();
}
inline const ::gt_msg::PosData& NavData::poslist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.NavData.posList)
  return poslist_.Get(index);
}
inline ::gt_msg::PosData* NavData::mutable_poslist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.NavData.posList)
  return poslist_.Mutable(index);
}
inline ::gt_msg::PosData* NavData::add_poslist() {
  // @@protoc_insertion_point(field_add:gt_msg.NavData.posList)
  return poslist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::PosData >*
NavData::mutable_poslist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.NavData.posList)
  return &poslist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::PosData >&
NavData::poslist() const {
  // @@protoc_insertion_point(field_list:gt_msg.NavData.posList)
  return poslist_;
}

// -------------------------------------------------------------------

// SynPos

// optional int32 MoverId = 1;
inline void SynPos::clear_moverid() {
  moverid_ = 0;
}
inline ::google::protobuf::int32 SynPos::moverid() const {
  // @@protoc_insertion_point(field_get:gt_msg.SynPos.MoverId)
  return moverid_;
}
inline void SynPos::set_moverid(::google::protobuf::int32 value) {
  
  moverid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SynPos.MoverId)
}

// optional int32 Frame = 2;
inline void SynPos::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 SynPos::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.SynPos.Frame)
  return frame_;
}
inline void SynPos::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SynPos.Frame)
}

// optional .gt_msg.Vec3 Position = 3;
inline bool SynPos::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
inline void SynPos::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::gt_msg::Vec3& SynPos::position() const {
  // @@protoc_insertion_point(field_get:gt_msg.SynPos.Position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::gt_msg::Vec3* SynPos::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.SynPos.Position)
  return position_;
}
inline ::gt_msg::Vec3* SynPos::release_position() {
  // @@protoc_insertion_point(field_release:gt_msg.SynPos.Position)
  
  ::gt_msg::Vec3* temp = position_;
  position_ = NULL;
  return temp;
}
inline void SynPos::set_allocated_position(::gt_msg::Vec3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SynPos.Position)
}

// optional int32 State = 4;
inline void SynPos::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 SynPos::state() const {
  // @@protoc_insertion_point(field_get:gt_msg.SynPos.State)
  return state_;
}
inline void SynPos::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SynPos.State)
}

// -------------------------------------------------------------------

// S_StartGame

// optional int32 ResultCode = 1;
inline void S_StartGame::clear_resultcode() {
  resultcode_ = 0;
}
inline ::google::protobuf::int32 S_StartGame::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.ResultCode)
  return resultcode_;
}
inline void S_StartGame::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_StartGame.ResultCode)
}

// optional .gt_msg.Size WorldSize = 2;
inline bool S_StartGame::has_worldsize() const {
  return !_is_default_instance_ && worldsize_ != NULL;
}
inline void S_StartGame::clear_worldsize() {
  if (GetArenaNoVirtual() == NULL && worldsize_ != NULL) delete worldsize_;
  worldsize_ = NULL;
}
inline const ::gt_msg::Size& S_StartGame::worldsize() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.WorldSize)
  return worldsize_ != NULL ? *worldsize_ : *default_instance_->worldsize_;
}
inline ::gt_msg::Size* S_StartGame::mutable_worldsize() {
  
  if (worldsize_ == NULL) {
    worldsize_ = new ::gt_msg::Size;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_StartGame.WorldSize)
  return worldsize_;
}
inline ::gt_msg::Size* S_StartGame::release_worldsize() {
  // @@protoc_insertion_point(field_release:gt_msg.S_StartGame.WorldSize)
  
  ::gt_msg::Size* temp = worldsize_;
  worldsize_ = NULL;
  return temp;
}
inline void S_StartGame::set_allocated_worldsize(::gt_msg::Size* worldsize) {
  delete worldsize_;
  worldsize_ = worldsize;
  if (worldsize) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_StartGame.WorldSize)
}

// optional int32 Frame = 3;
inline void S_StartGame::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_StartGame::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.Frame)
  return frame_;
}
inline void S_StartGame::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_StartGame.Frame)
}

// optional int32 ExecuteDelayFrame = 4;
inline void S_StartGame::clear_executedelayframe() {
  executedelayframe_ = 0;
}
inline ::google::protobuf::int32 S_StartGame::executedelayframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.ExecuteDelayFrame)
  return executedelayframe_;
}
inline void S_StartGame::set_executedelayframe(::google::protobuf::int32 value) {
  
  executedelayframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_StartGame.ExecuteDelayFrame)
}

// optional int32 PosSendFrame = 5;
inline void S_StartGame::clear_possendframe() {
  possendframe_ = 0;
}
inline ::google::protobuf::int32 S_StartGame::possendframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.PosSendFrame)
  return possendframe_;
}
inline void S_StartGame::set_possendframe(::google::protobuf::int32 value) {
  
  possendframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_StartGame.PosSendFrame)
}

// -------------------------------------------------------------------

// S_FrameSync

// optional int32 Frame = 1;
inline void S_FrameSync::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_FrameSync::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_FrameSync.Frame)
  return frame_;
}
inline void S_FrameSync::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_FrameSync.Frame)
}

// repeated .gt_msg.TestPoint Monsters = 2;
inline int S_FrameSync::monsters_size() const {
  return monsters_.size();
}
inline void S_FrameSync::clear_monsters() {
  monsters_.Clear();
}
inline const ::gt_msg::TestPoint& S_FrameSync::monsters(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_FrameSync.Monsters)
  return monsters_.Get(index);
}
inline ::gt_msg::TestPoint* S_FrameSync::mutable_monsters(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_FrameSync.Monsters)
  return monsters_.Mutable(index);
}
inline ::gt_msg::TestPoint* S_FrameSync::add_monsters() {
  // @@protoc_insertion_point(field_add:gt_msg.S_FrameSync.Monsters)
  return monsters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
S_FrameSync::mutable_monsters() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_FrameSync.Monsters)
  return &monsters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
S_FrameSync::monsters() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_FrameSync.Monsters)
  return monsters_;
}

// repeated .gt_msg.TestPoint Players = 3;
inline int S_FrameSync::players_size() const {
  return players_.size();
}
inline void S_FrameSync::clear_players() {
  players_.Clear();
}
inline const ::gt_msg::TestPoint& S_FrameSync::players(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_FrameSync.Players)
  return players_.Get(index);
}
inline ::gt_msg::TestPoint* S_FrameSync::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_FrameSync.Players)
  return players_.Mutable(index);
}
inline ::gt_msg::TestPoint* S_FrameSync::add_players() {
  // @@protoc_insertion_point(field_add:gt_msg.S_FrameSync.Players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
S_FrameSync::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_FrameSync.Players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
S_FrameSync::players() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_FrameSync.Players)
  return players_;
}

// repeated .gt_msg.TestPoint Bullets = 4;
inline int S_FrameSync::bullets_size() const {
  return bullets_.size();
}
inline void S_FrameSync::clear_bullets() {
  bullets_.Clear();
}
inline const ::gt_msg::TestPoint& S_FrameSync::bullets(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_FrameSync.Bullets)
  return bullets_.Get(index);
}
inline ::gt_msg::TestPoint* S_FrameSync::mutable_bullets(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_FrameSync.Bullets)
  return bullets_.Mutable(index);
}
inline ::gt_msg::TestPoint* S_FrameSync::add_bullets() {
  // @@protoc_insertion_point(field_add:gt_msg.S_FrameSync.Bullets)
  return bullets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
S_FrameSync::mutable_bullets() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_FrameSync.Bullets)
  return &bullets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
S_FrameSync::bullets() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_FrameSync.Bullets)
  return bullets_;
}

// -------------------------------------------------------------------

// S_SpawnItem

// optional int32 ItemId = 1;
inline void S_SpawnItem::clear_itemid() {
  itemid_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::itemid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.ItemId)
  return itemid_;
}
inline void S_SpawnItem::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.ItemId)
}

// optional int32 Frame = 2;
inline void S_SpawnItem::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Frame)
  return frame_;
}
inline void S_SpawnItem::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.Frame)
}

// optional int32 Type = 3;
inline void S_SpawnItem::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Type)
  return type_;
}
inline void S_SpawnItem::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.Type)
}

// optional .gt_msg.Vec3 Pos = 4;
inline bool S_SpawnItem::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
inline void S_SpawnItem::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::gt_msg::Vec3& S_SpawnItem::pos() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::gt_msg::Vec3* S_SpawnItem::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_SpawnItem.Pos)
  return pos_;
}
inline ::gt_msg::Vec3* S_SpawnItem::release_pos() {
  // @@protoc_insertion_point(field_release:gt_msg.S_SpawnItem.Pos)
  
  ::gt_msg::Vec3* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void S_SpawnItem::set_allocated_pos(::gt_msg::Vec3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_SpawnItem.Pos)
}

// optional int32 TeamId = 5;
inline void S_SpawnItem::clear_teamid() {
  teamid_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::teamid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.TeamId)
  return teamid_;
}
inline void S_SpawnItem::set_teamid(::google::protobuf::int32 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.TeamId)
}

// optional int64 Score = 6;
inline void S_SpawnItem::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 S_SpawnItem::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Score)
  return score_;
}
inline void S_SpawnItem::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.Score)
}

// optional int32 HP = 7;
inline void S_SpawnItem::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::hp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.HP)
  return hp_;
}
inline void S_SpawnItem::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.HP)
}

// optional int32 EXP = 8;
inline void S_SpawnItem::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::exp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.EXP)
  return exp_;
}
inline void S_SpawnItem::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.EXP)
}

// optional int32 LV = 9;
inline void S_SpawnItem::clear_lv() {
  lv_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::lv() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.LV)
  return lv_;
}
inline void S_SpawnItem::set_lv(::google::protobuf::int32 value) {
  
  lv_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.LV)
}

// optional int32 DMG = 10;
inline void S_SpawnItem::clear_dmg() {
  dmg_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::dmg() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.DMG)
  return dmg_;
}
inline void S_SpawnItem::set_dmg(::google::protobuf::int32 value) {
  
  dmg_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.DMG)
}

// optional int32 MaxExp = 11;
inline void S_SpawnItem::clear_maxexp() {
  maxexp_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::maxexp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.MaxExp)
  return maxexp_;
}
inline void S_SpawnItem::set_maxexp(::google::protobuf::int32 value) {
  
  maxexp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.MaxExp)
}

// optional int32 Multiple = 12;
inline void S_SpawnItem::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 S_SpawnItem::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Multiple)
  return multiple_;
}
inline void S_SpawnItem::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.Multiple)
}

// repeated int32 MulList = 13;
inline int S_SpawnItem::mullist_size() const {
  return mullist_.size();
}
inline void S_SpawnItem::clear_mullist() {
  mullist_.Clear();
}
inline ::google::protobuf::int32 S_SpawnItem::mullist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.MulList)
  return mullist_.Get(index);
}
inline void S_SpawnItem::set_mullist(int index, ::google::protobuf::int32 value) {
  mullist_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.MulList)
}
inline void S_SpawnItem::add_mullist(::google::protobuf::int32 value) {
  mullist_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.S_SpawnItem.MulList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
S_SpawnItem::mullist() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_SpawnItem.MulList)
  return mullist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
S_SpawnItem::mutable_mullist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_SpawnItem.MulList)
  return &mullist_;
}

// -------------------------------------------------------------------

// R_ChangeMultiple

// optional int32 Value = 1;
inline void R_ChangeMultiple::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 R_ChangeMultiple::value() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_ChangeMultiple.Value)
  return value_;
}
inline void R_ChangeMultiple::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_ChangeMultiple.Value)
}

// optional int32 Frame = 2;
inline void R_ChangeMultiple::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 R_ChangeMultiple::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_ChangeMultiple.Frame)
  return frame_;
}
inline void R_ChangeMultiple::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_ChangeMultiple.Frame)
}

// -------------------------------------------------------------------

// S_ChangeMultiple

// optional int32 ItemId = 1;
inline void S_ChangeMultiple::clear_itemid() {
  itemid_ = 0;
}
inline ::google::protobuf::int32 S_ChangeMultiple::itemid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ChangeMultiple.ItemId)
  return itemid_;
}
inline void S_ChangeMultiple::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ChangeMultiple.ItemId)
}

// optional int32 Value = 2;
inline void S_ChangeMultiple::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 S_ChangeMultiple::value() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ChangeMultiple.Value)
  return value_;
}
inline void S_ChangeMultiple::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ChangeMultiple.Value)
}

// optional int32 Frame = 3;
inline void S_ChangeMultiple::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_ChangeMultiple::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ChangeMultiple.Frame)
  return frame_;
}
inline void S_ChangeMultiple::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ChangeMultiple.Frame)
}

// -------------------------------------------------------------------

// S_KillItem

// optional int32 DeadId = 1;
inline void S_KillItem::clear_deadid() {
  deadid_ = 0;
}
inline ::google::protobuf::int32 S_KillItem::deadid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.DeadId)
  return deadid_;
}
inline void S_KillItem::set_deadid(::google::protobuf::int32 value) {
  
  deadid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.DeadId)
}

// optional int32 Frame = 2;
inline void S_KillItem::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_KillItem::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.Frame)
  return frame_;
}
inline void S_KillItem::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.Frame)
}

// optional int32 KillerId = 3;
inline void S_KillItem::clear_killerid() {
  killerid_ = 0;
}
inline ::google::protobuf::int32 S_KillItem::killerid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.KillerId)
  return killerid_;
}
inline void S_KillItem::set_killerid(::google::protobuf::int32 value) {
  
  killerid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.KillerId)
}

// optional int32 KillerExperience = 4;
inline void S_KillItem::clear_killerexperience() {
  killerexperience_ = 0;
}
inline ::google::protobuf::int32 S_KillItem::killerexperience() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.KillerExperience)
  return killerexperience_;
}
inline void S_KillItem::set_killerexperience(::google::protobuf::int32 value) {
  
  killerexperience_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.KillerExperience)
}

// optional int32 ReBirth = 5;
inline void S_KillItem::clear_rebirth() {
  rebirth_ = 0;
}
inline ::google::protobuf::int32 S_KillItem::rebirth() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.ReBirth)
  return rebirth_;
}
inline void S_KillItem::set_rebirth(::google::protobuf::int32 value) {
  
  rebirth_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.ReBirth)
}

// -------------------------------------------------------------------

// R_Move

// optional .gt_msg.SynPos Data = 1;
inline bool R_Move::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
inline void R_Move::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::gt_msg::SynPos& R_Move::data() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Move.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::gt_msg::SynPos* R_Move::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::gt_msg::SynPos;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.R_Move.Data)
  return data_;
}
inline ::gt_msg::SynPos* R_Move::release_data() {
  // @@protoc_insertion_point(field_release:gt_msg.R_Move.Data)
  
  ::gt_msg::SynPos* temp = data_;
  data_ = NULL;
  return temp;
}
inline void R_Move::set_allocated_data(::gt_msg::SynPos* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.R_Move.Data)
}

// optional int32 CellIndex = 2;
inline void R_Move::clear_cellindex() {
  cellindex_ = 0;
}
inline ::google::protobuf::int32 R_Move::cellindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Move.CellIndex)
  return cellindex_;
}
inline void R_Move::set_cellindex(::google::protobuf::int32 value) {
  
  cellindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Move.CellIndex)
}

// -------------------------------------------------------------------

// S_Move

// optional .gt_msg.SynPos Data = 1;
inline bool S_Move::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
inline void S_Move::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::gt_msg::SynPos& S_Move::data() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Move.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::gt_msg::SynPos* S_Move::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::gt_msg::SynPos;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_Move.Data)
  return data_;
}
inline ::gt_msg::SynPos* S_Move::release_data() {
  // @@protoc_insertion_point(field_release:gt_msg.S_Move.Data)
  
  ::gt_msg::SynPos* temp = data_;
  data_ = NULL;
  return temp;
}
inline void S_Move::set_allocated_data(::gt_msg::SynPos* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_Move.Data)
}

// -------------------------------------------------------------------

// R_Attack

// optional int32 AttackerId = 1;
inline void R_Attack::clear_attackerid() {
  attackerid_ = 0;
}
inline ::google::protobuf::int32 R_Attack::attackerid() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.AttackerId)
  return attackerid_;
}
inline void R_Attack::set_attackerid(::google::protobuf::int32 value) {
  
  attackerid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.AttackerId)
}

// optional int32 VictimId = 2;
inline void R_Attack::clear_victimid() {
  victimid_ = 0;
}
inline ::google::protobuf::int32 R_Attack::victimid() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.VictimId)
  return victimid_;
}
inline void R_Attack::set_victimid(::google::protobuf::int32 value) {
  
  victimid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.VictimId)
}

// optional int32 Frame = 3;
inline void R_Attack::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 R_Attack::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.Frame)
  return frame_;
}
inline void R_Attack::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.Frame)
}

// optional int32 SkillId = 4;
inline void R_Attack::clear_skillid() {
  skillid_ = 0;
}
inline ::google::protobuf::int32 R_Attack::skillid() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.SkillId)
  return skillid_;
}
inline void R_Attack::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.SkillId)
}

// optional int32 SkillLevel = 5;
inline void R_Attack::clear_skilllevel() {
  skilllevel_ = 0;
}
inline ::google::protobuf::int32 R_Attack::skilllevel() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.SkillLevel)
  return skilllevel_;
}
inline void R_Attack::set_skilllevel(::google::protobuf::int32 value) {
  
  skilllevel_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.SkillLevel)
}

// optional .gt_msg.Vec3 Direction = 6;
inline bool R_Attack::has_direction() const {
  return !_is_default_instance_ && direction_ != NULL;
}
inline void R_Attack::clear_direction() {
  if (GetArenaNoVirtual() == NULL && direction_ != NULL) delete direction_;
  direction_ = NULL;
}
inline const ::gt_msg::Vec3& R_Attack::direction() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.Direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::gt_msg::Vec3* R_Attack::mutable_direction() {
  
  if (direction_ == NULL) {
    direction_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.R_Attack.Direction)
  return direction_;
}
inline ::gt_msg::Vec3* R_Attack::release_direction() {
  // @@protoc_insertion_point(field_release:gt_msg.R_Attack.Direction)
  
  ::gt_msg::Vec3* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void R_Attack::set_allocated_direction(::gt_msg::Vec3* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.R_Attack.Direction)
}

// optional int32 Multiple = 7;
inline void R_Attack::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 R_Attack::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.Multiple)
  return multiple_;
}
inline void R_Attack::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.Multiple)
}

// optional .gt_msg.Vec3 Position = 8;
inline bool R_Attack::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
inline void R_Attack::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::gt_msg::Vec3& R_Attack::position() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.Position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::gt_msg::Vec3* R_Attack::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.R_Attack.Position)
  return position_;
}
inline ::gt_msg::Vec3* R_Attack::release_position() {
  // @@protoc_insertion_point(field_release:gt_msg.R_Attack.Position)
  
  ::gt_msg::Vec3* temp = position_;
  position_ = NULL;
  return temp;
}
inline void R_Attack::set_allocated_position(::gt_msg::Vec3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.R_Attack.Position)
}

// optional int32 CellIndex = 9;
inline void R_Attack::clear_cellindex() {
  cellindex_ = 0;
}
inline ::google::protobuf::int32 R_Attack::cellindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.CellIndex)
  return cellindex_;
}
inline void R_Attack::set_cellindex(::google::protobuf::int32 value) {
  
  cellindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.CellIndex)
}

// -------------------------------------------------------------------

// S_Attack

// optional int32 AttackerId = 1;
inline void S_Attack::clear_attackerid() {
  attackerid_ = 0;
}
inline ::google::protobuf::int32 S_Attack::attackerid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.AttackerId)
  return attackerid_;
}
inline void S_Attack::set_attackerid(::google::protobuf::int32 value) {
  
  attackerid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.AttackerId)
}

// optional int32 VictimId = 2;
inline void S_Attack::clear_victimid() {
  victimid_ = 0;
}
inline ::google::protobuf::int32 S_Attack::victimid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.VictimId)
  return victimid_;
}
inline void S_Attack::set_victimid(::google::protobuf::int32 value) {
  
  victimid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.VictimId)
}

// optional int32 Frame = 3;
inline void S_Attack::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_Attack::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.Frame)
  return frame_;
}
inline void S_Attack::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.Frame)
}

// optional int32 SkillId = 4;
inline void S_Attack::clear_skillid() {
  skillid_ = 0;
}
inline ::google::protobuf::int32 S_Attack::skillid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.SkillId)
  return skillid_;
}
inline void S_Attack::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.SkillId)
}

// optional int32 SkillLevel = 5;
inline void S_Attack::clear_skilllevel() {
  skilllevel_ = 0;
}
inline ::google::protobuf::int32 S_Attack::skilllevel() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.SkillLevel)
  return skilllevel_;
}
inline void S_Attack::set_skilllevel(::google::protobuf::int32 value) {
  
  skilllevel_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.SkillLevel)
}

// optional .gt_msg.Vec3 Direction = 6;
inline bool S_Attack::has_direction() const {
  return !_is_default_instance_ && direction_ != NULL;
}
inline void S_Attack::clear_direction() {
  if (GetArenaNoVirtual() == NULL && direction_ != NULL) delete direction_;
  direction_ = NULL;
}
inline const ::gt_msg::Vec3& S_Attack::direction() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.Direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
inline ::gt_msg::Vec3* S_Attack::mutable_direction() {
  
  if (direction_ == NULL) {
    direction_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_Attack.Direction)
  return direction_;
}
inline ::gt_msg::Vec3* S_Attack::release_direction() {
  // @@protoc_insertion_point(field_release:gt_msg.S_Attack.Direction)
  
  ::gt_msg::Vec3* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void S_Attack::set_allocated_direction(::gt_msg::Vec3* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_Attack.Direction)
}

// optional int32 Multiple = 7;
inline void S_Attack::clear_multiple() {
  multiple_ = 0;
}
inline ::google::protobuf::int32 S_Attack::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.Multiple)
  return multiple_;
}
inline void S_Attack::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.Multiple)
}

// optional .gt_msg.Vec3 Position = 8;
inline bool S_Attack::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
inline void S_Attack::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::gt_msg::Vec3& S_Attack::position() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.Position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::gt_msg::Vec3* S_Attack::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_Attack.Position)
  return position_;
}
inline ::gt_msg::Vec3* S_Attack::release_position() {
  // @@protoc_insertion_point(field_release:gt_msg.S_Attack.Position)
  
  ::gt_msg::Vec3* temp = position_;
  position_ = NULL;
  return temp;
}
inline void S_Attack::set_allocated_position(::gt_msg::Vec3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_Attack.Position)
}

// optional int32 CellIndex = 9;
inline void S_Attack::clear_cellindex() {
  cellindex_ = 0;
}
inline ::google::protobuf::int32 S_Attack::cellindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.CellIndex)
  return cellindex_;
}
inline void S_Attack::set_cellindex(::google::protobuf::int32 value) {
  
  cellindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.CellIndex)
}

// -------------------------------------------------------------------

// S_ItemScore

// optional int32 ItemId = 1;
inline void S_ItemScore::clear_itemid() {
  itemid_ = 0;
}
inline ::google::protobuf::int32 S_ItemScore::itemid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ItemScore.ItemId)
  return itemid_;
}
inline void S_ItemScore::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ItemScore.ItemId)
}

// optional int32 Frame = 2;
inline void S_ItemScore::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_ItemScore::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ItemScore.Frame)
  return frame_;
}
inline void S_ItemScore::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ItemScore.Frame)
}

// optional int64 Score = 3;
inline void S_ItemScore::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 S_ItemScore::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ItemScore.Score)
  return score_;
}
inline void S_ItemScore::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ItemScore.Score)
}

// optional int32 Experience = 4;
inline void S_ItemScore::clear_experience() {
  experience_ = 0;
}
inline ::google::protobuf::int32 S_ItemScore::experience() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ItemScore.Experience)
  return experience_;
}
inline void S_ItemScore::set_experience(::google::protobuf::int32 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ItemScore.Experience)
}

// -------------------------------------------------------------------

// S_TestDelay

// -------------------------------------------------------------------

// R_TestDelay

// -------------------------------------------------------------------

// S_MovePosList

// optional int32 Frame = 1;
inline void S_MovePosList::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_MovePosList::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_MovePosList.Frame)
  return frame_;
}
inline void S_MovePosList::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_MovePosList.Frame)
}

// optional int32 MoverId = 2;
inline void S_MovePosList::clear_moverid() {
  moverid_ = 0;
}
inline ::google::protobuf::int32 S_MovePosList::moverid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_MovePosList.MoverId)
  return moverid_;
}
inline void S_MovePosList::set_moverid(::google::protobuf::int32 value) {
  
  moverid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_MovePosList.MoverId)
}

// repeated .gt_msg.Vec3 list = 3;
inline int S_MovePosList::list_size() const {
  return list_.size();
}
inline void S_MovePosList::clear_list() {
  list_.Clear();
}
inline const ::gt_msg::Vec3& S_MovePosList::list(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_MovePosList.list)
  return list_.Get(index);
}
inline ::gt_msg::Vec3* S_MovePosList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_MovePosList.list)
  return list_.Mutable(index);
}
inline ::gt_msg::Vec3* S_MovePosList::add_list() {
  // @@protoc_insertion_point(field_add:gt_msg.S_MovePosList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
S_MovePosList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_MovePosList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
S_MovePosList::list() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_MovePosList.list)
  return list_;
}

// -------------------------------------------------------------------

// Victim

// optional int32 Id = 1;
inline void Victim::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Victim::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Victim.Id)
  return id_;
}
inline void Victim::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Victim.Id)
}

// optional int32 HP = 2;
inline void Victim::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 Victim::hp() const {
  // @@protoc_insertion_point(field_get:gt_msg.Victim.HP)
  return hp_;
}
inline void Victim::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Victim.HP)
}

// -------------------------------------------------------------------

// S_Hit

// optional int32 CasterId = 1;
inline void S_Hit::clear_casterid() {
  casterid_ = 0;
}
inline ::google::protobuf::int32 S_Hit::casterid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.CasterId)
  return casterid_;
}
inline void S_Hit::set_casterid(::google::protobuf::int32 value) {
  
  casterid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.CasterId)
}

// optional int32 Frame = 2;
inline void S_Hit::clear_frame() {
  frame_ = 0;
}
inline ::google::protobuf::int32 S_Hit::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.Frame)
  return frame_;
}
inline void S_Hit::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.Frame)
}

// optional int32 EndFrame = 3;
inline void S_Hit::clear_endframe() {
  endframe_ = 0;
}
inline ::google::protobuf::int32 S_Hit::endframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.EndFrame)
  return endframe_;
}
inline void S_Hit::set_endframe(::google::protobuf::int32 value) {
  
  endframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.EndFrame)
}

// optional int32 SkillId = 4;
inline void S_Hit::clear_skillid() {
  skillid_ = 0;
}
inline ::google::protobuf::int32 S_Hit::skillid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.SkillId)
  return skillid_;
}
inline void S_Hit::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.SkillId)
}

// optional int64 AttackerScore = 5;
inline void S_Hit::clear_attackerscore() {
  attackerscore_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 S_Hit::attackerscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.AttackerScore)
  return attackerscore_;
}
inline void S_Hit::set_attackerscore(::google::protobuf::int64 value) {
  
  attackerscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.AttackerScore)
}

// repeated .gt_msg.Victim VictimList = 6;
inline int S_Hit::victimlist_size() const {
  return victimlist_.size();
}
inline void S_Hit::clear_victimlist() {
  victimlist_.Clear();
}
inline const ::gt_msg::Victim& S_Hit::victimlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.VictimList)
  return victimlist_.Get(index);
}
inline ::gt_msg::Victim* S_Hit::mutable_victimlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_Hit.VictimList)
  return victimlist_.Mutable(index);
}
inline ::gt_msg::Victim* S_Hit::add_victimlist() {
  // @@protoc_insertion_point(field_add:gt_msg.S_Hit.VictimList)
  return victimlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Victim >*
S_Hit::mutable_victimlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_Hit.VictimList)
  return &victimlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Victim >&
S_Hit::victimlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_Hit.VictimList)
  return victimlist_;
}

// -------------------------------------------------------------------

// S_LV

// optional int32 ItemId = 1;
inline void S_LV::clear_itemid() {
  itemid_ = 0;
}
inline ::google::protobuf::int32 S_LV::itemid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_LV.ItemId)
  return itemid_;
}
inline void S_LV::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_LV.ItemId)
}

// optional int32 ItemExp = 2;
inline void S_LV::clear_itemexp() {
  itemexp_ = 0;
}
inline ::google::protobuf::int32 S_LV::itemexp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_LV.ItemExp)
  return itemexp_;
}
inline void S_LV::set_itemexp(::google::protobuf::int32 value) {
  
  itemexp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_LV.ItemExp)
}

// optional int32 Level = 3;
inline void S_LV::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 S_LV::level() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_LV.Level)
  return level_;
}
inline void S_LV::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_LV.Level)
}

// optional int32 MaxExp = 4;
inline void S_LV::clear_maxexp() {
  maxexp_ = 0;
}
inline ::google::protobuf::int32 S_LV::maxexp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_LV.MaxExp)
  return maxexp_;
}
inline void S_LV::set_maxexp(::google::protobuf::int32 value) {
  
  maxexp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_LV.MaxExp)
}

// -------------------------------------------------------------------

// Proto_SkillData

// optional int32 id = 1;
inline void Proto_SkillData::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Proto_SkillData::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillData.id)
  return id_;
}
inline void Proto_SkillData::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillData.id)
}

// optional int32 lev = 2;
inline void Proto_SkillData::clear_lev() {
  lev_ = 0;
}
inline ::google::protobuf::int32 Proto_SkillData::lev() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillData.lev)
  return lev_;
}
inline void Proto_SkillData::set_lev(::google::protobuf::int32 value) {
  
  lev_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillData.lev)
}

// -------------------------------------------------------------------

// Proto_Monster

// optional int32 type = 1;
inline void Proto_Monster::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.type)
  return type_;
}
inline void Proto_Monster::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.type)
}

// optional string name = 2;
inline void Proto_Monster::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Monster::name() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Monster::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.name)
}
inline void Proto_Monster::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Monster.name)
}
inline void Proto_Monster::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Monster.name)
}
inline ::std::string* Proto_Monster::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Monster.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Monster::release_name() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Monster.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Monster::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Monster.name)
}

// optional .gt_msg.JobType job = 3;
inline void Proto_Monster::clear_job() {
  job_ = 0;
}
inline ::gt_msg::JobType Proto_Monster::job() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.job)
  return static_cast< ::gt_msg::JobType >(job_);
}
inline void Proto_Monster::set_job(::gt_msg::JobType value) {
  
  job_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.job)
}

// optional int32 scal = 4;
inline void Proto_Monster::clear_scal() {
  scal_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::scal() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.scal)
  return scal_;
}
inline void Proto_Monster::set_scal(::google::protobuf::int32 value) {
  
  scal_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.scal)
}

// optional int32 exp = 5;
inline void Proto_Monster::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::exp() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.exp)
  return exp_;
}
inline void Proto_Monster::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.exp)
}

// optional .gt_msg.Object_Type_Enum objType = 6;
inline void Proto_Monster::clear_objtype() {
  objtype_ = 0;
}
inline ::gt_msg::Object_Type_Enum Proto_Monster::objtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.objType)
  return static_cast< ::gt_msg::Object_Type_Enum >(objtype_);
}
inline void Proto_Monster::set_objtype(::gt_msg::Object_Type_Enum value) {
  
  objtype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.objType)
}

// optional string modleName = 7;
inline void Proto_Monster::clear_modlename() {
  modlename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Monster::modlename() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.modleName)
  return modlename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Monster::set_modlename(const ::std::string& value) {
  
  modlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.modleName)
}
inline void Proto_Monster::set_modlename(const char* value) {
  
  modlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Monster.modleName)
}
inline void Proto_Monster::set_modlename(const char* value, size_t size) {
  
  modlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Monster.modleName)
}
inline ::std::string* Proto_Monster::mutable_modlename() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Monster.modleName)
  return modlename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Monster::release_modlename() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Monster.modleName)
  
  return modlename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Monster::set_allocated_modlename(::std::string* modlename) {
  if (modlename != NULL) {
    
  } else {
    
  }
  modlename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modlename);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Monster.modleName)
}

// optional int32 level = 8;
inline void Proto_Monster::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::level() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.level)
  return level_;
}
inline void Proto_Monster::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.level)
}

// optional int32 maxHp = 9;
inline void Proto_Monster::clear_maxhp() {
  maxhp_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::maxhp() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.maxHp)
  return maxhp_;
}
inline void Proto_Monster::set_maxhp(::google::protobuf::int32 value) {
  
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.maxHp)
}

// optional int32 attack = 10;
inline void Proto_Monster::clear_attack() {
  attack_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::attack() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.attack)
  return attack_;
}
inline void Proto_Monster::set_attack(::google::protobuf::int32 value) {
  
  attack_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.attack)
}

// optional int32 magicAtk = 11;
inline void Proto_Monster::clear_magicatk() {
  magicatk_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::magicatk() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.magicAtk)
  return magicatk_;
}
inline void Proto_Monster::set_magicatk(::google::protobuf::int32 value) {
  
  magicatk_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.magicAtk)
}

// optional int32 physicsDef = 12;
inline void Proto_Monster::clear_physicsdef() {
  physicsdef_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::physicsdef() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.physicsDef)
  return physicsdef_;
}
inline void Proto_Monster::set_physicsdef(::google::protobuf::int32 value) {
  
  physicsdef_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.physicsDef)
}

// optional int32 magicDef = 13;
inline void Proto_Monster::clear_magicdef() {
  magicdef_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::magicdef() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.magicDef)
  return magicdef_;
}
inline void Proto_Monster::set_magicdef(::google::protobuf::int32 value) {
  
  magicdef_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.magicDef)
}

// optional float hitRate = 14;
inline void Proto_Monster::clear_hitrate() {
  hitrate_ = 0;
}
inline float Proto_Monster::hitrate() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.hitRate)
  return hitrate_;
}
inline void Proto_Monster::set_hitrate(float value) {
  
  hitrate_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.hitRate)
}

// optional float dodge = 15;
inline void Proto_Monster::clear_dodge() {
  dodge_ = 0;
}
inline float Proto_Monster::dodge() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.dodge)
  return dodge_;
}
inline void Proto_Monster::set_dodge(float value) {
  
  dodge_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.dodge)
}

// optional float burstsRate = 16;
inline void Proto_Monster::clear_burstsrate() {
  burstsrate_ = 0;
}
inline float Proto_Monster::burstsrate() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.burstsRate)
  return burstsrate_;
}
inline void Proto_Monster::set_burstsrate(float value) {
  
  burstsrate_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.burstsRate)
}

// optional int32 moveSpeed = 17;
inline void Proto_Monster::clear_movespeed() {
  movespeed_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::movespeed() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.moveSpeed)
  return movespeed_;
}
inline void Proto_Monster::set_movespeed(::google::protobuf::int32 value) {
  
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.moveSpeed)
}

// optional int32 aiID = 18;
inline void Proto_Monster::clear_aiid() {
  aiid_ = 0;
}
inline ::google::protobuf::int32 Proto_Monster::aiid() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.aiID)
  return aiid_;
}
inline void Proto_Monster::set_aiid(::google::protobuf::int32 value) {
  
  aiid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.aiID)
}

// optional float actionDistance = 19;
inline void Proto_Monster::clear_actiondistance() {
  actiondistance_ = 0;
}
inline float Proto_Monster::actiondistance() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.actionDistance)
  return actiondistance_;
}
inline void Proto_Monster::set_actiondistance(float value) {
  
  actiondistance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.actionDistance)
}

// optional float minActionTime = 20;
inline void Proto_Monster::clear_minactiontime() {
  minactiontime_ = 0;
}
inline float Proto_Monster::minactiontime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.minActionTime)
  return minactiontime_;
}
inline void Proto_Monster::set_minactiontime(float value) {
  
  minactiontime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.minActionTime)
}

// repeated .gt_msg.Proto_SkillData skillList = 21;
inline int Proto_Monster::skilllist_size() const {
  return skilllist_.size();
}
inline void Proto_Monster::clear_skilllist() {
  skilllist_.Clear();
}
inline const ::gt_msg::Proto_SkillData& Proto_Monster::skilllist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.skillList)
  return skilllist_.Get(index);
}
inline ::gt_msg::Proto_SkillData* Proto_Monster::mutable_skilllist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Monster.skillList)
  return skilllist_.Mutable(index);
}
inline ::gt_msg::Proto_SkillData* Proto_Monster::add_skilllist() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_Monster.skillList)
  return skilllist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
Proto_Monster::mutable_skilllist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_Monster.skillList)
  return &skilllist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
Proto_Monster::skilllist() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_Monster.skillList)
  return skilllist_;
}

// optional string birthEffectName = 22;
inline void Proto_Monster::clear_birtheffectname() {
  birtheffectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Monster::birtheffectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.birthEffectName)
  return birtheffectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Monster::set_birtheffectname(const ::std::string& value) {
  
  birtheffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.birthEffectName)
}
inline void Proto_Monster::set_birtheffectname(const char* value) {
  
  birtheffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Monster.birthEffectName)
}
inline void Proto_Monster::set_birtheffectname(const char* value, size_t size) {
  
  birtheffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Monster.birthEffectName)
}
inline ::std::string* Proto_Monster::mutable_birtheffectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Monster.birthEffectName)
  return birtheffectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Monster::release_birtheffectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Monster.birthEffectName)
  
  return birtheffectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Monster::set_allocated_birtheffectname(::std::string* birtheffectname) {
  if (birtheffectname != NULL) {
    
  } else {
    
  }
  birtheffectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birtheffectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Monster.birthEffectName)
}

// -------------------------------------------------------------------

// Proto_MonsterList

// repeated .gt_msg.Proto_Monster dic = 1;
inline int Proto_MonsterList::dic_size() const {
  return dic_.size();
}
inline void Proto_MonsterList::clear_dic() {
  dic_.Clear();
}
inline const ::gt_msg::Proto_Monster& Proto_MonsterList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_MonsterList.dic)
  return dic_.Get(index);
}
inline ::gt_msg::Proto_Monster* Proto_MonsterList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_MonsterList.dic)
  return dic_.Mutable(index);
}
inline ::gt_msg::Proto_Monster* Proto_MonsterList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_MonsterList.dic)
  return dic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Monster >*
Proto_MonsterList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_MonsterList.dic)
  return &dic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Monster >&
Proto_MonsterList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_MonsterList.dic)
  return dic_;
}

// -------------------------------------------------------------------

// Proto_BuffData

// optional int32 id = 1;
inline void Proto_BuffData::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Proto_BuffData::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BuffData.id)
  return id_;
}
inline void Proto_BuffData::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BuffData.id)
}

// optional int32 lev = 2;
inline void Proto_BuffData::clear_lev() {
  lev_ = 0;
}
inline ::google::protobuf::int32 Proto_BuffData::lev() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BuffData.lev)
  return lev_;
}
inline void Proto_BuffData::set_lev(::google::protobuf::int32 value) {
  
  lev_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BuffData.lev)
}

// optional float time = 3;
inline void Proto_BuffData::clear_time() {
  time_ = 0;
}
inline float Proto_BuffData::time() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BuffData.time)
  return time_;
}
inline void Proto_BuffData::set_time(float value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BuffData.time)
}

// optional int32 targetType = 4;
inline void Proto_BuffData::clear_targettype() {
  targettype_ = 0;
}
inline ::google::protobuf::int32 Proto_BuffData::targettype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BuffData.targetType)
  return targettype_;
}
inline void Proto_BuffData::set_targettype(::google::protobuf::int32 value) {
  
  targettype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BuffData.targetType)
}

// -------------------------------------------------------------------

// Proto_Skill

// optional int32 id = 1;
inline void Proto_Skill::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Proto_Skill::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.id)
  return id_;
}
inline void Proto_Skill::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.id)
}

// optional string name = 2;
inline void Proto_Skill::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Skill::name() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Skill::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.name)
}
inline void Proto_Skill::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Skill.name)
}
inline void Proto_Skill::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Skill.name)
}
inline ::std::string* Proto_Skill::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Skill.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Skill::release_name() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Skill.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Skill::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Skill.name)
}

// optional string description = 3;
inline void Proto_Skill::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Skill::description() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Skill::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.description)
}
inline void Proto_Skill::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Skill.description)
}
inline void Proto_Skill::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Skill.description)
}
inline ::std::string* Proto_Skill::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Skill.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Skill::release_description() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Skill.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Skill::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Skill.description)
}

// optional int32 maxLevel = 4;
inline void Proto_Skill::clear_maxlevel() {
  maxlevel_ = 0;
}
inline ::google::protobuf::int32 Proto_Skill::maxlevel() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.maxLevel)
  return maxlevel_;
}
inline void Proto_Skill::set_maxlevel(::google::protobuf::int32 value) {
  
  maxlevel_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.maxLevel)
}

// optional .gt_msg.SkillType type = 5;
inline void Proto_Skill::clear_type() {
  type_ = 0;
}
inline ::gt_msg::SkillType Proto_Skill::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.type)
  return static_cast< ::gt_msg::SkillType >(type_);
}
inline void Proto_Skill::set_type(::gt_msg::SkillType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.type)
}

// optional .gt_msg.RangeType rangeType = 6;
inline void Proto_Skill::clear_rangetype() {
  rangetype_ = 0;
}
inline ::gt_msg::RangeType Proto_Skill::rangetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.rangeType)
  return static_cast< ::gt_msg::RangeType >(rangetype_);
}
inline void Proto_Skill::set_rangetype(::gt_msg::RangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.rangeType)
}

// optional .gt_msg.SkillEffect_Type effectType = 7;
inline void Proto_Skill::clear_effecttype() {
  effecttype_ = 0;
}
inline ::gt_msg::SkillEffect_Type Proto_Skill::effecttype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.effectType)
  return static_cast< ::gt_msg::SkillEffect_Type >(effecttype_);
}
inline void Proto_Skill::set_effecttype(::gt_msg::SkillEffect_Type value) {
  
  effecttype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.effectType)
}

// optional .gt_msg.DamageType damageType = 8;
inline void Proto_Skill::clear_damagetype() {
  damagetype_ = 0;
}
inline ::gt_msg::DamageType Proto_Skill::damagetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.damageType)
  return static_cast< ::gt_msg::DamageType >(damagetype_);
}
inline void Proto_Skill::set_damagetype(::gt_msg::DamageType value) {
  
  damagetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.damageType)
}

// optional bool break = 9;
inline void Proto_Skill::clear_break_() {
  break__ = false;
}
inline bool Proto_Skill::break_() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.break)
  return break__;
}
inline void Proto_Skill::set_break_(bool value) {
  
  break__ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.break)
}

// optional bool isNeedTarget = 10;
inline void Proto_Skill::clear_isneedtarget() {
  isneedtarget_ = false;
}
inline bool Proto_Skill::isneedtarget() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.isNeedTarget)
  return isneedtarget_;
}
inline void Proto_Skill::set_isneedtarget(bool value) {
  
  isneedtarget_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.isNeedTarget)
}

// optional int32 consumeDander = 11;
inline void Proto_Skill::clear_consumedander() {
  consumedander_ = 0;
}
inline ::google::protobuf::int32 Proto_Skill::consumedander() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.consumeDander)
  return consumedander_;
}
inline void Proto_Skill::set_consumedander(::google::protobuf::int32 value) {
  
  consumedander_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.consumeDander)
}

// optional int32 effectID = 12;
inline void Proto_Skill::clear_effectid() {
  effectid_ = 0;
}
inline ::google::protobuf::int32 Proto_Skill::effectid() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.effectID)
  return effectid_;
}
inline void Proto_Skill::set_effectid(::google::protobuf::int32 value) {
  
  effectid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.effectID)
}

// optional float intonateTime = 13;
inline void Proto_Skill::clear_intonatetime() {
  intonatetime_ = 0;
}
inline float Proto_Skill::intonatetime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.intonateTime)
  return intonatetime_;
}
inline void Proto_Skill::set_intonatetime(float value) {
  
  intonatetime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.intonateTime)
}

// optional float range = 14;
inline void Proto_Skill::clear_range() {
  range_ = 0;
}
inline float Proto_Skill::range() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.range)
  return range_;
}
inline void Proto_Skill::set_range(float value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.range)
}

// optional float levRange = 15;
inline void Proto_Skill::clear_levrange() {
  levrange_ = 0;
}
inline float Proto_Skill::levrange() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levRange)
  return levrange_;
}
inline void Proto_Skill::set_levrange(float value) {
  
  levrange_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levRange)
}

// optional float castDistance = 16;
inline void Proto_Skill::clear_castdistance() {
  castdistance_ = 0;
}
inline float Proto_Skill::castdistance() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.castDistance)
  return castdistance_;
}
inline void Proto_Skill::set_castdistance(float value) {
  
  castdistance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.castDistance)
}

// optional float levCastDistance = 17;
inline void Proto_Skill::clear_levcastdistance() {
  levcastdistance_ = 0;
}
inline float Proto_Skill::levcastdistance() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levCastDistance)
  return levcastdistance_;
}
inline void Proto_Skill::set_levcastdistance(float value) {
  
  levcastdistance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levCastDistance)
}

// optional float coolingTime = 18;
inline void Proto_Skill::clear_coolingtime() {
  coolingtime_ = 0;
}
inline float Proto_Skill::coolingtime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.coolingTime)
  return coolingtime_;
}
inline void Proto_Skill::set_coolingtime(float value) {
  
  coolingtime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.coolingTime)
}

// optional float levCoolingTime = 19;
inline void Proto_Skill::clear_levcoolingtime() {
  levcoolingtime_ = 0;
}
inline float Proto_Skill::levcoolingtime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levCoolingTime)
  return levcoolingtime_;
}
inline void Proto_Skill::set_levcoolingtime(float value) {
  
  levcoolingtime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levCoolingTime)
}

// optional float standingTime = 20;
inline void Proto_Skill::clear_standingtime() {
  standingtime_ = 0;
}
inline float Proto_Skill::standingtime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.standingTime)
  return standingtime_;
}
inline void Proto_Skill::set_standingtime(float value) {
  
  standingtime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.standingTime)
}

// optional float levStandingTime = 21;
inline void Proto_Skill::clear_levstandingtime() {
  levstandingtime_ = 0;
}
inline float Proto_Skill::levstandingtime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levStandingTime)
  return levstandingtime_;
}
inline void Proto_Skill::set_levstandingtime(float value) {
  
  levstandingtime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levStandingTime)
}

// optional float damage = 22;
inline void Proto_Skill::clear_damage() {
  damage_ = 0;
}
inline float Proto_Skill::damage() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.damage)
  return damage_;
}
inline void Proto_Skill::set_damage(float value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.damage)
}

// optional float levDamage = 23;
inline void Proto_Skill::clear_levdamage() {
  levdamage_ = 0;
}
inline float Proto_Skill::levdamage() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levDamage)
  return levdamage_;
}
inline void Proto_Skill::set_levdamage(float value) {
  
  levdamage_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levDamage)
}

// optional float percent = 24;
inline void Proto_Skill::clear_percent() {
  percent_ = 0;
}
inline float Proto_Skill::percent() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.percent)
  return percent_;
}
inline void Proto_Skill::set_percent(float value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.percent)
}

// optional float levPercent = 25;
inline void Proto_Skill::clear_levpercent() {
  levpercent_ = 0;
}
inline float Proto_Skill::levpercent() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levPercent)
  return levpercent_;
}
inline void Proto_Skill::set_levpercent(float value) {
  
  levpercent_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levPercent)
}

// optional .gt_msg.Proto_BuffData buffList = 26;
inline bool Proto_Skill::has_bufflist() const {
  return !_is_default_instance_ && bufflist_ != NULL;
}
inline void Proto_Skill::clear_bufflist() {
  if (GetArenaNoVirtual() == NULL && bufflist_ != NULL) delete bufflist_;
  bufflist_ = NULL;
}
inline const ::gt_msg::Proto_BuffData& Proto_Skill::bufflist() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.buffList)
  return bufflist_ != NULL ? *bufflist_ : *default_instance_->bufflist_;
}
inline ::gt_msg::Proto_BuffData* Proto_Skill::mutable_bufflist() {
  
  if (bufflist_ == NULL) {
    bufflist_ = new ::gt_msg::Proto_BuffData;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Skill.buffList)
  return bufflist_;
}
inline ::gt_msg::Proto_BuffData* Proto_Skill::release_bufflist() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Skill.buffList)
  
  ::gt_msg::Proto_BuffData* temp = bufflist_;
  bufflist_ = NULL;
  return temp;
}
inline void Proto_Skill::set_allocated_bufflist(::gt_msg::Proto_BuffData* bufflist) {
  delete bufflist_;
  bufflist_ = bufflist;
  if (bufflist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Skill.buffList)
}

// optional string sound = 27;
inline void Proto_Skill::clear_sound() {
  sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Skill::sound() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.sound)
  return sound_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Skill::set_sound(const ::std::string& value) {
  
  sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.sound)
}
inline void Proto_Skill::set_sound(const char* value) {
  
  sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Skill.sound)
}
inline void Proto_Skill::set_sound(const char* value, size_t size) {
  
  sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Skill.sound)
}
inline ::std::string* Proto_Skill::mutable_sound() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Skill.sound)
  return sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Skill::release_sound() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Skill.sound)
  
  return sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Skill::set_allocated_sound(::std::string* sound) {
  if (sound != NULL) {
    
  } else {
    
  }
  sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sound);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Skill.sound)
}

// -------------------------------------------------------------------

// Proto_SkillList

// repeated .gt_msg.Proto_Skill dic = 1;
inline int Proto_SkillList::dic_size() const {
  return dic_.size();
}
inline void Proto_SkillList::clear_dic() {
  dic_.Clear();
}
inline const ::gt_msg::Proto_Skill& Proto_SkillList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillList.dic)
  return dic_.Get(index);
}
inline ::gt_msg::Proto_Skill* Proto_SkillList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillList.dic)
  return dic_.Mutable(index);
}
inline ::gt_msg::Proto_Skill* Proto_SkillList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_SkillList.dic)
  return dic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Skill >*
Proto_SkillList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_SkillList.dic)
  return &dic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Skill >&
Proto_SkillList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_SkillList.dic)
  return dic_;
}

// -------------------------------------------------------------------

// Proto_FlyInfo

// optional string effectName = 1;
inline void Proto_FlyInfo::clear_effectname() {
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_FlyInfo::effectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_FlyInfo.effectName)
  return effectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_FlyInfo::set_effectname(const ::std::string& value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_FlyInfo.effectName)
}
inline void Proto_FlyInfo::set_effectname(const char* value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_FlyInfo.effectName)
}
inline void Proto_FlyInfo::set_effectname(const char* value, size_t size) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_FlyInfo.effectName)
}
inline ::std::string* Proto_FlyInfo::mutable_effectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_FlyInfo.effectName)
  return effectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_FlyInfo::release_effectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_FlyInfo.effectName)
  
  return effectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_FlyInfo::set_allocated_effectname(::std::string* effectname) {
  if (effectname != NULL) {
    
  } else {
    
  }
  effectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_FlyInfo.effectName)
}

// optional int32 num = 2;
inline void Proto_FlyInfo::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 Proto_FlyInfo::num() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_FlyInfo.num)
  return num_;
}
inline void Proto_FlyInfo::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_FlyInfo.num)
}

// -------------------------------------------------------------------

// Proto_EffectData

// optional string effectName = 1;
inline void Proto_EffectData::clear_effectname() {
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_EffectData::effectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectData.effectName)
  return effectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_EffectData::set_effectname(const ::std::string& value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_EffectData.effectName)
}
inline void Proto_EffectData::set_effectname(const char* value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_EffectData.effectName)
}
inline void Proto_EffectData::set_effectname(const char* value, size_t size) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_EffectData.effectName)
}
inline ::std::string* Proto_EffectData::mutable_effectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_EffectData.effectName)
  return effectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_EffectData::release_effectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_EffectData.effectName)
  
  return effectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_EffectData::set_allocated_effectname(::std::string* effectname) {
  if (effectname != NULL) {
    
  } else {
    
  }
  effectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_EffectData.effectName)
}

// optional .gt_msg.AddonIndexEnum addon = 2;
inline void Proto_EffectData::clear_addon() {
  addon_ = 0;
}
inline ::gt_msg::AddonIndexEnum Proto_EffectData::addon() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectData.addon)
  return static_cast< ::gt_msg::AddonIndexEnum >(addon_);
}
inline void Proto_EffectData::set_addon(::gt_msg::AddonIndexEnum value) {
  
  addon_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_EffectData.addon)
}

// optional .gt_msg.Vec3 offset = 3;
inline bool Proto_EffectData::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
inline void Proto_EffectData::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
inline const ::gt_msg::Vec3& Proto_EffectData::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectData.offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
inline ::gt_msg::Vec3* Proto_EffectData::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_EffectData.offset)
  return offset_;
}
inline ::gt_msg::Vec3* Proto_EffectData::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_EffectData.offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline void Proto_EffectData::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_EffectData.offset)
}

// -------------------------------------------------------------------

// Proto_EffectInfo

// optional .gt_msg.AnimationType animation = 1;
inline void Proto_EffectInfo::clear_animation() {
  animation_ = 0;
}
inline ::gt_msg::AnimationType Proto_EffectInfo::animation() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectInfo.animation)
  return static_cast< ::gt_msg::AnimationType >(animation_);
}
inline void Proto_EffectInfo::set_animation(::gt_msg::AnimationType value) {
  
  animation_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_EffectInfo.animation)
}

// optional float duration = 2;
inline void Proto_EffectInfo::clear_duration() {
  duration_ = 0;
}
inline float Proto_EffectInfo::duration() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectInfo.duration)
  return duration_;
}
inline void Proto_EffectInfo::set_duration(float value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_EffectInfo.duration)
}

// repeated .gt_msg.Proto_EffectData effectList = 3;
inline int Proto_EffectInfo::effectlist_size() const {
  return effectlist_.size();
}
inline void Proto_EffectInfo::clear_effectlist() {
  effectlist_.Clear();
}
inline const ::gt_msg::Proto_EffectData& Proto_EffectInfo::effectlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectInfo.effectList)
  return effectlist_.Get(index);
}
inline ::gt_msg::Proto_EffectData* Proto_EffectInfo::mutable_effectlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_EffectInfo.effectList)
  return effectlist_.Mutable(index);
}
inline ::gt_msg::Proto_EffectData* Proto_EffectInfo::add_effectlist() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_EffectInfo.effectList)
  return effectlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_EffectData >*
Proto_EffectInfo::mutable_effectlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_EffectInfo.effectList)
  return &effectlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_EffectData >&
Proto_EffectInfo::effectlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_EffectInfo.effectList)
  return effectlist_;
}

// -------------------------------------------------------------------

// Proto_SkillEffect

// optional int32 id = 1;
inline void Proto_SkillEffect::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Proto_SkillEffect::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.id)
  return id_;
}
inline void Proto_SkillEffect::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.id)
}

// optional string description = 2;
inline void Proto_SkillEffect::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_SkillEffect::description() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_SkillEffect::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.description)
}
inline void Proto_SkillEffect::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_SkillEffect.description)
}
inline void Proto_SkillEffect::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_SkillEffect.description)
}
inline ::std::string* Proto_SkillEffect::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_SkillEffect::release_description() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_SkillEffect::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.description)
}

// optional string beatenEffectName = 3;
inline void Proto_SkillEffect::clear_beateneffectname() {
  beateneffectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_SkillEffect::beateneffectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.beatenEffectName)
  return beateneffectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_SkillEffect::set_beateneffectname(const ::std::string& value) {
  
  beateneffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.beatenEffectName)
}
inline void Proto_SkillEffect::set_beateneffectname(const char* value) {
  
  beateneffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_SkillEffect.beatenEffectName)
}
inline void Proto_SkillEffect::set_beateneffectname(const char* value, size_t size) {
  
  beateneffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_SkillEffect.beatenEffectName)
}
inline ::std::string* Proto_SkillEffect::mutable_beateneffectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.beatenEffectName)
  return beateneffectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_SkillEffect::release_beateneffectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.beatenEffectName)
  
  return beateneffectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_SkillEffect::set_allocated_beateneffectname(::std::string* beateneffectname) {
  if (beateneffectname != NULL) {
    
  } else {
    
  }
  beateneffectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), beateneffectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.beatenEffectName)
}

// optional .gt_msg.AddonIndexEnum flyAddon = 4;
inline void Proto_SkillEffect::clear_flyaddon() {
  flyaddon_ = 0;
}
inline ::gt_msg::AddonIndexEnum Proto_SkillEffect::flyaddon() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.flyAddon)
  return static_cast< ::gt_msg::AddonIndexEnum >(flyaddon_);
}
inline void Proto_SkillEffect::set_flyaddon(::gt_msg::AddonIndexEnum value) {
  
  flyaddon_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.flyAddon)
}

// optional float flySpeed = 5;
inline void Proto_SkillEffect::clear_flyspeed() {
  flyspeed_ = 0;
}
inline float Proto_SkillEffect::flyspeed() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.flySpeed)
  return flyspeed_;
}
inline void Proto_SkillEffect::set_flyspeed(float value) {
  
  flyspeed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.flySpeed)
}

// optional .gt_msg.Proto_EffectInfo firstEffect = 6;
inline bool Proto_SkillEffect::has_firsteffect() const {
  return !_is_default_instance_ && firsteffect_ != NULL;
}
inline void Proto_SkillEffect::clear_firsteffect() {
  if (GetArenaNoVirtual() == NULL && firsteffect_ != NULL) delete firsteffect_;
  firsteffect_ = NULL;
}
inline const ::gt_msg::Proto_EffectInfo& Proto_SkillEffect::firsteffect() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.firstEffect)
  return firsteffect_ != NULL ? *firsteffect_ : *default_instance_->firsteffect_;
}
inline ::gt_msg::Proto_EffectInfo* Proto_SkillEffect::mutable_firsteffect() {
  
  if (firsteffect_ == NULL) {
    firsteffect_ = new ::gt_msg::Proto_EffectInfo;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.firstEffect)
  return firsteffect_;
}
inline ::gt_msg::Proto_EffectInfo* Proto_SkillEffect::release_firsteffect() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.firstEffect)
  
  ::gt_msg::Proto_EffectInfo* temp = firsteffect_;
  firsteffect_ = NULL;
  return temp;
}
inline void Proto_SkillEffect::set_allocated_firsteffect(::gt_msg::Proto_EffectInfo* firsteffect) {
  delete firsteffect_;
  firsteffect_ = firsteffect;
  if (firsteffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.firstEffect)
}

// optional .gt_msg.Proto_EffectInfo damageEffect = 7;
inline bool Proto_SkillEffect::has_damageeffect() const {
  return !_is_default_instance_ && damageeffect_ != NULL;
}
inline void Proto_SkillEffect::clear_damageeffect() {
  if (GetArenaNoVirtual() == NULL && damageeffect_ != NULL) delete damageeffect_;
  damageeffect_ = NULL;
}
inline const ::gt_msg::Proto_EffectInfo& Proto_SkillEffect::damageeffect() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.damageEffect)
  return damageeffect_ != NULL ? *damageeffect_ : *default_instance_->damageeffect_;
}
inline ::gt_msg::Proto_EffectInfo* Proto_SkillEffect::mutable_damageeffect() {
  
  if (damageeffect_ == NULL) {
    damageeffect_ = new ::gt_msg::Proto_EffectInfo;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.damageEffect)
  return damageeffect_;
}
inline ::gt_msg::Proto_EffectInfo* Proto_SkillEffect::release_damageeffect() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.damageEffect)
  
  ::gt_msg::Proto_EffectInfo* temp = damageeffect_;
  damageeffect_ = NULL;
  return temp;
}
inline void Proto_SkillEffect::set_allocated_damageeffect(::gt_msg::Proto_EffectInfo* damageeffect) {
  delete damageeffect_;
  damageeffect_ = damageeffect;
  if (damageeffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.damageEffect)
}

// optional .gt_msg.Proto_EffectInfo durationEffect = 8;
inline bool Proto_SkillEffect::has_durationeffect() const {
  return !_is_default_instance_ && durationeffect_ != NULL;
}
inline void Proto_SkillEffect::clear_durationeffect() {
  if (GetArenaNoVirtual() == NULL && durationeffect_ != NULL) delete durationeffect_;
  durationeffect_ = NULL;
}
inline const ::gt_msg::Proto_EffectInfo& Proto_SkillEffect::durationeffect() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.durationEffect)
  return durationeffect_ != NULL ? *durationeffect_ : *default_instance_->durationeffect_;
}
inline ::gt_msg::Proto_EffectInfo* Proto_SkillEffect::mutable_durationeffect() {
  
  if (durationeffect_ == NULL) {
    durationeffect_ = new ::gt_msg::Proto_EffectInfo;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.durationEffect)
  return durationeffect_;
}
inline ::gt_msg::Proto_EffectInfo* Proto_SkillEffect::release_durationeffect() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.durationEffect)
  
  ::gt_msg::Proto_EffectInfo* temp = durationeffect_;
  durationeffect_ = NULL;
  return temp;
}
inline void Proto_SkillEffect::set_allocated_durationeffect(::gt_msg::Proto_EffectInfo* durationeffect) {
  delete durationeffect_;
  durationeffect_ = durationeffect;
  if (durationeffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.durationEffect)
}

// optional .gt_msg.Proto_FlyInfo flyList = 9;
inline bool Proto_SkillEffect::has_flylist() const {
  return !_is_default_instance_ && flylist_ != NULL;
}
inline void Proto_SkillEffect::clear_flylist() {
  if (GetArenaNoVirtual() == NULL && flylist_ != NULL) delete flylist_;
  flylist_ = NULL;
}
inline const ::gt_msg::Proto_FlyInfo& Proto_SkillEffect::flylist() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.flyList)
  return flylist_ != NULL ? *flylist_ : *default_instance_->flylist_;
}
inline ::gt_msg::Proto_FlyInfo* Proto_SkillEffect::mutable_flylist() {
  
  if (flylist_ == NULL) {
    flylist_ = new ::gt_msg::Proto_FlyInfo;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.flyList)
  return flylist_;
}
inline ::gt_msg::Proto_FlyInfo* Proto_SkillEffect::release_flylist() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.flyList)
  
  ::gt_msg::Proto_FlyInfo* temp = flylist_;
  flylist_ = NULL;
  return temp;
}
inline void Proto_SkillEffect::set_allocated_flylist(::gt_msg::Proto_FlyInfo* flylist) {
  delete flylist_;
  flylist_ = flylist;
  if (flylist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.flyList)
}

// -------------------------------------------------------------------

// Proto_SkillEffectList

// repeated .gt_msg.Proto_SkillEffect dic = 1;
inline int Proto_SkillEffectList::dic_size() const {
  return dic_.size();
}
inline void Proto_SkillEffectList::clear_dic() {
  dic_.Clear();
}
inline const ::gt_msg::Proto_SkillEffect& Proto_SkillEffectList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffectList.dic)
  return dic_.Get(index);
}
inline ::gt_msg::Proto_SkillEffect* Proto_SkillEffectList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffectList.dic)
  return dic_.Mutable(index);
}
inline ::gt_msg::Proto_SkillEffect* Proto_SkillEffectList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_SkillEffectList.dic)
  return dic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillEffect >*
Proto_SkillEffectList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_SkillEffectList.dic)
  return &dic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillEffect >&
Proto_SkillEffectList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_SkillEffectList.dic)
  return dic_;
}

// -------------------------------------------------------------------

// Proto_BufEffect

// optional int32 iD = 1;
inline void Proto_BufEffect::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Proto_BufEffect::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.iD)
  return id_;
}
inline void Proto_BufEffect::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.iD)
}

// optional int32 type = 2;
inline void Proto_BufEffect::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Proto_BufEffect::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.type)
  return type_;
}
inline void Proto_BufEffect::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.type)
}

// optional int32 param1 = 3;
inline void Proto_BufEffect::clear_param1() {
  param1_ = 0;
}
inline ::google::protobuf::int32 Proto_BufEffect::param1() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.param1)
  return param1_;
}
inline void Proto_BufEffect::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.param1)
}

// optional float param2 = 4;
inline void Proto_BufEffect::clear_param2() {
  param2_ = 0;
}
inline float Proto_BufEffect::param2() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.param2)
  return param2_;
}
inline void Proto_BufEffect::set_param2(float value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.param2)
}

// optional float levParam2 = 5;
inline void Proto_BufEffect::clear_levparam2() {
  levparam2_ = 0;
}
inline float Proto_BufEffect::levparam2() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.levParam2)
  return levparam2_;
}
inline void Proto_BufEffect::set_levparam2(float value) {
  
  levparam2_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.levParam2)
}

// -------------------------------------------------------------------

// Proto_Buf

// optional int32 id = 1;
inline void Proto_Buf::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Proto_Buf::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.id)
  return id_;
}
inline void Proto_Buf::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.id)
}

// optional string name = 2;
inline void Proto_Buf::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Buf::name() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Buf::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.name)
}
inline void Proto_Buf::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Buf.name)
}
inline void Proto_Buf::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Buf.name)
}
inline ::std::string* Proto_Buf::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Buf::release_name() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Buf.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Buf::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Buf.name)
}

// optional string description = 3;
inline void Proto_Buf::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Buf::description() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Buf::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.description)
}
inline void Proto_Buf::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Buf.description)
}
inline void Proto_Buf::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Buf.description)
}
inline ::std::string* Proto_Buf::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Buf::release_description() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Buf.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Buf::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Buf.description)
}

// optional int32 maxLevel = 4;
inline void Proto_Buf::clear_maxlevel() {
  maxlevel_ = 0;
}
inline ::google::protobuf::int32 Proto_Buf::maxlevel() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.maxLevel)
  return maxlevel_;
}
inline void Proto_Buf::set_maxlevel(::google::protobuf::int32 value) {
  
  maxlevel_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.maxLevel)
}

// optional .gt_msg.BenefitType benefitType = 5;
inline void Proto_Buf::clear_benefittype() {
  benefittype_ = 0;
}
inline ::gt_msg::BenefitType Proto_Buf::benefittype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.benefitType)
  return static_cast< ::gt_msg::BenefitType >(benefittype_);
}
inline void Proto_Buf::set_benefittype(::gt_msg::BenefitType value) {
  
  benefittype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.benefitType)
}

// optional .gt_msg.ReplaceType replaceType = 6;
inline void Proto_Buf::clear_replacetype() {
  replacetype_ = 0;
}
inline ::gt_msg::ReplaceType Proto_Buf::replacetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.replaceType)
  return static_cast< ::gt_msg::ReplaceType >(replacetype_);
}
inline void Proto_Buf::set_replacetype(::gt_msg::ReplaceType value) {
  
  replacetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.replaceType)
}

// optional string effectName = 7;
inline void Proto_Buf::clear_effectname() {
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Proto_Buf::effectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.effectName)
  return effectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Buf::set_effectname(const ::std::string& value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.effectName)
}
inline void Proto_Buf::set_effectname(const char* value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Buf.effectName)
}
inline void Proto_Buf::set_effectname(const char* value, size_t size) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Buf.effectName)
}
inline ::std::string* Proto_Buf::mutable_effectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.effectName)
  return effectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Proto_Buf::release_effectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Buf.effectName)
  
  return effectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Proto_Buf::set_allocated_effectname(::std::string* effectname) {
  if (effectname != NULL) {
    
  } else {
    
  }
  effectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Buf.effectName)
}

// optional int32 damage = 8;
inline void Proto_Buf::clear_damage() {
  damage_ = 0;
}
inline ::google::protobuf::int32 Proto_Buf::damage() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.damage)
  return damage_;
}
inline void Proto_Buf::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.damage)
}

// optional bool isPercent = 9;
inline void Proto_Buf::clear_ispercent() {
  ispercent_ = false;
}
inline bool Proto_Buf::ispercent() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.isPercent)
  return ispercent_;
}
inline void Proto_Buf::set_ispercent(bool value) {
  
  ispercent_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.isPercent)
}

// optional .gt_msg.DamageType damageType = 10;
inline void Proto_Buf::clear_damagetype() {
  damagetype_ = 0;
}
inline ::gt_msg::DamageType Proto_Buf::damagetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.damageType)
  return static_cast< ::gt_msg::DamageType >(damagetype_);
}
inline void Proto_Buf::set_damagetype(::gt_msg::DamageType value) {
  
  damagetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.damageType)
}

// optional .gt_msg.InfluenceType influenceType = 11;
inline void Proto_Buf::clear_influencetype() {
  influencetype_ = 0;
}
inline ::gt_msg::InfluenceType Proto_Buf::influencetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.influenceType)
  return static_cast< ::gt_msg::InfluenceType >(influencetype_);
}
inline void Proto_Buf::set_influencetype(::gt_msg::InfluenceType value) {
  
  influencetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.influenceType)
}

// optional float cycleTime = 12;
inline void Proto_Buf::clear_cycletime() {
  cycletime_ = 0;
}
inline float Proto_Buf::cycletime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.cycleTime)
  return cycletime_;
}
inline void Proto_Buf::set_cycletime(float value) {
  
  cycletime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.cycleTime)
}

// optional .gt_msg.Vec3 offset = 13;
inline bool Proto_Buf::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
inline void Proto_Buf::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
inline const ::gt_msg::Vec3& Proto_Buf::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
inline ::gt_msg::Vec3* Proto_Buf::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.offset)
  return offset_;
}
inline ::gt_msg::Vec3* Proto_Buf::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Buf.offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline void Proto_Buf::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Buf.offset)
}

// repeated .gt_msg.Proto_BufEffect effectList = 14;
inline int Proto_Buf::effectlist_size() const {
  return effectlist_.size();
}
inline void Proto_Buf::clear_effectlist() {
  effectlist_.Clear();
}
inline const ::gt_msg::Proto_BufEffect& Proto_Buf::effectlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.effectList)
  return effectlist_.Get(index);
}
inline ::gt_msg::Proto_BufEffect* Proto_Buf::mutable_effectlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.effectList)
  return effectlist_.Mutable(index);
}
inline ::gt_msg::Proto_BufEffect* Proto_Buf::add_effectlist() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_Buf.effectList)
  return effectlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_BufEffect >*
Proto_Buf::mutable_effectlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_Buf.effectList)
  return &effectlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_BufEffect >&
Proto_Buf::effectlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_Buf.effectList)
  return effectlist_;
}

// -------------------------------------------------------------------

// Proto_BufList

// repeated .gt_msg.Proto_Buf dic = 1;
inline int Proto_BufList::dic_size() const {
  return dic_.size();
}
inline void Proto_BufList::clear_dic() {
  dic_.Clear();
}
inline const ::gt_msg::Proto_Buf& Proto_BufList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufList.dic)
  return dic_.Get(index);
}
inline ::gt_msg::Proto_Buf* Proto_BufList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_BufList.dic)
  return dic_.Mutable(index);
}
inline ::gt_msg::Proto_Buf* Proto_BufList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_BufList.dic)
  return dic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Buf >*
Proto_BufList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_BufList.dic)
  return &dic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Buf >&
Proto_BufList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_BufList.dic)
  return dic_;
}

// -------------------------------------------------------------------

// Proto_LearnSkill

// optional int32 type = 1;
inline void Proto_LearnSkill::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Proto_LearnSkill::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_LearnSkill.type)
  return type_;
}
inline void Proto_LearnSkill::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_LearnSkill.type)
}

// repeated .gt_msg.Proto_SkillData fixedSkill = 2;
inline int Proto_LearnSkill::fixedskill_size() const {
  return fixedskill_.size();
}
inline void Proto_LearnSkill::clear_fixedskill() {
  fixedskill_.Clear();
}
inline const ::gt_msg::Proto_SkillData& Proto_LearnSkill::fixedskill(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_LearnSkill.fixedSkill)
  return fixedskill_.Get(index);
}
inline ::gt_msg::Proto_SkillData* Proto_LearnSkill::mutable_fixedskill(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_LearnSkill.fixedSkill)
  return fixedskill_.Mutable(index);
}
inline ::gt_msg::Proto_SkillData* Proto_LearnSkill::add_fixedskill() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_LearnSkill.fixedSkill)
  return fixedskill_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
Proto_LearnSkill::mutable_fixedskill() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_LearnSkill.fixedSkill)
  return &fixedskill_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
Proto_LearnSkill::fixedskill() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_LearnSkill.fixedSkill)
  return fixedskill_;
}

// repeated .gt_msg.Proto_SkillData learnSkill = 3;
inline int Proto_LearnSkill::learnskill_size() const {
  return learnskill_.size();
}
inline void Proto_LearnSkill::clear_learnskill() {
  learnskill_.Clear();
}
inline const ::gt_msg::Proto_SkillData& Proto_LearnSkill::learnskill(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_LearnSkill.learnSkill)
  return learnskill_.Get(index);
}
inline ::gt_msg::Proto_SkillData* Proto_LearnSkill::mutable_learnskill(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_LearnSkill.learnSkill)
  return learnskill_.Mutable(index);
}
inline ::gt_msg::Proto_SkillData* Proto_LearnSkill::add_learnskill() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_LearnSkill.learnSkill)
  return learnskill_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
Proto_LearnSkill::mutable_learnskill() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_LearnSkill.learnSkill)
  return &learnskill_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
Proto_LearnSkill::learnskill() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_LearnSkill.learnSkill)
  return learnskill_;
}

// -------------------------------------------------------------------

// Proto_LearnSkillList

// repeated .gt_msg.Proto_LearnSkill dic = 1;
inline int Proto_LearnSkillList::dic_size() const {
  return dic_.size();
}
inline void Proto_LearnSkillList::clear_dic() {
  dic_.Clear();
}
inline const ::gt_msg::Proto_LearnSkill& Proto_LearnSkillList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_LearnSkillList.dic)
  return dic_.Get(index);
}
inline ::gt_msg::Proto_LearnSkill* Proto_LearnSkillList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_LearnSkillList.dic)
  return dic_.Mutable(index);
}
inline ::gt_msg::Proto_LearnSkill* Proto_LearnSkillList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_LearnSkillList.dic)
  return dic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_LearnSkill >*
Proto_LearnSkillList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_LearnSkillList.dic)
  return &dic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_LearnSkill >&
Proto_LearnSkillList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_LearnSkillList.dic)
  return dic_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gt_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gt_5fbuyu_2eproto__INCLUDED
