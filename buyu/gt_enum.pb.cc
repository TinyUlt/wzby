// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gt_enum.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gt_enum.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gt_msg {

namespace {

const ::google::protobuf::EnumDescriptor* Object_Type_Enum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* JobType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SkillEffect_Type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DamageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RangeType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SkillType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Skill_DamageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TargetType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AddonIndexEnum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AnimationType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BenefitType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ReplaceType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* InfluenceType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ObjectBaseAtribute_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AnimationEvent_Enum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BuffEffectType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ObjectEnemySide_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_gt_5fenum_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_gt_5fenum_2eproto() {
  protobuf_AddDesc_gt_5fenum_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gt_enum.proto");
  GOOGLE_CHECK(file != NULL);
  Object_Type_Enum_descriptor_ = file->enum_type(0);
  JobType_descriptor_ = file->enum_type(1);
  SkillEffect_Type_descriptor_ = file->enum_type(2);
  DamageType_descriptor_ = file->enum_type(3);
  RangeType_descriptor_ = file->enum_type(4);
  SkillType_descriptor_ = file->enum_type(5);
  Skill_DamageType_descriptor_ = file->enum_type(6);
  TargetType_descriptor_ = file->enum_type(7);
  AddonIndexEnum_descriptor_ = file->enum_type(8);
  AnimationType_descriptor_ = file->enum_type(9);
  BenefitType_descriptor_ = file->enum_type(10);
  ReplaceType_descriptor_ = file->enum_type(11);
  InfluenceType_descriptor_ = file->enum_type(12);
  ObjectBaseAtribute_descriptor_ = file->enum_type(13);
  AnimationEvent_Enum_descriptor_ = file->enum_type(14);
  BuffEffectType_descriptor_ = file->enum_type(15);
  ObjectEnemySide_descriptor_ = file->enum_type(16);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gt_5fenum_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_gt_5fenum_2eproto() {
}

void protobuf_AddDesc_gt_5fenum_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_gt_5fenum_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rgt_enum.proto\022\006gt_msg*K\n\020Object_Type_E"
    "num\022\014\n\010SceneObj\020\000\022\020\n\014PlayerObject\020\001\022\r\n\tN"
    "pcObject\020\002\022\010\n\004Boss\020\003*u\n\007JobType\022\010\n\004None\020"
    "\000\022\014\n\010JobTanke\020\001\022\016\n\nJobZhanShi\020\002\022\013\n\007JobCi"
    "Ke\020\003\022\014\n\010JobFaShi\020\004\022\016\n\nJobSheShou\020\005\022\013\n\007Jo"
    "bFuZu\020\006\022\n\n\006JobMax\020\007*W\n\020SkillEffect_Type\022"
    "\016\n\nEffectNone\020\000\022\016\n\nEffectRush\020\001\022\n\n\006Bulle"
    "t\020\002\022\t\n\005Scope\020\003\022\014\n\010Rotation\020\004*\\\n\nDamageTy"
    "pe\022\016\n\nDamageNone\020\000\022\025\n\021PhysicsDepartment\020"
    "\001\022\023\n\017MagicDepartment\020\002\022\022\n\016CureDepartment"
    "\020\003*]\n\tRangeType\022\013\n\007CureOne\020\000\022\013\n\007Monomer\020"
    "\001\022\r\n\tAimCircle\020\002\022\016\n\nSelfCircle\020\003\022\013\n\007BeeL"
    "ine\020\004\022\n\n\006Sector\020\005*=\n\tSkillType\022\016\n\nInitia"
    "tive\020\000\022\017\n\013Passiveness\020\001\022\017\n\013AutoTrigger\020\002"
    "*P\n\020Skill_DamageType\022\023\n\017SkillDamageNone\020"
    "\000\022\022\n\016SkillDamageHit\020\001\022\023\n\017SkillDamageMiss"
    "\020\002*!\n\nTargetType\022\t\n\005enemy\020\000\022\010\n\004self\020\001*\216\001"
    "\n\016AddonIndexEnum\022\r\n\tAddonNone\020\000\022\017\n\013Addon"
    "Foot_R\020\001\022\017\n\013AddonFoot_L\020\002\022\r\n\tAddonHead\020\003"
    "\022\016\n\nAddonSpine\020\004\022\016\n\nAddonHandR\020\005\022\016\n\nAddo"
    "nHandL\020\006\022\014\n\010AddonMax\020\007*\205\002\n\rAnimationType"
    "\022\021\n\rAnimationNone\020\000\022\010\n\004Idel\020\001\022\007\n\003Run\020\002\022\t"
    "\n\005Death\020\003\022\n\n\006Spell1\020\004\022\n\n\006Spell2\020\005\022\n\n\006Spe"
    "ll3\020\006\022\010\n\004Ack1\020\007\022\010\n\004Ack2\020\010\022\010\n\004Ack3\020\t\022\010\n\004A"
    "ck4\020\n\022\t\n\005Dodge\020\013\022\n\n\006Beaten\020\014\022\t\n\005Ready\020\r\022"
    "\010\n\004Rush\020\016\022\t\n\005Swoon\020\017\022\010\n\004Stun\020\020\022\010\n\004Born\020\021"
    "\022\014\n\010SpellRun\020\022\022\013\n\007Succeed\020\023\022\010\n\004Fail\020\024\022\007\n"
    "\003Max\020\025*)\n\013BenefitType\022\014\n\010Increase\020\000\022\014\n\010D"
    "ecrease\020\001*H\n\013ReplaceType\022\017\n\013ReplaceNone\020"
    "\000\022\n\n\006Pileup\020\001\022\013\n\007Replace\020\002\022\017\n\013pileup_tim"
    "e\020\003*$\n\rInfluenceType\022\010\n\004Self\020\000\022\t\n\005Enemy\020"
    "\001*\222\001\n\022ObjectBaseAtribute\022\020\n\014AtributeNone"
    "\020\000\022\r\n\tPhysicAtk\020\001\022\014\n\010MagicAtk\020\002\022\006\n\002Hp\020\003\022"
    "\013\n\007Defance\020\004\022\014\n\010MagicDef\020\005\022\016\n\nBurstsRate"
    "\020\006\022\r\n\tFlashRate\020\007\022\013\n\007HitRate\020\010*=\n\023Animat"
    "ionEvent_Enum\022\013\n\007AniDead\020\000\022\014\n\010AniFight\020\001"
    "\022\013\n\007AniIdle\020\002*\242\001\n\016BuffEffectType\022\021\n\rBufE"
    "ffectNone\020\000\022\022\n\016AttributeAdded\020\001\022\024\n\020Attri"
    "butePercent\020\002\022\021\n\rInvincibility\020\003\022\014\n\010Iceb"
    "ound\020\004\022\t\n\005Qualm\020\005\022\014\n\010Slowdown\020\006\022\n\n\006SlowU"
    "p\020\007\022\r\n\tSuckBlood\020\010*>\n\017ObjectEnemySide\022\016\n"
    "\nNeturalObj\020\000\022\r\n\tMySelfObj\020\001\022\014\n\010EnemyObj"
    "\020\002b\006proto3", 1690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gt_enum.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gt_5fenum_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gt_5fenum_2eproto {
  StaticDescriptorInitializer_gt_5fenum_2eproto() {
    protobuf_AddDesc_gt_5fenum_2eproto();
  }
} static_descriptor_initializer_gt_5fenum_2eproto_;
const ::google::protobuf::EnumDescriptor* Object_Type_Enum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Object_Type_Enum_descriptor_;
}
bool Object_Type_Enum_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* JobType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JobType_descriptor_;
}
bool JobType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SkillEffect_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillEffect_Type_descriptor_;
}
bool SkillEffect_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DamageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DamageType_descriptor_;
}
bool DamageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RangeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RangeType_descriptor_;
}
bool RangeType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SkillType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillType_descriptor_;
}
bool SkillType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Skill_DamageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Skill_DamageType_descriptor_;
}
bool Skill_DamageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TargetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TargetType_descriptor_;
}
bool TargetType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AddonIndexEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddonIndexEnum_descriptor_;
}
bool AddonIndexEnum_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AnimationType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnimationType_descriptor_;
}
bool AnimationType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BenefitType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BenefitType_descriptor_;
}
bool BenefitType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReplaceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplaceType_descriptor_;
}
bool ReplaceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InfluenceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfluenceType_descriptor_;
}
bool InfluenceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ObjectBaseAtribute_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectBaseAtribute_descriptor_;
}
bool ObjectBaseAtribute_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AnimationEvent_Enum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnimationEvent_Enum_descriptor_;
}
bool AnimationEvent_Enum_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BuffEffectType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffEffectType_descriptor_;
}
bool BuffEffectType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ObjectEnemySide_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectEnemySide_descriptor_;
}
bool ObjectEnemySide_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gt_msg

// @@protoc_insertion_point(global_scope)
