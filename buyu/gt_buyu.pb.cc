// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gt_buyu.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gt_buyu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gt_msg {

namespace {

const ::google::protobuf::Descriptor* Vec2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Vec2_reflection_ = NULL;
const ::google::protobuf::Descriptor* Vec3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Vec3_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestPoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestPoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* ColliderCircle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColliderCircle_reflection_ = NULL;
const ::google::protobuf::Descriptor* Quate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Quate_reflection_ = NULL;
const ::google::protobuf::Descriptor* Size_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Size_reflection_ = NULL;
const ::google::protobuf::Descriptor* PointInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PointInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SinglePath_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SinglePath_reflection_ = NULL;
const ::google::protobuf::Descriptor* PathGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PathGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* MapGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* NavMeshGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NavMeshGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageTimer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageTimer_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProductItemContent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProductItemContent_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProductItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProductItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProductItemGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProductItemGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* FishProductNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FishProductNode_reflection_ = NULL;
const ::google::protobuf::Descriptor* row_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  row_reflection_ = NULL;
const ::google::protobuf::Descriptor* MapData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Nears_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Nears_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cell_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cell_reflection_ = NULL;
const ::google::protobuf::Descriptor* PosData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PosData_reflection_ = NULL;
const ::google::protobuf::Descriptor* NavData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NavData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SynPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SynPos_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_StartGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_StartGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_FrameSync_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_FrameSync_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_SpawnItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_SpawnItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* R_ChangeMultiple_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  R_ChangeMultiple_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_ChangeMultiple_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_ChangeMultiple_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_KillItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_KillItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* R_Move_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  R_Move_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_Move_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_Move_reflection_ = NULL;
const ::google::protobuf::Descriptor* R_Attack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  R_Attack_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_Attack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_Attack_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_ItemScore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_ItemScore_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_TestDelay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_TestDelay_reflection_ = NULL;
const ::google::protobuf::Descriptor* R_TestDelay_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  R_TestDelay_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_MovePosList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_MovePosList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Victim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Victim_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_Hit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_Hit_reflection_ = NULL;
const ::google::protobuf::Descriptor* S_LV_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S_LV_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SkillData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SkillData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_Monster_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_Monster_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_MonsterList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_MonsterList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_BuffData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_BuffData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_Skill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_Skill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SkillList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SkillList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_FlyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_FlyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_EffectData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_EffectData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_EffectInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_EffectInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SkillEffect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SkillEffect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_SkillEffectList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_SkillEffectList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_BufEffect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_BufEffect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_Buf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_Buf_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_BufList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_BufList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_LearnSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_LearnSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto_LearnSkillList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto_LearnSkillList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gt_5fbuyu_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_gt_5fbuyu_2eproto() {
  protobuf_AddDesc_gt_5fbuyu_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gt_buyu.proto");
  GOOGLE_CHECK(file != NULL);
  Vec2_descriptor_ = file->message_type(0);
  static const int Vec2_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec2, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec2, y_),
  };
  Vec2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Vec2_descriptor_,
      Vec2::default_instance_,
      Vec2_offsets_,
      -1,
      -1,
      -1,
      sizeof(Vec2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec2, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec2, _is_default_instance_));
  Vec3_descriptor_ = file->message_type(1);
  static const int Vec3_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec3, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec3, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec3, z_),
  };
  Vec3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Vec3_descriptor_,
      Vec3::default_instance_,
      Vec3_offsets_,
      -1,
      -1,
      -1,
      sizeof(Vec3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec3, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vec3, _is_default_instance_));
  TestPoint_descriptor_ = file->message_type(2);
  static const int TestPoint_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPoint, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPoint, point_),
  };
  TestPoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestPoint_descriptor_,
      TestPoint::default_instance_,
      TestPoint_offsets_,
      -1,
      -1,
      -1,
      sizeof(TestPoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPoint, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestPoint, _is_default_instance_));
  ColliderCircle_descriptor_ = file->message_type(3);
  static const int ColliderCircle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColliderCircle, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColliderCircle, radius_),
  };
  ColliderCircle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ColliderCircle_descriptor_,
      ColliderCircle::default_instance_,
      ColliderCircle_offsets_,
      -1,
      -1,
      -1,
      sizeof(ColliderCircle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColliderCircle, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColliderCircle, _is_default_instance_));
  Quate_descriptor_ = file->message_type(4);
  static const int Quate_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quate, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quate, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quate, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quate, w_),
  };
  Quate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Quate_descriptor_,
      Quate::default_instance_,
      Quate_offsets_,
      -1,
      -1,
      -1,
      sizeof(Quate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quate, _is_default_instance_));
  Size_descriptor_ = file->message_type(5);
  static const int Size_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Size, widht_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Size, height_),
  };
  Size_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Size_descriptor_,
      Size::default_instance_,
      Size_offsets_,
      -1,
      -1,
      -1,
      sizeof(Size),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Size, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Size, _is_default_instance_));
  PointInfo_descriptor_ = file->message_type(6);
  static const int PointInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointInfo, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointInfo, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointInfo, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointInfo, distance_),
  };
  PointInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PointInfo_descriptor_,
      PointInfo::default_instance_,
      PointInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PointInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointInfo, _is_default_instance_));
  SinglePath_descriptor_ = file->message_type(7);
  static const int SinglePath_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, pathname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, pathpointlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, actions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, copypathname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, radianoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, deepoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, speedscale_),
  };
  SinglePath_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SinglePath_descriptor_,
      SinglePath::default_instance_,
      SinglePath_offsets_,
      -1,
      -1,
      -1,
      sizeof(SinglePath),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SinglePath, _is_default_instance_));
  PathGroup_descriptor_ = file->message_type(8);
  static const int PathGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathGroup, pathlist_),
  };
  PathGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PathGroup_descriptor_,
      PathGroup::default_instance_,
      PathGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(PathGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathGroup, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathGroup, _is_default_instance_));
  MapGroup_descriptor_ = file->message_type(9);
  static const int MapGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapGroup, pathlist_),
  };
  MapGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MapGroup_descriptor_,
      MapGroup::default_instance_,
      MapGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(MapGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapGroup, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapGroup, _is_default_instance_));
  NavMeshGroup_descriptor_ = file->message_type(10);
  static const int NavMeshGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NavMeshGroup, indexlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NavMeshGroup, verticelist_),
  };
  NavMeshGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NavMeshGroup_descriptor_,
      NavMeshGroup::default_instance_,
      NavMeshGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(NavMeshGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NavMeshGroup, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NavMeshGroup, _is_default_instance_));
  ActionData_descriptor_ = file->message_type(11);
  static const int ActionData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionData, actionframe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionData, playidleindex_),
  };
  ActionData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActionData_descriptor_,
      ActionData::default_instance_,
      ActionData_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActionData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionData, _is_default_instance_));
  MessageTimer_descriptor_ = file->message_type(12);
  static const int MessageTimer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageTimer, passframe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageTimer, message_),
  };
  MessageTimer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageTimer_descriptor_,
      MessageTimer::default_instance_,
      MessageTimer_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageTimer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageTimer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageTimer, _is_default_instance_));
  ProductItemContent_descriptor_ = file->message_type(13);
  static const int ProductItemContent_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, productitemindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, fishlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, speedscale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, angleoffset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, followcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, followdistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, forever_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, items_),
  };
  ProductItemContent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProductItemContent_descriptor_,
      ProductItemContent::default_instance_,
      ProductItemContent_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProductItemContent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemContent, _is_default_instance_));
  ProductItem_descriptor_ = file->message_type(14);
  static const int ProductItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItem, contentname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItem, issync_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItem, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItem, contentitems_),
  };
  ProductItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProductItem_descriptor_,
      ProductItem::default_instance_,
      ProductItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProductItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItem, _is_default_instance_));
  ProductItemGroup_descriptor_ = file->message_type(15);
  static const int ProductItemGroup_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemGroup, itemlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemGroup, mainenter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemGroup, addfishenter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemGroup, enableaddfish_),
  };
  ProductItemGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProductItemGroup_descriptor_,
      ProductItemGroup::default_instance_,
      ProductItemGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProductItemGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemGroup, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProductItemGroup, _is_default_instance_));
  FishProductNode_descriptor_ = file->message_type(16);
  static const int FishProductNode_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishProductNode, productname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishProductNode, repeattime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishProductNode, fishtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishProductNode, startframe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishProductNode, childs_),
  };
  FishProductNode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FishProductNode_descriptor_,
      FishProductNode::default_instance_,
      FishProductNode_offsets_,
      -1,
      -1,
      -1,
      sizeof(FishProductNode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishProductNode, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishProductNode, _is_default_instance_));
  row_descriptor_ = file->message_type(17);
  static const int row_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(row, data_),
  };
  row_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      row_descriptor_,
      row::default_instance_,
      row_offsets_,
      -1,
      -1,
      -1,
      sizeof(row),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(row, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(row, _is_default_instance_));
  MapData_descriptor_ = file->message_type(18);
  static const int MapData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapData, data_),
  };
  MapData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MapData_descriptor_,
      MapData::default_instance_,
      MapData_offsets_,
      -1,
      -1,
      -1,
      sizeof(MapData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapData, _is_default_instance_));
  Nears_descriptor_ = file->message_type(19);
  static const int Nears_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nears, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nears, distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nears, pointindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nears, lineindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nears, otherlineindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nears, enable_),
  };
  Nears_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Nears_descriptor_,
      Nears::default_instance_,
      Nears_offsets_,
      -1,
      -1,
      -1,
      sizeof(Nears),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nears, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nears, _is_default_instance_));
  Cell_descriptor_ = file->message_type(20);
  static const int Cell_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, v_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, vindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, midpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, nears_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, linemidsqrdistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, linemidpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, normalize_),
  };
  Cell_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cell_descriptor_,
      Cell::default_instance_,
      Cell_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cell),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cell, _is_default_instance_));
  PosData_descriptor_ = file->message_type(21);
  static const int PosData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosData, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosData, cellindexs_),
  };
  PosData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PosData_descriptor_,
      PosData::default_instance_,
      PosData_offsets_,
      -1,
      -1,
      -1,
      sizeof(PosData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PosData, _is_default_instance_));
  NavData_descriptor_ = file->message_type(22);
  static const int NavData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NavData, celllist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NavData, poslist_),
  };
  NavData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NavData_descriptor_,
      NavData::default_instance_,
      NavData_offsets_,
      -1,
      -1,
      -1,
      sizeof(NavData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NavData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NavData, _is_default_instance_));
  SynPos_descriptor_ = file->message_type(23);
  static const int SynPos_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynPos, moverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynPos, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynPos, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynPos, state_),
  };
  SynPos_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SynPos_descriptor_,
      SynPos::default_instance_,
      SynPos_offsets_,
      -1,
      -1,
      -1,
      sizeof(SynPos),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynPos, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SynPos, _is_default_instance_));
  S_StartGame_descriptor_ = file->message_type(24);
  static const int S_StartGame_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_StartGame, resultcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_StartGame, worldsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_StartGame, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_StartGame, executedelayframe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_StartGame, possendframe_),
  };
  S_StartGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_StartGame_descriptor_,
      S_StartGame::default_instance_,
      S_StartGame_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_StartGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_StartGame, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_StartGame, _is_default_instance_));
  S_FrameSync_descriptor_ = file->message_type(25);
  static const int S_FrameSync_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_FrameSync, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_FrameSync, monsters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_FrameSync, players_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_FrameSync, bullets_),
  };
  S_FrameSync_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_FrameSync_descriptor_,
      S_FrameSync::default_instance_,
      S_FrameSync_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_FrameSync),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_FrameSync, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_FrameSync, _is_default_instance_));
  S_SpawnItem_descriptor_ = file->message_type(26);
  static const int S_SpawnItem_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, dmg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, maxexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, mullist_),
  };
  S_SpawnItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_SpawnItem_descriptor_,
      S_SpawnItem::default_instance_,
      S_SpawnItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_SpawnItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_SpawnItem, _is_default_instance_));
  R_ChangeMultiple_descriptor_ = file->message_type(27);
  static const int R_ChangeMultiple_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_ChangeMultiple, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_ChangeMultiple, frame_),
  };
  R_ChangeMultiple_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      R_ChangeMultiple_descriptor_,
      R_ChangeMultiple::default_instance_,
      R_ChangeMultiple_offsets_,
      -1,
      -1,
      -1,
      sizeof(R_ChangeMultiple),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_ChangeMultiple, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_ChangeMultiple, _is_default_instance_));
  S_ChangeMultiple_descriptor_ = file->message_type(28);
  static const int S_ChangeMultiple_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ChangeMultiple, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ChangeMultiple, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ChangeMultiple, frame_),
  };
  S_ChangeMultiple_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_ChangeMultiple_descriptor_,
      S_ChangeMultiple::default_instance_,
      S_ChangeMultiple_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_ChangeMultiple),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ChangeMultiple, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ChangeMultiple, _is_default_instance_));
  S_KillItem_descriptor_ = file->message_type(29);
  static const int S_KillItem_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_KillItem, deadid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_KillItem, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_KillItem, killerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_KillItem, killerexperience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_KillItem, rebirth_),
  };
  S_KillItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_KillItem_descriptor_,
      S_KillItem::default_instance_,
      S_KillItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_KillItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_KillItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_KillItem, _is_default_instance_));
  R_Move_descriptor_ = file->message_type(30);
  static const int R_Move_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Move, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Move, cellindex_),
  };
  R_Move_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      R_Move_descriptor_,
      R_Move::default_instance_,
      R_Move_offsets_,
      -1,
      -1,
      -1,
      sizeof(R_Move),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Move, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Move, _is_default_instance_));
  S_Move_descriptor_ = file->message_type(31);
  static const int S_Move_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Move, data_),
  };
  S_Move_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_Move_descriptor_,
      S_Move::default_instance_,
      S_Move_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_Move),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Move, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Move, _is_default_instance_));
  R_Attack_descriptor_ = file->message_type(32);
  static const int R_Attack_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, attackerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, victimid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, skilllevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, cellindex_),
  };
  R_Attack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      R_Attack_descriptor_,
      R_Attack::default_instance_,
      R_Attack_offsets_,
      -1,
      -1,
      -1,
      sizeof(R_Attack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_Attack, _is_default_instance_));
  S_Attack_descriptor_ = file->message_type(33);
  static const int S_Attack_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, attackerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, victimid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, skilllevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, multiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, cellindex_),
  };
  S_Attack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_Attack_descriptor_,
      S_Attack::default_instance_,
      S_Attack_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_Attack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Attack, _is_default_instance_));
  S_ItemScore_descriptor_ = file->message_type(34);
  static const int S_ItemScore_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemScore, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemScore, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemScore, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemScore, experience_),
  };
  S_ItemScore_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_ItemScore_descriptor_,
      S_ItemScore::default_instance_,
      S_ItemScore_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_ItemScore),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemScore, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_ItemScore, _is_default_instance_));
  S_TestDelay_descriptor_ = file->message_type(35);
  static const int S_TestDelay_offsets_[1] = {
  };
  S_TestDelay_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_TestDelay_descriptor_,
      S_TestDelay::default_instance_,
      S_TestDelay_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_TestDelay),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_TestDelay, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_TestDelay, _is_default_instance_));
  R_TestDelay_descriptor_ = file->message_type(36);
  static const int R_TestDelay_offsets_[1] = {
  };
  R_TestDelay_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      R_TestDelay_descriptor_,
      R_TestDelay::default_instance_,
      R_TestDelay_offsets_,
      -1,
      -1,
      -1,
      sizeof(R_TestDelay),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_TestDelay, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(R_TestDelay, _is_default_instance_));
  S_MovePosList_descriptor_ = file->message_type(37);
  static const int S_MovePosList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_MovePosList, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_MovePosList, moverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_MovePosList, list_),
  };
  S_MovePosList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_MovePosList_descriptor_,
      S_MovePosList::default_instance_,
      S_MovePosList_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_MovePosList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_MovePosList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_MovePosList, _is_default_instance_));
  Victim_descriptor_ = file->message_type(38);
  static const int Victim_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Victim, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Victim, hp_),
  };
  Victim_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Victim_descriptor_,
      Victim::default_instance_,
      Victim_offsets_,
      -1,
      -1,
      -1,
      sizeof(Victim),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Victim, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Victim, _is_default_instance_));
  S_Hit_descriptor_ = file->message_type(39);
  static const int S_Hit_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Hit, casterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Hit, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Hit, endframe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Hit, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Hit, attackerscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Hit, victimlist_),
  };
  S_Hit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_Hit_descriptor_,
      S_Hit::default_instance_,
      S_Hit_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_Hit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Hit, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_Hit, _is_default_instance_));
  S_LV_descriptor_ = file->message_type(40);
  static const int S_LV_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_LV, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_LV, itemexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_LV, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_LV, maxexp_),
  };
  S_LV_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      S_LV_descriptor_,
      S_LV::default_instance_,
      S_LV_offsets_,
      -1,
      -1,
      -1,
      sizeof(S_LV),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_LV, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S_LV, _is_default_instance_));
  Proto_SkillData_descriptor_ = file->message_type(41);
  static const int Proto_SkillData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillData, lev_),
  };
  Proto_SkillData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_SkillData_descriptor_,
      Proto_SkillData::default_instance_,
      Proto_SkillData_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_SkillData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillData, _is_default_instance_));
  Proto_Monster_descriptor_ = file->message_type(42);
  static const int Proto_Monster_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, job_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, scal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, objtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, modlename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, maxhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, magicatk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, physicsdef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, magicdef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, hitrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, dodge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, burstsrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, movespeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, aiid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, actiondistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, minactiontime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, skilllist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, birtheffectname_),
  };
  Proto_Monster_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_Monster_descriptor_,
      Proto_Monster::default_instance_,
      Proto_Monster_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_Monster),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Monster, _is_default_instance_));
  Proto_MonsterList_descriptor_ = file->message_type(43);
  static const int Proto_MonsterList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_MonsterList, dic_),
  };
  Proto_MonsterList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_MonsterList_descriptor_,
      Proto_MonsterList::default_instance_,
      Proto_MonsterList_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_MonsterList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_MonsterList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_MonsterList, _is_default_instance_));
  Proto_BuffData_descriptor_ = file->message_type(44);
  static const int Proto_BuffData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BuffData, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BuffData, lev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BuffData, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BuffData, targettype_),
  };
  Proto_BuffData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_BuffData_descriptor_,
      Proto_BuffData::default_instance_,
      Proto_BuffData_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_BuffData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BuffData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BuffData, _is_default_instance_));
  Proto_Skill_descriptor_ = file->message_type(45);
  static const int Proto_Skill_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, maxlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, rangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, effecttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, damagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, break__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, isneedtarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, consumedander_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, effectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, intonatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, levrange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, castdistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, levcastdistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, coolingtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, levcoolingtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, standingtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, levstandingtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, levdamage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, levpercent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, bufflist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, sound_),
  };
  Proto_Skill_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_Skill_descriptor_,
      Proto_Skill::default_instance_,
      Proto_Skill_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_Skill),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Skill, _is_default_instance_));
  Proto_SkillList_descriptor_ = file->message_type(46);
  static const int Proto_SkillList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillList, dic_),
  };
  Proto_SkillList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_SkillList_descriptor_,
      Proto_SkillList::default_instance_,
      Proto_SkillList_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_SkillList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillList, _is_default_instance_));
  Proto_FlyInfo_descriptor_ = file->message_type(47);
  static const int Proto_FlyInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_FlyInfo, effectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_FlyInfo, num_),
  };
  Proto_FlyInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_FlyInfo_descriptor_,
      Proto_FlyInfo::default_instance_,
      Proto_FlyInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_FlyInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_FlyInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_FlyInfo, _is_default_instance_));
  Proto_EffectData_descriptor_ = file->message_type(48);
  static const int Proto_EffectData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectData, effectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectData, addon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectData, offset_),
  };
  Proto_EffectData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_EffectData_descriptor_,
      Proto_EffectData::default_instance_,
      Proto_EffectData_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_EffectData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectData, _is_default_instance_));
  Proto_EffectInfo_descriptor_ = file->message_type(49);
  static const int Proto_EffectInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectInfo, animation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectInfo, duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectInfo, effectlist_),
  };
  Proto_EffectInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_EffectInfo_descriptor_,
      Proto_EffectInfo::default_instance_,
      Proto_EffectInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_EffectInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_EffectInfo, _is_default_instance_));
  Proto_SkillEffect_descriptor_ = file->message_type(50);
  static const int Proto_SkillEffect_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, beateneffectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, flyaddon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, flyspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, firsteffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, damageeffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, durationeffect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, flylist_),
  };
  Proto_SkillEffect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_SkillEffect_descriptor_,
      Proto_SkillEffect::default_instance_,
      Proto_SkillEffect_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_SkillEffect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffect, _is_default_instance_));
  Proto_SkillEffectList_descriptor_ = file->message_type(51);
  static const int Proto_SkillEffectList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffectList, dic_),
  };
  Proto_SkillEffectList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_SkillEffectList_descriptor_,
      Proto_SkillEffectList::default_instance_,
      Proto_SkillEffectList_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_SkillEffectList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffectList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_SkillEffectList, _is_default_instance_));
  Proto_BufEffect_descriptor_ = file->message_type(52);
  static const int Proto_BufEffect_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufEffect, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufEffect, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufEffect, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufEffect, param2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufEffect, levparam2_),
  };
  Proto_BufEffect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_BufEffect_descriptor_,
      Proto_BufEffect::default_instance_,
      Proto_BufEffect_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_BufEffect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufEffect, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufEffect, _is_default_instance_));
  Proto_Buf_descriptor_ = file->message_type(53);
  static const int Proto_Buf_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, maxlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, benefittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, replacetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, effectname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, ispercent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, damagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, influencetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, cycletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, effectlist_),
  };
  Proto_Buf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_Buf_descriptor_,
      Proto_Buf::default_instance_,
      Proto_Buf_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_Buf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_Buf, _is_default_instance_));
  Proto_BufList_descriptor_ = file->message_type(54);
  static const int Proto_BufList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufList, dic_),
  };
  Proto_BufList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_BufList_descriptor_,
      Proto_BufList::default_instance_,
      Proto_BufList_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_BufList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_BufList, _is_default_instance_));
  Proto_LearnSkill_descriptor_ = file->message_type(55);
  static const int Proto_LearnSkill_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LearnSkill, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LearnSkill, fixedskill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LearnSkill, learnskill_),
  };
  Proto_LearnSkill_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_LearnSkill_descriptor_,
      Proto_LearnSkill::default_instance_,
      Proto_LearnSkill_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_LearnSkill),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LearnSkill, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LearnSkill, _is_default_instance_));
  Proto_LearnSkillList_descriptor_ = file->message_type(56);
  static const int Proto_LearnSkillList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LearnSkillList, dic_),
  };
  Proto_LearnSkillList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Proto_LearnSkillList_descriptor_,
      Proto_LearnSkillList::default_instance_,
      Proto_LearnSkillList_offsets_,
      -1,
      -1,
      -1,
      sizeof(Proto_LearnSkillList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LearnSkillList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto_LearnSkillList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gt_5fbuyu_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Vec2_descriptor_, &Vec2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Vec3_descriptor_, &Vec3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestPoint_descriptor_, &TestPoint::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ColliderCircle_descriptor_, &ColliderCircle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Quate_descriptor_, &Quate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Size_descriptor_, &Size::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PointInfo_descriptor_, &PointInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SinglePath_descriptor_, &SinglePath::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PathGroup_descriptor_, &PathGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MapGroup_descriptor_, &MapGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NavMeshGroup_descriptor_, &NavMeshGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActionData_descriptor_, &ActionData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageTimer_descriptor_, &MessageTimer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProductItemContent_descriptor_, &ProductItemContent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProductItem_descriptor_, &ProductItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProductItemGroup_descriptor_, &ProductItemGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FishProductNode_descriptor_, &FishProductNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      row_descriptor_, &row::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MapData_descriptor_, &MapData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Nears_descriptor_, &Nears::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cell_descriptor_, &Cell::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PosData_descriptor_, &PosData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NavData_descriptor_, &NavData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SynPos_descriptor_, &SynPos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_StartGame_descriptor_, &S_StartGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_FrameSync_descriptor_, &S_FrameSync::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_SpawnItem_descriptor_, &S_SpawnItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      R_ChangeMultiple_descriptor_, &R_ChangeMultiple::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_ChangeMultiple_descriptor_, &S_ChangeMultiple::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_KillItem_descriptor_, &S_KillItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      R_Move_descriptor_, &R_Move::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_Move_descriptor_, &S_Move::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      R_Attack_descriptor_, &R_Attack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_Attack_descriptor_, &S_Attack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_ItemScore_descriptor_, &S_ItemScore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_TestDelay_descriptor_, &S_TestDelay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      R_TestDelay_descriptor_, &R_TestDelay::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_MovePosList_descriptor_, &S_MovePosList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Victim_descriptor_, &Victim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_Hit_descriptor_, &S_Hit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      S_LV_descriptor_, &S_LV::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_SkillData_descriptor_, &Proto_SkillData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_Monster_descriptor_, &Proto_Monster::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_MonsterList_descriptor_, &Proto_MonsterList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_BuffData_descriptor_, &Proto_BuffData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_Skill_descriptor_, &Proto_Skill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_SkillList_descriptor_, &Proto_SkillList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_FlyInfo_descriptor_, &Proto_FlyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_EffectData_descriptor_, &Proto_EffectData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_EffectInfo_descriptor_, &Proto_EffectInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_SkillEffect_descriptor_, &Proto_SkillEffect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_SkillEffectList_descriptor_, &Proto_SkillEffectList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_BufEffect_descriptor_, &Proto_BufEffect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_Buf_descriptor_, &Proto_Buf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_BufList_descriptor_, &Proto_BufList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_LearnSkill_descriptor_, &Proto_LearnSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Proto_LearnSkillList_descriptor_, &Proto_LearnSkillList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gt_5fbuyu_2eproto() {
  delete Vec2::default_instance_;
  delete Vec2_reflection_;
  delete Vec3::default_instance_;
  delete Vec3_reflection_;
  delete TestPoint::default_instance_;
  delete TestPoint_reflection_;
  delete ColliderCircle::default_instance_;
  delete ColliderCircle_reflection_;
  delete Quate::default_instance_;
  delete Quate_reflection_;
  delete Size::default_instance_;
  delete Size_reflection_;
  delete PointInfo::default_instance_;
  delete PointInfo_reflection_;
  delete SinglePath::default_instance_;
  delete SinglePath_reflection_;
  delete PathGroup::default_instance_;
  delete PathGroup_reflection_;
  delete MapGroup::default_instance_;
  delete MapGroup_reflection_;
  delete NavMeshGroup::default_instance_;
  delete NavMeshGroup_reflection_;
  delete ActionData::default_instance_;
  delete ActionData_reflection_;
  delete MessageTimer::default_instance_;
  delete MessageTimer_reflection_;
  delete ProductItemContent::default_instance_;
  delete ProductItemContent_reflection_;
  delete ProductItem::default_instance_;
  delete ProductItem_reflection_;
  delete ProductItemGroup::default_instance_;
  delete ProductItemGroup_reflection_;
  delete FishProductNode::default_instance_;
  delete FishProductNode_reflection_;
  delete row::default_instance_;
  delete row_reflection_;
  delete MapData::default_instance_;
  delete MapData_reflection_;
  delete Nears::default_instance_;
  delete Nears_reflection_;
  delete Cell::default_instance_;
  delete Cell_reflection_;
  delete PosData::default_instance_;
  delete PosData_reflection_;
  delete NavData::default_instance_;
  delete NavData_reflection_;
  delete SynPos::default_instance_;
  delete SynPos_reflection_;
  delete S_StartGame::default_instance_;
  delete S_StartGame_reflection_;
  delete S_FrameSync::default_instance_;
  delete S_FrameSync_reflection_;
  delete S_SpawnItem::default_instance_;
  delete S_SpawnItem_reflection_;
  delete R_ChangeMultiple::default_instance_;
  delete R_ChangeMultiple_reflection_;
  delete S_ChangeMultiple::default_instance_;
  delete S_ChangeMultiple_reflection_;
  delete S_KillItem::default_instance_;
  delete S_KillItem_reflection_;
  delete R_Move::default_instance_;
  delete R_Move_reflection_;
  delete S_Move::default_instance_;
  delete S_Move_reflection_;
  delete R_Attack::default_instance_;
  delete R_Attack_reflection_;
  delete S_Attack::default_instance_;
  delete S_Attack_reflection_;
  delete S_ItemScore::default_instance_;
  delete S_ItemScore_reflection_;
  delete S_TestDelay::default_instance_;
  delete S_TestDelay_reflection_;
  delete R_TestDelay::default_instance_;
  delete R_TestDelay_reflection_;
  delete S_MovePosList::default_instance_;
  delete S_MovePosList_reflection_;
  delete Victim::default_instance_;
  delete Victim_reflection_;
  delete S_Hit::default_instance_;
  delete S_Hit_reflection_;
  delete S_LV::default_instance_;
  delete S_LV_reflection_;
  delete Proto_SkillData::default_instance_;
  delete Proto_SkillData_reflection_;
  delete Proto_Monster::default_instance_;
  delete Proto_Monster_reflection_;
  delete Proto_MonsterList::default_instance_;
  delete Proto_MonsterList_reflection_;
  delete Proto_BuffData::default_instance_;
  delete Proto_BuffData_reflection_;
  delete Proto_Skill::default_instance_;
  delete Proto_Skill_reflection_;
  delete Proto_SkillList::default_instance_;
  delete Proto_SkillList_reflection_;
  delete Proto_FlyInfo::default_instance_;
  delete Proto_FlyInfo_reflection_;
  delete Proto_EffectData::default_instance_;
  delete Proto_EffectData_reflection_;
  delete Proto_EffectInfo::default_instance_;
  delete Proto_EffectInfo_reflection_;
  delete Proto_SkillEffect::default_instance_;
  delete Proto_SkillEffect_reflection_;
  delete Proto_SkillEffectList::default_instance_;
  delete Proto_SkillEffectList_reflection_;
  delete Proto_BufEffect::default_instance_;
  delete Proto_BufEffect_reflection_;
  delete Proto_Buf::default_instance_;
  delete Proto_Buf_reflection_;
  delete Proto_BufList::default_instance_;
  delete Proto_BufList_reflection_;
  delete Proto_LearnSkill::default_instance_;
  delete Proto_LearnSkill_reflection_;
  delete Proto_LearnSkillList::default_instance_;
  delete Proto_LearnSkillList_reflection_;
}

void protobuf_AddDesc_gt_5fbuyu_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_gt_5fbuyu_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::gt_msg::protobuf_AddDesc_gt_5fenum_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rgt_buyu.proto\022\006gt_msg\032\rgt_enum.proto\"\034"
    "\n\004Vec2\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"\'\n\004Vec3\022\t\n\001"
    "x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"4\n\tTestPoi"
    "nt\022\n\n\002Id\030\001 \001(\005\022\033\n\005Point\030\002 \001(\0132\014.gt_msg.V"
    "ec3\">\n\016ColliderCircle\022\034\n\006Offset\030\001 \001(\0132\014."
    "gt_msg.Vec3\022\016\n\006Radius\030\002 \001(\002\"3\n\005Quate\022\t\n\001"
    "x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\t\n\001w\030\004 \001(\002"
    "\"%\n\004Size\022\r\n\005widht\030\001 \001(\002\022\016\n\006height\030\002 \001(\002\""
    ">\n\tPointInfo\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030"
    "\003 \001(\002\022\020\n\010distance\030\004 \001(\002\"\301\001\n\nSinglePath\022\020"
    "\n\010pathName\030\001 \001(\t\022(\n\rpathPointList\030\002 \003(\0132"
    "\021.gt_msg.PointInfo\022#\n\007actions\030\003 \003(\0132\022.gt"
    "_msg.ActionData\022\024\n\014copyPathName\030\004 \001(\t\022\024\n"
    "\014RadianOffset\030\005 \001(\002\022\022\n\nDeepOffset\030\006 \001(\002\022"
    "\022\n\nspeedScale\030\t \001(\002\"1\n\tPathGroup\022$\n\010path"
    "List\030\001 \003(\0132\022.gt_msg.SinglePath\"\034\n\010MapGro"
    "up\022\020\n\010pathList\030\001 \003(\005\"D\n\014NavMeshGroup\022\021\n\t"
    "indexList\030\001 \003(\005\022!\n\013verticeList\030\002 \003(\0132\014.g"
    "t_msg.Vec3\"8\n\nActionData\022\023\n\013actionFrame\030"
    "\001 \001(\005\022\025\n\rplayIdleIndex\030\002 \001(\005\"2\n\014MessageT"
    "imer\022\021\n\tpassFrame\030\001 \001(\005\022\017\n\007message\030\002 \001(\t"
    "\"\332\001\n\022ProductItemContent\022\030\n\020ProductItemIn"
    "dex\030\001 \003(\005\022\r\n\005frame\030\002 \001(\005\022\020\n\010fishList\030\003 \003"
    "(\t\022\022\n\nSpeedScale\030\004 \001(\002\022\023\n\013AngleOffset\030\005 "
    "\001(\005\022\023\n\013FollowCount\030\007 \001(\005\022\026\n\016FollowDistan"
    "ce\030\010 \001(\005\022\017\n\007Forever\030\t \001(\010\022\"\n\005items\030\n \003(\013"
    "2\023.gt_msg.ProductItem\"r\n\013ProductItem\022\023\n\013"
    "ContentName\030\001 \001(\t\022\016\n\006isSync\030\002 \001(\010\022\014\n\004tim"
    "e\030\003 \001(\005\0220\n\014contentItems\030\004 \003(\0132\032.gt_msg.P"
    "roductItemContent\"y\n\020ProductItemGroup\022%\n"
    "\010itemList\030\001 \003(\0132\023.gt_msg.ProductItem\022\021\n\t"
    "mainEnter\030\002 \001(\005\022\024\n\014AddFishEnter\030\003 \001(\005\022\025\n"
    "\rEnableAddFish\030\004 \001(\010\"\211\001\n\017FishProductNode"
    "\022\023\n\013productName\030\001 \001(\t\022\022\n\nrepeatTime\030\002 \001("
    "\005\022\020\n\010fishType\030\003 \001(\t\022\022\n\nstartFrame\030\004 \001(\005\022"
    "\'\n\006childs\030\005 \003(\0132\027.gt_msg.FishProductNode"
    "\"\023\n\003row\022\014\n\004data\030\001 \003(\005\"$\n\007MapData\022\031\n\004data"
    "\030\001 \003(\0132\013.gt_msg.row\"w\n\005Nears\022\r\n\005index\030\001 "
    "\001(\005\022\020\n\010distance\030\002 \001(\002\022\022\n\npointIndex\030\003 \003("
    "\005\022\021\n\tlineIndex\030\004 \001(\005\022\026\n\016OtherLineIndex\030\005"
    " \001(\005\022\016\n\006enable\030\006 \001(\010\"\331\001\n\004Cell\022\r\n\005index\030\001"
    " \001(\005\022\027\n\001v\030\002 \003(\0132\014.gt_msg.Vec3\022\016\n\006vIndex\030"
    "\003 \003(\005\022\034\n\006midPos\030\004 \001(\0132\014.gt_msg.Vec3\022\034\n\005n"
    "ears\030\005 \003(\0132\r.gt_msg.Nears\022\032\n\022lineMidSqrD"
    "istance\030\006 \003(\002\022 \n\nlineMidPos\030\007 \003(\0132\014.gt_m"
    "sg.Vec3\022\037\n\tnormalize\030\010 \003(\0132\014.gt_msg.Vec3"
    "\"8\n\007PosData\022\031\n\003Pos\030\001 \001(\0132\014.gt_msg.Vec3\022\022"
    "\n\nCellIndexs\030\002 \003(\005\"K\n\007NavData\022\036\n\010celllis"
    "t\030\001 \003(\0132\014.gt_msg.Cell\022 \n\007posList\030\003 \003(\0132\017"
    ".gt_msg.PosData\"W\n\006SynPos\022\017\n\007MoverId\030\001 \001"
    "(\005\022\r\n\005Frame\030\002 \001(\005\022\036\n\010Position\030\003 \001(\0132\014.gt"
    "_msg.Vec3\022\r\n\005State\030\004 \001(\005\"\202\001\n\013S_StartGame"
    "\022\022\n\nResultCode\030\001 \001(\005\022\037\n\tWorldSize\030\002 \001(\0132"
    "\014.gt_msg.Size\022\r\n\005Frame\030\003 \001(\005\022\031\n\021ExecuteD"
    "elayFrame\030\004 \001(\005\022\024\n\014PosSendFrame\030\005 \001(\005\"\211\001"
    "\n\013S_FrameSync\022\r\n\005Frame\030\001 \001(\005\022#\n\010Monsters"
    "\030\002 \003(\0132\021.gt_msg.TestPoint\022\"\n\007Players\030\003 \003"
    "(\0132\021.gt_msg.TestPoint\022\"\n\007Bullets\030\004 \003(\0132\021"
    ".gt_msg.TestPoint\"\331\001\n\013S_SpawnItem\022\016\n\006Ite"
    "mId\030\001 \001(\005\022\r\n\005Frame\030\002 \001(\005\022\014\n\004Type\030\003 \001(\005\022\031"
    "\n\003Pos\030\004 \001(\0132\014.gt_msg.Vec3\022\016\n\006TeamId\030\005 \001("
    "\005\022\r\n\005Score\030\006 \001(\003\022\n\n\002HP\030\007 \001(\005\022\013\n\003EXP\030\010 \001("
    "\005\022\n\n\002LV\030\t \001(\005\022\013\n\003DMG\030\n \001(\005\022\016\n\006MaxExp\030\013 \001"
    "(\005\022\020\n\010Multiple\030\014 \001(\005\022\017\n\007MulList\030\r \003(\005\"0\n"
    "\020R_ChangeMultiple\022\r\n\005Value\030\001 \001(\005\022\r\n\005Fram"
    "e\030\002 \001(\005\"@\n\020S_ChangeMultiple\022\016\n\006ItemId\030\001 "
    "\001(\005\022\r\n\005Value\030\002 \001(\005\022\r\n\005Frame\030\003 \001(\005\"h\n\nS_K"
    "illItem\022\016\n\006DeadId\030\001 \001(\005\022\r\n\005Frame\030\002 \001(\005\022\020"
    "\n\010KillerId\030\003 \001(\005\022\030\n\020KillerExperience\030\004 \001"
    "(\005\022\017\n\007ReBirth\030\005 \001(\005\"9\n\006R_Move\022\034\n\004Data\030\001 "
    "\001(\0132\016.gt_msg.SynPos\022\021\n\tCellIndex\030\002 \001(\005\"&"
    "\n\006S_Move\022\034\n\004Data\030\001 \001(\0132\016.gt_msg.SynPos\"\312"
    "\001\n\010R_Attack\022\022\n\nAttackerId\030\001 \001(\005\022\020\n\010Victi"
    "mId\030\002 \001(\005\022\r\n\005Frame\030\003 \001(\005\022\017\n\007SkillId\030\004 \001("
    "\005\022\022\n\nSkillLevel\030\005 \001(\005\022\037\n\tDirection\030\006 \001(\013"
    "2\014.gt_msg.Vec3\022\020\n\010Multiple\030\007 \001(\005\022\036\n\010Posi"
    "tion\030\010 \001(\0132\014.gt_msg.Vec3\022\021\n\tCellIndex\030\t "
    "\001(\005\"\312\001\n\010S_Attack\022\022\n\nAttackerId\030\001 \001(\005\022\020\n\010"
    "VictimId\030\002 \001(\005\022\r\n\005Frame\030\003 \001(\005\022\017\n\007SkillId"
    "\030\004 \001(\005\022\022\n\nSkillLevel\030\005 \001(\005\022\037\n\tDirection\030"
    "\006 \001(\0132\014.gt_msg.Vec3\022\020\n\010Multiple\030\007 \001(\005\022\036\n"
    "\010Position\030\010 \001(\0132\014.gt_msg.Vec3\022\021\n\tCellInd"
    "ex\030\t \001(\005\"O\n\013S_ItemScore\022\016\n\006ItemId\030\001 \001(\005\022"
    "\r\n\005Frame\030\002 \001(\005\022\r\n\005Score\030\003 \001(\003\022\022\n\nExperie"
    "nce\030\004 \001(\005\"\r\n\013S_TestDelay\"\r\n\013R_TestDelay\""
    "K\n\rS_MovePosList\022\r\n\005Frame\030\001 \001(\005\022\017\n\007Mover"
    "Id\030\002 \001(\005\022\032\n\004list\030\003 \003(\0132\014.gt_msg.Vec3\" \n\006"
    "Victim\022\n\n\002Id\030\001 \001(\005\022\n\n\002HP\030\002 \001(\005\"\206\001\n\005S_Hit"
    "\022\020\n\010CasterId\030\001 \001(\005\022\r\n\005Frame\030\002 \001(\005\022\020\n\010End"
    "Frame\030\003 \001(\005\022\017\n\007SkillId\030\004 \001(\005\022\025\n\rAttacker"
    "Score\030\005 \001(\003\022\"\n\nVictimList\030\006 \003(\0132\016.gt_msg"
    ".Victim\"F\n\004S_LV\022\016\n\006ItemId\030\001 \001(\005\022\017\n\007ItemE"
    "xp\030\002 \001(\005\022\r\n\005Level\030\003 \001(\005\022\016\n\006MaxExp\030\004 \001(\005\""
    "*\n\017Proto_SkillData\022\n\n\002id\030\001 \001(\005\022\013\n\003lev\030\002 "
    "\001(\005\"\321\003\n\rProto_Monster\022\014\n\004type\030\001 \001(\005\022\014\n\004n"
    "ame\030\002 \001(\t\022\034\n\003job\030\003 \001(\0162\017.gt_msg.JobType\022"
    "\014\n\004scal\030\004 \001(\005\022\013\n\003exp\030\005 \001(\005\022)\n\007objType\030\006 "
    "\001(\0162\030.gt_msg.Object_Type_Enum\022\021\n\tmodleNa"
    "me\030\007 \001(\t\022\r\n\005level\030\010 \001(\005\022\r\n\005maxHp\030\t \001(\005\022\016"
    "\n\006attack\030\n \001(\005\022\020\n\010magicAtk\030\013 \001(\005\022\022\n\nphys"
    "icsDef\030\014 \001(\005\022\020\n\010magicDef\030\r \001(\005\022\017\n\007hitRat"
    "e\030\016 \001(\002\022\r\n\005dodge\030\017 \001(\002\022\022\n\nburstsRate\030\020 \001"
    "(\002\022\021\n\tmoveSpeed\030\021 \001(\005\022\014\n\004aiID\030\022 \001(\005\022\026\n\016a"
    "ctionDistance\030\023 \001(\002\022\025\n\rminActionTime\030\024 \001"
    "(\002\022*\n\tskillList\030\025 \003(\0132\027.gt_msg.Proto_Ski"
    "llData\022\027\n\017birthEffectName\030\026 \001(\t\"7\n\021Proto"
    "_MonsterList\022\"\n\003dic\030\001 \003(\0132\025.gt_msg.Proto"
    "_Monster\"K\n\016Proto_BuffData\022\n\n\002id\030\001 \001(\005\022\013"
    "\n\003lev\030\002 \001(\005\022\014\n\004time\030\003 \001(\002\022\022\n\ntargetType\030"
    "\004 \001(\005\"\374\004\n\013Proto_Skill\022\n\n\002id\030\001 \001(\005\022\014\n\004nam"
    "e\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\020\n\010maxLevel"
    "\030\004 \001(\005\022\037\n\004type\030\005 \001(\0162\021.gt_msg.SkillType\022"
    "$\n\trangeType\030\006 \001(\0162\021.gt_msg.RangeType\022,\n"
    "\neffectType\030\007 \001(\0162\030.gt_msg.SkillEffect_T"
    "ype\022&\n\ndamageType\030\010 \001(\0162\022.gt_msg.DamageT"
    "ype\022\r\n\005break\030\t \001(\010\022\024\n\014isNeedTarget\030\n \001(\010"
    "\022\025\n\rconsumeDander\030\013 \001(\005\022\020\n\010effectID\030\014 \001("
    "\005\022\024\n\014intonateTime\030\r \001(\002\022\r\n\005range\030\016 \001(\002\022\020"
    "\n\010levRange\030\017 \001(\002\022\024\n\014castDistance\030\020 \001(\002\022\027"
    "\n\017levCastDistance\030\021 \001(\002\022\023\n\013coolingTime\030\022"
    " \001(\002\022\026\n\016levCoolingTime\030\023 \001(\002\022\024\n\014standing"
    "Time\030\024 \001(\002\022\027\n\017levStandingTime\030\025 \001(\002\022\016\n\006d"
    "amage\030\026 \001(\002\022\021\n\tlevDamage\030\027 \001(\002\022\017\n\007percen"
    "t\030\030 \001(\002\022\022\n\nlevPercent\030\031 \001(\002\022(\n\010buffList\030"
    "\032 \001(\0132\026.gt_msg.Proto_BuffData\022\r\n\005sound\030\033"
    " \001(\t\"3\n\017Proto_SkillList\022 \n\003dic\030\001 \003(\0132\023.g"
    "t_msg.Proto_Skill\"0\n\rProto_FlyInfo\022\022\n\nef"
    "fectName\030\001 \001(\t\022\013\n\003num\030\002 \001(\005\"k\n\020Proto_Eff"
    "ectData\022\022\n\neffectName\030\001 \001(\t\022%\n\005addon\030\002 \001"
    "(\0162\026.gt_msg.AddonIndexEnum\022\034\n\006offset\030\003 \001"
    "(\0132\014.gt_msg.Vec3\"|\n\020Proto_EffectInfo\022(\n\t"
    "animation\030\001 \001(\0162\025.gt_msg.AnimationType\022\020"
    "\n\010duration\030\002 \001(\002\022,\n\neffectList\030\003 \003(\0132\030.g"
    "t_msg.Proto_EffectData\"\303\002\n\021Proto_SkillEf"
    "fect\022\n\n\002id\030\001 \001(\005\022\023\n\013description\030\002 \001(\t\022\030\n"
    "\020beatenEffectName\030\003 \001(\t\022(\n\010flyAddon\030\004 \001("
    "\0162\026.gt_msg.AddonIndexEnum\022\020\n\010flySpeed\030\005 "
    "\001(\002\022-\n\013firstEffect\030\006 \001(\0132\030.gt_msg.Proto_"
    "EffectInfo\022.\n\014damageEffect\030\007 \001(\0132\030.gt_ms"
    "g.Proto_EffectInfo\0220\n\016durationEffect\030\010 \001"
    "(\0132\030.gt_msg.Proto_EffectInfo\022&\n\007flyList\030"
    "\t \001(\0132\025.gt_msg.Proto_FlyInfo\"\?\n\025Proto_Sk"
    "illEffectList\022&\n\003dic\030\001 \003(\0132\031.gt_msg.Prot"
    "o_SkillEffect\"^\n\017Proto_BufEffect\022\n\n\002iD\030\001"
    " \001(\005\022\014\n\004type\030\002 \001(\005\022\016\n\006param1\030\003 \001(\005\022\016\n\006pa"
    "ram2\030\004 \001(\002\022\021\n\tlevParam2\030\005 \001(\002\"\213\003\n\tProto_"
    "Buf\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\023\n\013descrip"
    "tion\030\003 \001(\t\022\020\n\010maxLevel\030\004 \001(\005\022(\n\013benefitT"
    "ype\030\005 \001(\0162\023.gt_msg.BenefitType\022(\n\013replac"
    "eType\030\006 \001(\0162\023.gt_msg.ReplaceType\022\022\n\neffe"
    "ctName\030\007 \001(\t\022\016\n\006damage\030\010 \001(\005\022\021\n\tisPercen"
    "t\030\t \001(\010\022&\n\ndamageType\030\n \001(\0162\022.gt_msg.Dam"
    "ageType\022,\n\rinfluenceType\030\013 \001(\0162\025.gt_msg."
    "InfluenceType\022\021\n\tcycleTime\030\014 \001(\002\022\034\n\006offs"
    "et\030\r \001(\0132\014.gt_msg.Vec3\022+\n\neffectList\030\016 \003"
    "(\0132\027.gt_msg.Proto_BufEffect\"/\n\rProto_Buf"
    "List\022\036\n\003dic\030\001 \003(\0132\021.gt_msg.Proto_Buf\"z\n\020"
    "Proto_LearnSkill\022\014\n\004type\030\001 \001(\005\022+\n\nfixedS"
    "kill\030\002 \003(\0132\027.gt_msg.Proto_SkillData\022+\n\nl"
    "earnSkill\030\003 \003(\0132\027.gt_msg.Proto_SkillData"
    "\"=\n\024Proto_LearnSkillList\022%\n\003dic\030\001 \003(\0132\030."
    "gt_msg.Proto_LearnSkillb\006proto3", 6471);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gt_buyu.proto", &protobuf_RegisterTypes);
  Vec2::default_instance_ = new Vec2();
  Vec3::default_instance_ = new Vec3();
  TestPoint::default_instance_ = new TestPoint();
  ColliderCircle::default_instance_ = new ColliderCircle();
  Quate::default_instance_ = new Quate();
  Size::default_instance_ = new Size();
  PointInfo::default_instance_ = new PointInfo();
  SinglePath::default_instance_ = new SinglePath();
  PathGroup::default_instance_ = new PathGroup();
  MapGroup::default_instance_ = new MapGroup();
  NavMeshGroup::default_instance_ = new NavMeshGroup();
  ActionData::default_instance_ = new ActionData();
  MessageTimer::default_instance_ = new MessageTimer();
  ProductItemContent::default_instance_ = new ProductItemContent();
  ProductItem::default_instance_ = new ProductItem();
  ProductItemGroup::default_instance_ = new ProductItemGroup();
  FishProductNode::default_instance_ = new FishProductNode();
  row::default_instance_ = new row();
  MapData::default_instance_ = new MapData();
  Nears::default_instance_ = new Nears();
  Cell::default_instance_ = new Cell();
  PosData::default_instance_ = new PosData();
  NavData::default_instance_ = new NavData();
  SynPos::default_instance_ = new SynPos();
  S_StartGame::default_instance_ = new S_StartGame();
  S_FrameSync::default_instance_ = new S_FrameSync();
  S_SpawnItem::default_instance_ = new S_SpawnItem();
  R_ChangeMultiple::default_instance_ = new R_ChangeMultiple();
  S_ChangeMultiple::default_instance_ = new S_ChangeMultiple();
  S_KillItem::default_instance_ = new S_KillItem();
  R_Move::default_instance_ = new R_Move();
  S_Move::default_instance_ = new S_Move();
  R_Attack::default_instance_ = new R_Attack();
  S_Attack::default_instance_ = new S_Attack();
  S_ItemScore::default_instance_ = new S_ItemScore();
  S_TestDelay::default_instance_ = new S_TestDelay();
  R_TestDelay::default_instance_ = new R_TestDelay();
  S_MovePosList::default_instance_ = new S_MovePosList();
  Victim::default_instance_ = new Victim();
  S_Hit::default_instance_ = new S_Hit();
  S_LV::default_instance_ = new S_LV();
  Proto_SkillData::default_instance_ = new Proto_SkillData();
  Proto_Monster::default_instance_ = new Proto_Monster();
  Proto_MonsterList::default_instance_ = new Proto_MonsterList();
  Proto_BuffData::default_instance_ = new Proto_BuffData();
  Proto_Skill::default_instance_ = new Proto_Skill();
  Proto_SkillList::default_instance_ = new Proto_SkillList();
  Proto_FlyInfo::default_instance_ = new Proto_FlyInfo();
  Proto_EffectData::default_instance_ = new Proto_EffectData();
  Proto_EffectInfo::default_instance_ = new Proto_EffectInfo();
  Proto_SkillEffect::default_instance_ = new Proto_SkillEffect();
  Proto_SkillEffectList::default_instance_ = new Proto_SkillEffectList();
  Proto_BufEffect::default_instance_ = new Proto_BufEffect();
  Proto_Buf::default_instance_ = new Proto_Buf();
  Proto_BufList::default_instance_ = new Proto_BufList();
  Proto_LearnSkill::default_instance_ = new Proto_LearnSkill();
  Proto_LearnSkillList::default_instance_ = new Proto_LearnSkillList();
  Vec2::default_instance_->InitAsDefaultInstance();
  Vec3::default_instance_->InitAsDefaultInstance();
  TestPoint::default_instance_->InitAsDefaultInstance();
  ColliderCircle::default_instance_->InitAsDefaultInstance();
  Quate::default_instance_->InitAsDefaultInstance();
  Size::default_instance_->InitAsDefaultInstance();
  PointInfo::default_instance_->InitAsDefaultInstance();
  SinglePath::default_instance_->InitAsDefaultInstance();
  PathGroup::default_instance_->InitAsDefaultInstance();
  MapGroup::default_instance_->InitAsDefaultInstance();
  NavMeshGroup::default_instance_->InitAsDefaultInstance();
  ActionData::default_instance_->InitAsDefaultInstance();
  MessageTimer::default_instance_->InitAsDefaultInstance();
  ProductItemContent::default_instance_->InitAsDefaultInstance();
  ProductItem::default_instance_->InitAsDefaultInstance();
  ProductItemGroup::default_instance_->InitAsDefaultInstance();
  FishProductNode::default_instance_->InitAsDefaultInstance();
  row::default_instance_->InitAsDefaultInstance();
  MapData::default_instance_->InitAsDefaultInstance();
  Nears::default_instance_->InitAsDefaultInstance();
  Cell::default_instance_->InitAsDefaultInstance();
  PosData::default_instance_->InitAsDefaultInstance();
  NavData::default_instance_->InitAsDefaultInstance();
  SynPos::default_instance_->InitAsDefaultInstance();
  S_StartGame::default_instance_->InitAsDefaultInstance();
  S_FrameSync::default_instance_->InitAsDefaultInstance();
  S_SpawnItem::default_instance_->InitAsDefaultInstance();
  R_ChangeMultiple::default_instance_->InitAsDefaultInstance();
  S_ChangeMultiple::default_instance_->InitAsDefaultInstance();
  S_KillItem::default_instance_->InitAsDefaultInstance();
  R_Move::default_instance_->InitAsDefaultInstance();
  S_Move::default_instance_->InitAsDefaultInstance();
  R_Attack::default_instance_->InitAsDefaultInstance();
  S_Attack::default_instance_->InitAsDefaultInstance();
  S_ItemScore::default_instance_->InitAsDefaultInstance();
  S_TestDelay::default_instance_->InitAsDefaultInstance();
  R_TestDelay::default_instance_->InitAsDefaultInstance();
  S_MovePosList::default_instance_->InitAsDefaultInstance();
  Victim::default_instance_->InitAsDefaultInstance();
  S_Hit::default_instance_->InitAsDefaultInstance();
  S_LV::default_instance_->InitAsDefaultInstance();
  Proto_SkillData::default_instance_->InitAsDefaultInstance();
  Proto_Monster::default_instance_->InitAsDefaultInstance();
  Proto_MonsterList::default_instance_->InitAsDefaultInstance();
  Proto_BuffData::default_instance_->InitAsDefaultInstance();
  Proto_Skill::default_instance_->InitAsDefaultInstance();
  Proto_SkillList::default_instance_->InitAsDefaultInstance();
  Proto_FlyInfo::default_instance_->InitAsDefaultInstance();
  Proto_EffectData::default_instance_->InitAsDefaultInstance();
  Proto_EffectInfo::default_instance_->InitAsDefaultInstance();
  Proto_SkillEffect::default_instance_->InitAsDefaultInstance();
  Proto_SkillEffectList::default_instance_->InitAsDefaultInstance();
  Proto_BufEffect::default_instance_->InitAsDefaultInstance();
  Proto_Buf::default_instance_->InitAsDefaultInstance();
  Proto_BufList::default_instance_->InitAsDefaultInstance();
  Proto_LearnSkill::default_instance_->InitAsDefaultInstance();
  Proto_LearnSkillList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gt_5fbuyu_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gt_5fbuyu_2eproto {
  StaticDescriptorInitializer_gt_5fbuyu_2eproto() {
    protobuf_AddDesc_gt_5fbuyu_2eproto();
  }
} static_descriptor_initializer_gt_5fbuyu_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vec2::kXFieldNumber;
const int Vec2::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vec2::Vec2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Vec2)
}

void Vec2::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Vec2::Vec2(const Vec2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Vec2)
}

void Vec2::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
}

Vec2::~Vec2() {
  // @@protoc_insertion_point(destructor:gt_msg.Vec2)
  SharedDtor();
}

void Vec2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Vec2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vec2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Vec2_descriptor_;
}

const Vec2& Vec2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Vec2* Vec2::default_instance_ = NULL;

Vec2* Vec2::New(::google::protobuf::Arena* arena) const {
  Vec2* n = new Vec2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vec2::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Vec2)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Vec2, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Vec2*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, y_);

#undef ZR_HELPER_
#undef ZR_

}

bool Vec2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Vec2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Vec2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Vec2)
  return false;
#undef DO_
}

void Vec2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Vec2)
  // optional float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Vec2)
}

::google::protobuf::uint8* Vec2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Vec2)
  // optional float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Vec2)
  return target;
}

int Vec2::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Vec2)
  int total_size = 0;

  // optional float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vec2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Vec2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Vec2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Vec2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Vec2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Vec2)
    MergeFrom(*source);
  }
}

void Vec2::MergeFrom(const Vec2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Vec2)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Vec2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec2::CopyFrom(const Vec2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec2::IsInitialized() const {

  return true;
}

void Vec2::Swap(Vec2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vec2::InternalSwap(Vec2* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vec2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Vec2_descriptor_;
  metadata.reflection = Vec2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vec2

// optional float x = 1;
void Vec2::clear_x() {
  x_ = 0;
}
 float Vec2::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec2.x)
  return x_;
}
 void Vec2::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec2.x)
}

// optional float y = 2;
void Vec2::clear_y() {
  y_ = 0;
}
 float Vec2::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec2.y)
  return y_;
}
 void Vec2::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec2.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vec3::kXFieldNumber;
const int Vec3::kYFieldNumber;
const int Vec3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vec3::Vec3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Vec3)
}

void Vec3::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Vec3::Vec3(const Vec3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Vec3)
}

void Vec3::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
}

Vec3::~Vec3() {
  // @@protoc_insertion_point(destructor:gt_msg.Vec3)
  SharedDtor();
}

void Vec3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Vec3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vec3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Vec3_descriptor_;
}

const Vec3& Vec3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Vec3* Vec3::default_instance_ = NULL;

Vec3* Vec3::New(::google::protobuf::Arena* arena) const {
  Vec3* n = new Vec3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Vec3)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Vec3, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Vec3*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

}

bool Vec3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Vec3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Vec3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Vec3)
  return false;
#undef DO_
}

void Vec3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Vec3)
  // optional float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Vec3)
}

::google::protobuf::uint8* Vec3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Vec3)
  // optional float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Vec3)
  return target;
}

int Vec3::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Vec3)
  int total_size = 0;

  // optional float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vec3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Vec3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Vec3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Vec3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Vec3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Vec3)
    MergeFrom(*source);
  }
}

void Vec3::MergeFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Vec3)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vec3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec3::CopyFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec3::IsInitialized() const {

  return true;
}

void Vec3::Swap(Vec3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vec3::InternalSwap(Vec3* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vec3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Vec3_descriptor_;
  metadata.reflection = Vec3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vec3

// optional float x = 1;
void Vec3::clear_x() {
  x_ = 0;
}
 float Vec3::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.x)
  return x_;
}
 void Vec3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.x)
}

// optional float y = 2;
void Vec3::clear_y() {
  y_ = 0;
}
 float Vec3::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.y)
  return y_;
}
 void Vec3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.y)
}

// optional float z = 3;
void Vec3::clear_z() {
  z_ = 0;
}
 float Vec3::z() const {
  // @@protoc_insertion_point(field_get:gt_msg.Vec3.z)
  return z_;
}
 void Vec3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Vec3.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestPoint::kIdFieldNumber;
const int TestPoint::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestPoint::TestPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.TestPoint)
}

void TestPoint::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  point_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

TestPoint::TestPoint(const TestPoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.TestPoint)
}

void TestPoint::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  point_ = NULL;
}

TestPoint::~TestPoint() {
  // @@protoc_insertion_point(destructor:gt_msg.TestPoint)
  SharedDtor();
}

void TestPoint::SharedDtor() {
  if (this != default_instance_) {
    delete point_;
  }
}

void TestPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestPoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestPoint_descriptor_;
}

const TestPoint& TestPoint::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

TestPoint* TestPoint::default_instance_ = NULL;

TestPoint* TestPoint::New(::google::protobuf::Arena* arena) const {
  TestPoint* n = new TestPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.TestPoint)
  id_ = 0;
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}

bool TestPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.TestPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Point;
        break;
      }

      // optional .gt_msg.Vec3 Point = 2;
      case 2: {
        if (tag == 18) {
         parse_Point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.TestPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.TestPoint)
  return false;
#undef DO_
}

void TestPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.TestPoint)
  // optional int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .gt_msg.Vec3 Point = 2;
  if (this->has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->point_, output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.TestPoint)
}

::google::protobuf::uint8* TestPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.TestPoint)
  // optional int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .gt_msg.Vec3 Point = 2;
  if (this->has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->point_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.TestPoint)
  return target;
}

int TestPoint::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.TestPoint)
  int total_size = 0;

  // optional int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional .gt_msg.Vec3 Point = 2;
  if (this->has_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->point_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.TestPoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TestPoint* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TestPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.TestPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.TestPoint)
    MergeFrom(*source);
  }
}

void TestPoint::MergeFrom(const TestPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.TestPoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.has_point()) {
    mutable_point()->::gt_msg::Vec3::MergeFrom(from.point());
  }
}

void TestPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.TestPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestPoint::CopyFrom(const TestPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.TestPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestPoint::IsInitialized() const {

  return true;
}

void TestPoint::Swap(TestPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestPoint::InternalSwap(TestPoint* other) {
  std::swap(id_, other->id_);
  std::swap(point_, other->point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestPoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestPoint_descriptor_;
  metadata.reflection = TestPoint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestPoint

// optional int32 Id = 1;
void TestPoint::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 TestPoint::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.TestPoint.Id)
  return id_;
}
 void TestPoint::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.TestPoint.Id)
}

// optional .gt_msg.Vec3 Point = 2;
bool TestPoint::has_point() const {
  return !_is_default_instance_ && point_ != NULL;
}
void TestPoint::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
const ::gt_msg::Vec3& TestPoint::point() const {
  // @@protoc_insertion_point(field_get:gt_msg.TestPoint.Point)
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
::gt_msg::Vec3* TestPoint::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.TestPoint.Point)
  return point_;
}
::gt_msg::Vec3* TestPoint::release_point() {
  // @@protoc_insertion_point(field_release:gt_msg.TestPoint.Point)
  
  ::gt_msg::Vec3* temp = point_;
  point_ = NULL;
  return temp;
}
void TestPoint::set_allocated_point(::gt_msg::Vec3* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.TestPoint.Point)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColliderCircle::kOffsetFieldNumber;
const int ColliderCircle::kRadiusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColliderCircle::ColliderCircle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.ColliderCircle)
}

void ColliderCircle::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  offset_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

ColliderCircle::ColliderCircle(const ColliderCircle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.ColliderCircle)
}

void ColliderCircle::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  offset_ = NULL;
  radius_ = 0;
}

ColliderCircle::~ColliderCircle() {
  // @@protoc_insertion_point(destructor:gt_msg.ColliderCircle)
  SharedDtor();
}

void ColliderCircle::SharedDtor() {
  if (this != default_instance_) {
    delete offset_;
  }
}

void ColliderCircle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColliderCircle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColliderCircle_descriptor_;
}

const ColliderCircle& ColliderCircle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

ColliderCircle* ColliderCircle::default_instance_ = NULL;

ColliderCircle* ColliderCircle::New(::google::protobuf::Arena* arena) const {
  ColliderCircle* n = new ColliderCircle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ColliderCircle::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.ColliderCircle)
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
  radius_ = 0;
}

bool ColliderCircle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.ColliderCircle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gt_msg.Vec3 Offset = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_offset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_Radius;
        break;
      }

      // optional float Radius = 2;
      case 2: {
        if (tag == 21) {
         parse_Radius:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radius_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.ColliderCircle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.ColliderCircle)
  return false;
#undef DO_
}

void ColliderCircle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.ColliderCircle)
  // optional .gt_msg.Vec3 Offset = 1;
  if (this->has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->offset_, output);
  }

  // optional float Radius = 2;
  if (this->radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->radius(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.ColliderCircle)
}

::google::protobuf::uint8* ColliderCircle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.ColliderCircle)
  // optional .gt_msg.Vec3 Offset = 1;
  if (this->has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->offset_, false, target);
  }

  // optional float Radius = 2;
  if (this->radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->radius(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.ColliderCircle)
  return target;
}

int ColliderCircle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.ColliderCircle)
  int total_size = 0;

  // optional .gt_msg.Vec3 Offset = 1;
  if (this->has_offset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->offset_);
  }

  // optional float Radius = 2;
  if (this->radius() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColliderCircle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.ColliderCircle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ColliderCircle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ColliderCircle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.ColliderCircle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.ColliderCircle)
    MergeFrom(*source);
  }
}

void ColliderCircle::MergeFrom(const ColliderCircle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.ColliderCircle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_offset()) {
    mutable_offset()->::gt_msg::Vec3::MergeFrom(from.offset());
  }
  if (from.radius() != 0) {
    set_radius(from.radius());
  }
}

void ColliderCircle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.ColliderCircle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColliderCircle::CopyFrom(const ColliderCircle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.ColliderCircle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ColliderCircle::IsInitialized() const {

  return true;
}

void ColliderCircle::Swap(ColliderCircle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColliderCircle::InternalSwap(ColliderCircle* other) {
  std::swap(offset_, other->offset_);
  std::swap(radius_, other->radius_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColliderCircle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColliderCircle_descriptor_;
  metadata.reflection = ColliderCircle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ColliderCircle

// optional .gt_msg.Vec3 Offset = 1;
bool ColliderCircle::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
void ColliderCircle::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
const ::gt_msg::Vec3& ColliderCircle::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.ColliderCircle.Offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
::gt_msg::Vec3* ColliderCircle::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.ColliderCircle.Offset)
  return offset_;
}
::gt_msg::Vec3* ColliderCircle::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.ColliderCircle.Offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
void ColliderCircle::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ColliderCircle.Offset)
}

// optional float Radius = 2;
void ColliderCircle::clear_radius() {
  radius_ = 0;
}
 float ColliderCircle::radius() const {
  // @@protoc_insertion_point(field_get:gt_msg.ColliderCircle.Radius)
  return radius_;
}
 void ColliderCircle::set_radius(float value) {
  
  radius_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ColliderCircle.Radius)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quate::kXFieldNumber;
const int Quate::kYFieldNumber;
const int Quate::kZFieldNumber;
const int Quate::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quate::Quate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Quate)
}

void Quate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Quate::Quate(const Quate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Quate)
}

void Quate::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  w_ = 0;
}

Quate::~Quate() {
  // @@protoc_insertion_point(destructor:gt_msg.Quate)
  SharedDtor();
}

void Quate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Quate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Quate_descriptor_;
}

const Quate& Quate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Quate* Quate::default_instance_ = NULL;

Quate* Quate::New(::google::protobuf::Arena* arena) const {
  Quate* n = new Quate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quate::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Quate)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Quate, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Quate*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, w_);

#undef ZR_HELPER_
#undef ZR_

}

bool Quate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Quate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_w;
        break;
      }

      // optional float w = 4;
      case 4: {
        if (tag == 37) {
         parse_w:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Quate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Quate)
  return false;
#undef DO_
}

void Quate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Quate)
  // optional float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // optional float w = 4;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->w(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Quate)
}

::google::protobuf::uint8* Quate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Quate)
  // optional float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // optional float w = 4;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->w(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Quate)
  return target;
}

int Quate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Quate)
  int total_size = 0;

  // optional float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // optional float w = 4;
  if (this->w() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Quate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Quate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Quate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Quate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Quate)
    MergeFrom(*source);
  }
}

void Quate::MergeFrom(const Quate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Quate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
}

void Quate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Quate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quate::CopyFrom(const Quate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Quate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quate::IsInitialized() const {

  return true;
}

void Quate::Swap(Quate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quate::InternalSwap(Quate* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(w_, other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Quate_descriptor_;
  metadata.reflection = Quate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Quate

// optional float x = 1;
void Quate::clear_x() {
  x_ = 0;
}
 float Quate::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.x)
  return x_;
}
 void Quate::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.x)
}

// optional float y = 2;
void Quate::clear_y() {
  y_ = 0;
}
 float Quate::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.y)
  return y_;
}
 void Quate::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.y)
}

// optional float z = 3;
void Quate::clear_z() {
  z_ = 0;
}
 float Quate::z() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.z)
  return z_;
}
 void Quate::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.z)
}

// optional float w = 4;
void Quate::clear_w() {
  w_ = 0;
}
 float Quate::w() const {
  // @@protoc_insertion_point(field_get:gt_msg.Quate.w)
  return w_;
}
 void Quate::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Quate.w)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Size::kWidhtFieldNumber;
const int Size::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Size::Size()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Size)
}

void Size::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Size::Size(const Size& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Size)
}

void Size::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  widht_ = 0;
  height_ = 0;
}

Size::~Size() {
  // @@protoc_insertion_point(destructor:gt_msg.Size)
  SharedDtor();
}

void Size::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Size::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Size::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Size_descriptor_;
}

const Size& Size::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Size* Size::default_instance_ = NULL;

Size* Size::New(::google::protobuf::Arena* arena) const {
  Size* n = new Size;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Size::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Size)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Size, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Size*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(widht_, height_);

#undef ZR_HELPER_
#undef ZR_

}

bool Size::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Size)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float widht = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &widht_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_height;
        break;
      }

      // optional float height = 2;
      case 2: {
        if (tag == 21) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Size)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Size)
  return false;
#undef DO_
}

void Size::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Size)
  // optional float widht = 1;
  if (this->widht() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->widht(), output);
  }

  // optional float height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->height(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Size)
}

::google::protobuf::uint8* Size::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Size)
  // optional float widht = 1;
  if (this->widht() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->widht(), target);
  }

  // optional float height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->height(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Size)
  return target;
}

int Size::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Size)
  int total_size = 0;

  // optional float widht = 1;
  if (this->widht() != 0) {
    total_size += 1 + 4;
  }

  // optional float height = 2;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Size::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Size)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Size* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Size>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Size)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Size)
    MergeFrom(*source);
  }
}

void Size::MergeFrom(const Size& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Size)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.widht() != 0) {
    set_widht(from.widht());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Size::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Size)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Size::CopyFrom(const Size& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Size)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Size::IsInitialized() const {

  return true;
}

void Size::Swap(Size* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Size::InternalSwap(Size* other) {
  std::swap(widht_, other->widht_);
  std::swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Size::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Size_descriptor_;
  metadata.reflection = Size_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Size

// optional float widht = 1;
void Size::clear_widht() {
  widht_ = 0;
}
 float Size::widht() const {
  // @@protoc_insertion_point(field_get:gt_msg.Size.widht)
  return widht_;
}
 void Size::set_widht(float value) {
  
  widht_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Size.widht)
}

// optional float height = 2;
void Size::clear_height() {
  height_ = 0;
}
 float Size::height() const {
  // @@protoc_insertion_point(field_get:gt_msg.Size.height)
  return height_;
}
 void Size::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Size.height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointInfo::kXFieldNumber;
const int PointInfo::kYFieldNumber;
const int PointInfo::kZFieldNumber;
const int PointInfo::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointInfo::PointInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.PointInfo)
}

void PointInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PointInfo::PointInfo(const PointInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.PointInfo)
}

void PointInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  distance_ = 0;
}

PointInfo::~PointInfo() {
  // @@protoc_insertion_point(destructor:gt_msg.PointInfo)
  SharedDtor();
}

void PointInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PointInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PointInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PointInfo_descriptor_;
}

const PointInfo& PointInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

PointInfo* PointInfo::default_instance_ = NULL;

PointInfo* PointInfo::New(::google::protobuf::Arena* arena) const {
  PointInfo* n = new PointInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PointInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.PointInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PointInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PointInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, distance_);

#undef ZR_HELPER_
#undef ZR_

}

bool PointInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.PointInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_distance;
        break;
      }

      // optional float distance = 4;
      case 4: {
        if (tag == 37) {
         parse_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.PointInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.PointInfo)
  return false;
#undef DO_
}

void PointInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.PointInfo)
  // optional float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // optional float distance = 4;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->distance(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.PointInfo)
}

::google::protobuf::uint8* PointInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.PointInfo)
  // optional float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // optional float distance = 4;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->distance(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.PointInfo)
  return target;
}

int PointInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.PointInfo)
  int total_size = 0;

  // optional float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // optional float distance = 4;
  if (this->distance() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PointInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.PointInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PointInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PointInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.PointInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.PointInfo)
    MergeFrom(*source);
  }
}

void PointInfo::MergeFrom(const PointInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.PointInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
}

void PointInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.PointInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointInfo::CopyFrom(const PointInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.PointInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointInfo::IsInitialized() const {

  return true;
}

void PointInfo::Swap(PointInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointInfo::InternalSwap(PointInfo* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(distance_, other->distance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PointInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PointInfo_descriptor_;
  metadata.reflection = PointInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PointInfo

// optional float x = 1;
void PointInfo::clear_x() {
  x_ = 0;
}
 float PointInfo::x() const {
  // @@protoc_insertion_point(field_get:gt_msg.PointInfo.x)
  return x_;
}
 void PointInfo::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PointInfo.x)
}

// optional float y = 2;
void PointInfo::clear_y() {
  y_ = 0;
}
 float PointInfo::y() const {
  // @@protoc_insertion_point(field_get:gt_msg.PointInfo.y)
  return y_;
}
 void PointInfo::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PointInfo.y)
}

// optional float z = 3;
void PointInfo::clear_z() {
  z_ = 0;
}
 float PointInfo::z() const {
  // @@protoc_insertion_point(field_get:gt_msg.PointInfo.z)
  return z_;
}
 void PointInfo::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PointInfo.z)
}

// optional float distance = 4;
void PointInfo::clear_distance() {
  distance_ = 0;
}
 float PointInfo::distance() const {
  // @@protoc_insertion_point(field_get:gt_msg.PointInfo.distance)
  return distance_;
}
 void PointInfo::set_distance(float value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.PointInfo.distance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SinglePath::kPathNameFieldNumber;
const int SinglePath::kPathPointListFieldNumber;
const int SinglePath::kActionsFieldNumber;
const int SinglePath::kCopyPathNameFieldNumber;
const int SinglePath::kRadianOffsetFieldNumber;
const int SinglePath::kDeepOffsetFieldNumber;
const int SinglePath::kSpeedScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SinglePath::SinglePath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.SinglePath)
}

void SinglePath::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SinglePath::SinglePath(const SinglePath& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.SinglePath)
}

void SinglePath::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pathname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  copypathname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  radianoffset_ = 0;
  deepoffset_ = 0;
  speedscale_ = 0;
}

SinglePath::~SinglePath() {
  // @@protoc_insertion_point(destructor:gt_msg.SinglePath)
  SharedDtor();
}

void SinglePath::SharedDtor() {
  pathname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  copypathname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SinglePath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SinglePath::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SinglePath_descriptor_;
}

const SinglePath& SinglePath::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

SinglePath* SinglePath::default_instance_ = NULL;

SinglePath* SinglePath::New(::google::protobuf::Arena* arena) const {
  SinglePath* n = new SinglePath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SinglePath::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.SinglePath)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SinglePath, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SinglePath*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(radianoffset_, speedscale_);
  pathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  copypathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  pathpointlist_.Clear();
  actions_.Clear();
}

bool SinglePath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.SinglePath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pathName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pathname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pathname().data(), this->pathname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.SinglePath.pathName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pathPointList;
        break;
      }

      // repeated .gt_msg.PointInfo pathPointList = 2;
      case 2: {
        if (tag == 18) {
         parse_pathPointList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_pathPointList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pathpointlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_pathPointList;
        if (input->ExpectTag(26)) goto parse_loop_actions;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .gt_msg.ActionData actions = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_actions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_actions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_copyPathName;
        break;
      }

      // optional string copyPathName = 4;
      case 4: {
        if (tag == 34) {
         parse_copyPathName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_copypathname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->copypathname().data(), this->copypathname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.SinglePath.copyPathName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_RadianOffset;
        break;
      }

      // optional float RadianOffset = 5;
      case 5: {
        if (tag == 45) {
         parse_RadianOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radianoffset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_DeepOffset;
        break;
      }

      // optional float DeepOffset = 6;
      case 6: {
        if (tag == 53) {
         parse_DeepOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &deepoffset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_speedScale;
        break;
      }

      // optional float speedScale = 9;
      case 9: {
        if (tag == 77) {
         parse_speedScale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speedscale_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.SinglePath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.SinglePath)
  return false;
#undef DO_
}

void SinglePath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.SinglePath)
  // optional string pathName = 1;
  if (this->pathname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathname().data(), this->pathname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.SinglePath.pathName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pathname(), output);
  }

  // repeated .gt_msg.PointInfo pathPointList = 2;
  for (unsigned int i = 0, n = this->pathpointlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pathpointlist(i), output);
  }

  // repeated .gt_msg.ActionData actions = 3;
  for (unsigned int i = 0, n = this->actions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->actions(i), output);
  }

  // optional string copyPathName = 4;
  if (this->copypathname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->copypathname().data(), this->copypathname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.SinglePath.copyPathName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->copypathname(), output);
  }

  // optional float RadianOffset = 5;
  if (this->radianoffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->radianoffset(), output);
  }

  // optional float DeepOffset = 6;
  if (this->deepoffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->deepoffset(), output);
  }

  // optional float speedScale = 9;
  if (this->speedscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->speedscale(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.SinglePath)
}

::google::protobuf::uint8* SinglePath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.SinglePath)
  // optional string pathName = 1;
  if (this->pathname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathname().data(), this->pathname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.SinglePath.pathName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pathname(), target);
  }

  // repeated .gt_msg.PointInfo pathPointList = 2;
  for (unsigned int i = 0, n = this->pathpointlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->pathpointlist(i), false, target);
  }

  // repeated .gt_msg.ActionData actions = 3;
  for (unsigned int i = 0, n = this->actions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->actions(i), false, target);
  }

  // optional string copyPathName = 4;
  if (this->copypathname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->copypathname().data(), this->copypathname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.SinglePath.copyPathName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->copypathname(), target);
  }

  // optional float RadianOffset = 5;
  if (this->radianoffset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->radianoffset(), target);
  }

  // optional float DeepOffset = 6;
  if (this->deepoffset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->deepoffset(), target);
  }

  // optional float speedScale = 9;
  if (this->speedscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->speedscale(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.SinglePath)
  return target;
}

int SinglePath::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.SinglePath)
  int total_size = 0;

  // optional string pathName = 1;
  if (this->pathname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pathname());
  }

  // optional string copyPathName = 4;
  if (this->copypathname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->copypathname());
  }

  // optional float RadianOffset = 5;
  if (this->radianoffset() != 0) {
    total_size += 1 + 4;
  }

  // optional float DeepOffset = 6;
  if (this->deepoffset() != 0) {
    total_size += 1 + 4;
  }

  // optional float speedScale = 9;
  if (this->speedscale() != 0) {
    total_size += 1 + 4;
  }

  // repeated .gt_msg.PointInfo pathPointList = 2;
  total_size += 1 * this->pathpointlist_size();
  for (int i = 0; i < this->pathpointlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pathpointlist(i));
  }

  // repeated .gt_msg.ActionData actions = 3;
  total_size += 1 * this->actions_size();
  for (int i = 0; i < this->actions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->actions(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SinglePath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.SinglePath)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SinglePath* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SinglePath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.SinglePath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.SinglePath)
    MergeFrom(*source);
  }
}

void SinglePath::MergeFrom(const SinglePath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.SinglePath)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pathpointlist_.MergeFrom(from.pathpointlist_);
  actions_.MergeFrom(from.actions_);
  if (from.pathname().size() > 0) {

    pathname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathname_);
  }
  if (from.copypathname().size() > 0) {

    copypathname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.copypathname_);
  }
  if (from.radianoffset() != 0) {
    set_radianoffset(from.radianoffset());
  }
  if (from.deepoffset() != 0) {
    set_deepoffset(from.deepoffset());
  }
  if (from.speedscale() != 0) {
    set_speedscale(from.speedscale());
  }
}

void SinglePath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.SinglePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SinglePath::CopyFrom(const SinglePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.SinglePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SinglePath::IsInitialized() const {

  return true;
}

void SinglePath::Swap(SinglePath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SinglePath::InternalSwap(SinglePath* other) {
  pathname_.Swap(&other->pathname_);
  pathpointlist_.UnsafeArenaSwap(&other->pathpointlist_);
  actions_.UnsafeArenaSwap(&other->actions_);
  copypathname_.Swap(&other->copypathname_);
  std::swap(radianoffset_, other->radianoffset_);
  std::swap(deepoffset_, other->deepoffset_);
  std::swap(speedscale_, other->speedscale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SinglePath::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SinglePath_descriptor_;
  metadata.reflection = SinglePath_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SinglePath

// optional string pathName = 1;
void SinglePath::clear_pathname() {
  pathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SinglePath::pathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.pathName)
  return pathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SinglePath::set_pathname(const ::std::string& value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.pathName)
}
 void SinglePath::set_pathname(const char* value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.SinglePath.pathName)
}
 void SinglePath::set_pathname(const char* value, size_t size) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.SinglePath.pathName)
}
 ::std::string* SinglePath::mutable_pathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePath.pathName)
  return pathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SinglePath::release_pathname() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePath.pathName)
  
  return pathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SinglePath::set_allocated_pathname(::std::string* pathname) {
  if (pathname != NULL) {
    
  } else {
    
  }
  pathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePath.pathName)
}

// repeated .gt_msg.PointInfo pathPointList = 2;
int SinglePath::pathpointlist_size() const {
  return pathpointlist_.size();
}
void SinglePath::clear_pathpointlist() {
  pathpointlist_.Clear();
}
const ::gt_msg::PointInfo& SinglePath::pathpointlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.pathPointList)
  return pathpointlist_.Get(index);
}
::gt_msg::PointInfo* SinglePath::mutable_pathpointlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePath.pathPointList)
  return pathpointlist_.Mutable(index);
}
::gt_msg::PointInfo* SinglePath::add_pathpointlist() {
  // @@protoc_insertion_point(field_add:gt_msg.SinglePath.pathPointList)
  return pathpointlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::PointInfo >*
SinglePath::mutable_pathpointlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SinglePath.pathPointList)
  return &pathpointlist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::PointInfo >&
SinglePath::pathpointlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.SinglePath.pathPointList)
  return pathpointlist_;
}

// repeated .gt_msg.ActionData actions = 3;
int SinglePath::actions_size() const {
  return actions_.size();
}
void SinglePath::clear_actions() {
  actions_.Clear();
}
const ::gt_msg::ActionData& SinglePath::actions(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.actions)
  return actions_.Get(index);
}
::gt_msg::ActionData* SinglePath::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePath.actions)
  return actions_.Mutable(index);
}
::gt_msg::ActionData* SinglePath::add_actions() {
  // @@protoc_insertion_point(field_add:gt_msg.SinglePath.actions)
  return actions_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >*
SinglePath::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.SinglePath.actions)
  return &actions_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::ActionData >&
SinglePath::actions() const {
  // @@protoc_insertion_point(field_list:gt_msg.SinglePath.actions)
  return actions_;
}

// optional string copyPathName = 4;
void SinglePath::clear_copypathname() {
  copypathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SinglePath::copypathname() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.copyPathName)
  return copypathname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SinglePath::set_copypathname(const ::std::string& value) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.copyPathName)
}
 void SinglePath::set_copypathname(const char* value) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.SinglePath.copyPathName)
}
 void SinglePath::set_copypathname(const char* value, size_t size) {
  
  copypathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.SinglePath.copyPathName)
}
 ::std::string* SinglePath::mutable_copypathname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.SinglePath.copyPathName)
  return copypathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SinglePath::release_copypathname() {
  // @@protoc_insertion_point(field_release:gt_msg.SinglePath.copyPathName)
  
  return copypathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SinglePath::set_allocated_copypathname(::std::string* copypathname) {
  if (copypathname != NULL) {
    
  } else {
    
  }
  copypathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), copypathname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SinglePath.copyPathName)
}

// optional float RadianOffset = 5;
void SinglePath::clear_radianoffset() {
  radianoffset_ = 0;
}
 float SinglePath::radianoffset() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.RadianOffset)
  return radianoffset_;
}
 void SinglePath::set_radianoffset(float value) {
  
  radianoffset_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.RadianOffset)
}

// optional float DeepOffset = 6;
void SinglePath::clear_deepoffset() {
  deepoffset_ = 0;
}
 float SinglePath::deepoffset() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.DeepOffset)
  return deepoffset_;
}
 void SinglePath::set_deepoffset(float value) {
  
  deepoffset_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.DeepOffset)
}

// optional float speedScale = 9;
void SinglePath::clear_speedscale() {
  speedscale_ = 0;
}
 float SinglePath::speedscale() const {
  // @@protoc_insertion_point(field_get:gt_msg.SinglePath.speedScale)
  return speedscale_;
}
 void SinglePath::set_speedscale(float value) {
  
  speedscale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SinglePath.speedScale)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathGroup::kPathListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathGroup::PathGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.PathGroup)
}

void PathGroup::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PathGroup::PathGroup(const PathGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.PathGroup)
}

void PathGroup::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PathGroup::~PathGroup() {
  // @@protoc_insertion_point(destructor:gt_msg.PathGroup)
  SharedDtor();
}

void PathGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PathGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PathGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PathGroup_descriptor_;
}

const PathGroup& PathGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

PathGroup* PathGroup::default_instance_ = NULL;

PathGroup* PathGroup::New(::google::protobuf::Arena* arena) const {
  PathGroup* n = new PathGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PathGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.PathGroup)
  pathlist_.Clear();
}

bool PathGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.PathGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.SinglePath pathList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_pathList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pathlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_pathList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.PathGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.PathGroup)
  return false;
#undef DO_
}

void PathGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.PathGroup)
  // repeated .gt_msg.SinglePath pathList = 1;
  for (unsigned int i = 0, n = this->pathlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pathlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.PathGroup)
}

::google::protobuf::uint8* PathGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.PathGroup)
  // repeated .gt_msg.SinglePath pathList = 1;
  for (unsigned int i = 0, n = this->pathlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pathlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.PathGroup)
  return target;
}

int PathGroup::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.PathGroup)
  int total_size = 0;

  // repeated .gt_msg.SinglePath pathList = 1;
  total_size += 1 * this->pathlist_size();
  for (int i = 0; i < this->pathlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pathlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PathGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.PathGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PathGroup* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PathGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.PathGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.PathGroup)
    MergeFrom(*source);
  }
}

void PathGroup::MergeFrom(const PathGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.PathGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pathlist_.MergeFrom(from.pathlist_);
}

void PathGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.PathGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathGroup::CopyFrom(const PathGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.PathGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathGroup::IsInitialized() const {

  return true;
}

void PathGroup::Swap(PathGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathGroup::InternalSwap(PathGroup* other) {
  pathlist_.UnsafeArenaSwap(&other->pathlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PathGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PathGroup_descriptor_;
  metadata.reflection = PathGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PathGroup

// repeated .gt_msg.SinglePath pathList = 1;
int PathGroup::pathlist_size() const {
  return pathlist_.size();
}
void PathGroup::clear_pathlist() {
  pathlist_.Clear();
}
const ::gt_msg::SinglePath& PathGroup::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.PathGroup.pathList)
  return pathlist_.Get(index);
}
::gt_msg::SinglePath* PathGroup::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.PathGroup.pathList)
  return pathlist_.Mutable(index);
}
::gt_msg::SinglePath* PathGroup::add_pathlist() {
  // @@protoc_insertion_point(field_add:gt_msg.PathGroup.pathList)
  return pathlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePath >*
PathGroup::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.PathGroup.pathList)
  return &pathlist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::SinglePath >&
PathGroup::pathlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.PathGroup.pathList)
  return pathlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapGroup::kPathListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapGroup::MapGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.MapGroup)
}

void MapGroup::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MapGroup::MapGroup(const MapGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.MapGroup)
}

void MapGroup::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MapGroup::~MapGroup() {
  // @@protoc_insertion_point(destructor:gt_msg.MapGroup)
  SharedDtor();
}

void MapGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MapGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapGroup_descriptor_;
}

const MapGroup& MapGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

MapGroup* MapGroup::default_instance_ = NULL;

MapGroup* MapGroup::New(::google::protobuf::Arena* arena) const {
  MapGroup* n = new MapGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.MapGroup)
  pathlist_.Clear();
}

bool MapGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.MapGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 pathList = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pathlist())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_pathlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.MapGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.MapGroup)
  return false;
#undef DO_
}

void MapGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.MapGroup)
  // repeated int32 pathList = 1;
  if (this->pathlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pathlist_cached_byte_size_);
  }
  for (int i = 0; i < this->pathlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pathlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.MapGroup)
}

::google::protobuf::uint8* MapGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.MapGroup)
  // repeated int32 pathList = 1;
  if (this->pathlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pathlist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pathlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pathlist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.MapGroup)
  return target;
}

int MapGroup::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.MapGroup)
  int total_size = 0;

  // repeated int32 pathList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->pathlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pathlist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pathlist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.MapGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MapGroup* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MapGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.MapGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.MapGroup)
    MergeFrom(*source);
  }
}

void MapGroup::MergeFrom(const MapGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.MapGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pathlist_.MergeFrom(from.pathlist_);
}

void MapGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.MapGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapGroup::CopyFrom(const MapGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.MapGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapGroup::IsInitialized() const {

  return true;
}

void MapGroup::Swap(MapGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapGroup::InternalSwap(MapGroup* other) {
  pathlist_.UnsafeArenaSwap(&other->pathlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapGroup_descriptor_;
  metadata.reflection = MapGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapGroup

// repeated int32 pathList = 1;
int MapGroup::pathlist_size() const {
  return pathlist_.size();
}
void MapGroup::clear_pathlist() {
  pathlist_.Clear();
}
 ::google::protobuf::int32 MapGroup::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.MapGroup.pathList)
  return pathlist_.Get(index);
}
 void MapGroup::set_pathlist(int index, ::google::protobuf::int32 value) {
  pathlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.MapGroup.pathList)
}
 void MapGroup::add_pathlist(::google::protobuf::int32 value) {
  pathlist_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.MapGroup.pathList)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MapGroup::pathlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.MapGroup.pathList)
  return pathlist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MapGroup::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.MapGroup.pathList)
  return &pathlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NavMeshGroup::kIndexListFieldNumber;
const int NavMeshGroup::kVerticeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NavMeshGroup::NavMeshGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.NavMeshGroup)
}

void NavMeshGroup::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NavMeshGroup::NavMeshGroup(const NavMeshGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.NavMeshGroup)
}

void NavMeshGroup::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

NavMeshGroup::~NavMeshGroup() {
  // @@protoc_insertion_point(destructor:gt_msg.NavMeshGroup)
  SharedDtor();
}

void NavMeshGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NavMeshGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NavMeshGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NavMeshGroup_descriptor_;
}

const NavMeshGroup& NavMeshGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

NavMeshGroup* NavMeshGroup::default_instance_ = NULL;

NavMeshGroup* NavMeshGroup::New(::google::protobuf::Arena* arena) const {
  NavMeshGroup* n = new NavMeshGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NavMeshGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.NavMeshGroup)
  indexlist_.Clear();
  verticelist_.Clear();
}

bool NavMeshGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.NavMeshGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 indexList = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_indexlist())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_indexlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_verticeList;
        break;
      }

      // repeated .gt_msg.Vec3 verticeList = 2;
      case 2: {
        if (tag == 18) {
         parse_verticeList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_verticeList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_verticelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_verticeList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.NavMeshGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.NavMeshGroup)
  return false;
#undef DO_
}

void NavMeshGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.NavMeshGroup)
  // repeated int32 indexList = 1;
  if (this->indexlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_indexlist_cached_byte_size_);
  }
  for (int i = 0; i < this->indexlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->indexlist(i), output);
  }

  // repeated .gt_msg.Vec3 verticeList = 2;
  for (unsigned int i = 0, n = this->verticelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->verticelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.NavMeshGroup)
}

::google::protobuf::uint8* NavMeshGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.NavMeshGroup)
  // repeated int32 indexList = 1;
  if (this->indexlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _indexlist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->indexlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->indexlist(i), target);
  }

  // repeated .gt_msg.Vec3 verticeList = 2;
  for (unsigned int i = 0, n = this->verticelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->verticelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.NavMeshGroup)
  return target;
}

int NavMeshGroup::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.NavMeshGroup)
  int total_size = 0;

  // repeated int32 indexList = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->indexlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->indexlist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _indexlist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .gt_msg.Vec3 verticeList = 2;
  total_size += 1 * this->verticelist_size();
  for (int i = 0; i < this->verticelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->verticelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NavMeshGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.NavMeshGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NavMeshGroup* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NavMeshGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.NavMeshGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.NavMeshGroup)
    MergeFrom(*source);
  }
}

void NavMeshGroup::MergeFrom(const NavMeshGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.NavMeshGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  indexlist_.MergeFrom(from.indexlist_);
  verticelist_.MergeFrom(from.verticelist_);
}

void NavMeshGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.NavMeshGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NavMeshGroup::CopyFrom(const NavMeshGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.NavMeshGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NavMeshGroup::IsInitialized() const {

  return true;
}

void NavMeshGroup::Swap(NavMeshGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NavMeshGroup::InternalSwap(NavMeshGroup* other) {
  indexlist_.UnsafeArenaSwap(&other->indexlist_);
  verticelist_.UnsafeArenaSwap(&other->verticelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NavMeshGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NavMeshGroup_descriptor_;
  metadata.reflection = NavMeshGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NavMeshGroup

// repeated int32 indexList = 1;
int NavMeshGroup::indexlist_size() const {
  return indexlist_.size();
}
void NavMeshGroup::clear_indexlist() {
  indexlist_.Clear();
}
 ::google::protobuf::int32 NavMeshGroup::indexlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.NavMeshGroup.indexList)
  return indexlist_.Get(index);
}
 void NavMeshGroup::set_indexlist(int index, ::google::protobuf::int32 value) {
  indexlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.NavMeshGroup.indexList)
}
 void NavMeshGroup::add_indexlist(::google::protobuf::int32 value) {
  indexlist_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.NavMeshGroup.indexList)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NavMeshGroup::indexlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.NavMeshGroup.indexList)
  return indexlist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NavMeshGroup::mutable_indexlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.NavMeshGroup.indexList)
  return &indexlist_;
}

// repeated .gt_msg.Vec3 verticeList = 2;
int NavMeshGroup::verticelist_size() const {
  return verticelist_.size();
}
void NavMeshGroup::clear_verticelist() {
  verticelist_.Clear();
}
const ::gt_msg::Vec3& NavMeshGroup::verticelist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.NavMeshGroup.verticeList)
  return verticelist_.Get(index);
}
::gt_msg::Vec3* NavMeshGroup::mutable_verticelist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.NavMeshGroup.verticeList)
  return verticelist_.Mutable(index);
}
::gt_msg::Vec3* NavMeshGroup::add_verticelist() {
  // @@protoc_insertion_point(field_add:gt_msg.NavMeshGroup.verticeList)
  return verticelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
NavMeshGroup::mutable_verticelist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.NavMeshGroup.verticeList)
  return &verticelist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
NavMeshGroup::verticelist() const {
  // @@protoc_insertion_point(field_list:gt_msg.NavMeshGroup.verticeList)
  return verticelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionData::kActionFrameFieldNumber;
const int ActionData::kPlayIdleIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionData::ActionData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.ActionData)
}

void ActionData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActionData::ActionData(const ActionData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.ActionData)
}

void ActionData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  actionframe_ = 0;
  playidleindex_ = 0;
}

ActionData::~ActionData() {
  // @@protoc_insertion_point(destructor:gt_msg.ActionData)
  SharedDtor();
}

void ActionData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionData_descriptor_;
}

const ActionData& ActionData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

ActionData* ActionData::default_instance_ = NULL;

ActionData* ActionData::New(::google::protobuf::Arena* arena) const {
  ActionData* n = new ActionData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionData::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.ActionData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActionData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActionData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(actionframe_, playidleindex_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.ActionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 actionFrame = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionframe_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_playIdleIndex;
        break;
      }

      // optional int32 playIdleIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_playIdleIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playidleindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.ActionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.ActionData)
  return false;
#undef DO_
}

void ActionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.ActionData)
  // optional int32 actionFrame = 1;
  if (this->actionframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->actionframe(), output);
  }

  // optional int32 playIdleIndex = 2;
  if (this->playidleindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->playidleindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.ActionData)
}

::google::protobuf::uint8* ActionData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.ActionData)
  // optional int32 actionFrame = 1;
  if (this->actionframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->actionframe(), target);
  }

  // optional int32 playIdleIndex = 2;
  if (this->playidleindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->playidleindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.ActionData)
  return target;
}

int ActionData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.ActionData)
  int total_size = 0;

  // optional int32 actionFrame = 1;
  if (this->actionframe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionframe());
  }

  // optional int32 playIdleIndex = 2;
  if (this->playidleindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playidleindex());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.ActionData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActionData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.ActionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.ActionData)
    MergeFrom(*source);
  }
}

void ActionData::MergeFrom(const ActionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.ActionData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.actionframe() != 0) {
    set_actionframe(from.actionframe());
  }
  if (from.playidleindex() != 0) {
    set_playidleindex(from.playidleindex());
  }
}

void ActionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.ActionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionData::CopyFrom(const ActionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.ActionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionData::IsInitialized() const {

  return true;
}

void ActionData::Swap(ActionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionData::InternalSwap(ActionData* other) {
  std::swap(actionframe_, other->actionframe_);
  std::swap(playidleindex_, other->playidleindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionData_descriptor_;
  metadata.reflection = ActionData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionData

// optional int32 actionFrame = 1;
void ActionData::clear_actionframe() {
  actionframe_ = 0;
}
 ::google::protobuf::int32 ActionData::actionframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.ActionData.actionFrame)
  return actionframe_;
}
 void ActionData::set_actionframe(::google::protobuf::int32 value) {
  
  actionframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ActionData.actionFrame)
}

// optional int32 playIdleIndex = 2;
void ActionData::clear_playidleindex() {
  playidleindex_ = 0;
}
 ::google::protobuf::int32 ActionData::playidleindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.ActionData.playIdleIndex)
  return playidleindex_;
}
 void ActionData::set_playidleindex(::google::protobuf::int32 value) {
  
  playidleindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ActionData.playIdleIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageTimer::kPassFrameFieldNumber;
const int MessageTimer::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageTimer::MessageTimer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.MessageTimer)
}

void MessageTimer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageTimer::MessageTimer(const MessageTimer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.MessageTimer)
}

void MessageTimer::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  passframe_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessageTimer::~MessageTimer() {
  // @@protoc_insertion_point(destructor:gt_msg.MessageTimer)
  SharedDtor();
}

void MessageTimer::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageTimer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageTimer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageTimer_descriptor_;
}

const MessageTimer& MessageTimer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

MessageTimer* MessageTimer::default_instance_ = NULL;

MessageTimer* MessageTimer::New(::google::protobuf::Arena* arena) const {
  MessageTimer* n = new MessageTimer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageTimer::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.MessageTimer)
  passframe_ = 0;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MessageTimer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.MessageTimer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 passFrame = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passframe_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (tag == 18) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.MessageTimer.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.MessageTimer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.MessageTimer)
  return false;
#undef DO_
}

void MessageTimer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.MessageTimer)
  // optional int32 passFrame = 1;
  if (this->passframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->passframe(), output);
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.MessageTimer.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.MessageTimer)
}

::google::protobuf::uint8* MessageTimer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.MessageTimer)
  // optional int32 passFrame = 1;
  if (this->passframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->passframe(), target);
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.MessageTimer.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.MessageTimer)
  return target;
}

int MessageTimer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.MessageTimer)
  int total_size = 0;

  // optional int32 passFrame = 1;
  if (this->passframe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->passframe());
  }

  // optional string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageTimer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.MessageTimer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageTimer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageTimer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.MessageTimer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.MessageTimer)
    MergeFrom(*source);
  }
}

void MessageTimer::MergeFrom(const MessageTimer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.MessageTimer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.passframe() != 0) {
    set_passframe(from.passframe());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void MessageTimer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.MessageTimer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageTimer::CopyFrom(const MessageTimer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.MessageTimer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageTimer::IsInitialized() const {

  return true;
}

void MessageTimer::Swap(MessageTimer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageTimer::InternalSwap(MessageTimer* other) {
  std::swap(passframe_, other->passframe_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageTimer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageTimer_descriptor_;
  metadata.reflection = MessageTimer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageTimer

// optional int32 passFrame = 1;
void MessageTimer::clear_passframe() {
  passframe_ = 0;
}
 ::google::protobuf::int32 MessageTimer::passframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.MessageTimer.passFrame)
  return passframe_;
}
 void MessageTimer::set_passframe(::google::protobuf::int32 value) {
  
  passframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.MessageTimer.passFrame)
}

// optional string message = 2;
void MessageTimer::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageTimer::message() const {
  // @@protoc_insertion_point(field_get:gt_msg.MessageTimer.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageTimer::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.MessageTimer.message)
}
 void MessageTimer::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.MessageTimer.message)
}
 void MessageTimer::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.MessageTimer.message)
}
 ::std::string* MessageTimer::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.MessageTimer.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageTimer::release_message() {
  // @@protoc_insertion_point(field_release:gt_msg.MessageTimer.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageTimer::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.MessageTimer.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductItemContent::kProductItemIndexFieldNumber;
const int ProductItemContent::kFrameFieldNumber;
const int ProductItemContent::kFishListFieldNumber;
const int ProductItemContent::kSpeedScaleFieldNumber;
const int ProductItemContent::kAngleOffsetFieldNumber;
const int ProductItemContent::kFollowCountFieldNumber;
const int ProductItemContent::kFollowDistanceFieldNumber;
const int ProductItemContent::kForeverFieldNumber;
const int ProductItemContent::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductItemContent::ProductItemContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.ProductItemContent)
}

void ProductItemContent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProductItemContent::ProductItemContent(const ProductItemContent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.ProductItemContent)
}

void ProductItemContent::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  frame_ = 0;
  speedscale_ = 0;
  angleoffset_ = 0;
  followcount_ = 0;
  followdistance_ = 0;
  forever_ = false;
}

ProductItemContent::~ProductItemContent() {
  // @@protoc_insertion_point(destructor:gt_msg.ProductItemContent)
  SharedDtor();
}

void ProductItemContent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProductItemContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductItemContent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProductItemContent_descriptor_;
}

const ProductItemContent& ProductItemContent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

ProductItemContent* ProductItemContent::default_instance_ = NULL;

ProductItemContent* ProductItemContent::New(::google::protobuf::Arena* arena) const {
  ProductItemContent* n = new ProductItemContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProductItemContent::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.ProductItemContent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProductItemContent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProductItemContent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(frame_, forever_);

#undef ZR_HELPER_
#undef ZR_

  productitemindex_.Clear();
  fishlist_.Clear();
  items_.Clear();
}

bool ProductItemContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.ProductItemContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 ProductItemIndex = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_productitemindex())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_productitemindex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_frame;
        break;
      }

      // optional int32 frame = 2;
      case 2: {
        if (tag == 16) {
         parse_frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fishList;
        break;
      }

      // repeated string fishList = 3;
      case 3: {
        if (tag == 26) {
         parse_fishList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fishlist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fishlist(this->fishlist_size() - 1).data(),
            this->fishlist(this->fishlist_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.ProductItemContent.fishList"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fishList;
        if (input->ExpectTag(37)) goto parse_SpeedScale;
        break;
      }

      // optional float SpeedScale = 4;
      case 4: {
        if (tag == 37) {
         parse_SpeedScale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speedscale_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_AngleOffset;
        break;
      }

      // optional int32 AngleOffset = 5;
      case 5: {
        if (tag == 40) {
         parse_AngleOffset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &angleoffset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_FollowCount;
        break;
      }

      // optional int32 FollowCount = 7;
      case 7: {
        if (tag == 56) {
         parse_FollowCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &followcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_FollowDistance;
        break;
      }

      // optional int32 FollowDistance = 8;
      case 8: {
        if (tag == 64) {
         parse_FollowDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &followdistance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Forever;
        break;
      }

      // optional bool Forever = 9;
      case 9: {
        if (tag == 72) {
         parse_Forever:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forever_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_items;
        break;
      }

      // repeated .gt_msg.ProductItem items = 10;
      case 10: {
        if (tag == 82) {
         parse_items:
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.ProductItemContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.ProductItemContent)
  return false;
#undef DO_
}

void ProductItemContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.ProductItemContent)
  // repeated int32 ProductItemIndex = 1;
  if (this->productitemindex_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_productitemindex_cached_byte_size_);
  }
  for (int i = 0; i < this->productitemindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->productitemindex(i), output);
  }

  // optional int32 frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frame(), output);
  }

  // repeated string fishList = 3;
  for (int i = 0; i < this->fishlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fishlist(i).data(), this->fishlist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.ProductItemContent.fishList");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->fishlist(i), output);
  }

  // optional float SpeedScale = 4;
  if (this->speedscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->speedscale(), output);
  }

  // optional int32 AngleOffset = 5;
  if (this->angleoffset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->angleoffset(), output);
  }

  // optional int32 FollowCount = 7;
  if (this->followcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->followcount(), output);
  }

  // optional int32 FollowDistance = 8;
  if (this->followdistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->followdistance(), output);
  }

  // optional bool Forever = 9;
  if (this->forever() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->forever(), output);
  }

  // repeated .gt_msg.ProductItem items = 10;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.ProductItemContent)
}

::google::protobuf::uint8* ProductItemContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.ProductItemContent)
  // repeated int32 ProductItemIndex = 1;
  if (this->productitemindex_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _productitemindex_cached_byte_size_, target);
  }
  for (int i = 0; i < this->productitemindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->productitemindex(i), target);
  }

  // optional int32 frame = 2;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->frame(), target);
  }

  // repeated string fishList = 3;
  for (int i = 0; i < this->fishlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fishlist(i).data(), this->fishlist(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.ProductItemContent.fishList");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->fishlist(i), target);
  }

  // optional float SpeedScale = 4;
  if (this->speedscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->speedscale(), target);
  }

  // optional int32 AngleOffset = 5;
  if (this->angleoffset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->angleoffset(), target);
  }

  // optional int32 FollowCount = 7;
  if (this->followcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->followcount(), target);
  }

  // optional int32 FollowDistance = 8;
  if (this->followdistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->followdistance(), target);
  }

  // optional bool Forever = 9;
  if (this->forever() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->forever(), target);
  }

  // repeated .gt_msg.ProductItem items = 10;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->items(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.ProductItemContent)
  return target;
}

int ProductItemContent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.ProductItemContent)
  int total_size = 0;

  // optional int32 frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional float SpeedScale = 4;
  if (this->speedscale() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 AngleOffset = 5;
  if (this->angleoffset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->angleoffset());
  }

  // optional int32 FollowCount = 7;
  if (this->followcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->followcount());
  }

  // optional int32 FollowDistance = 8;
  if (this->followdistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->followdistance());
  }

  // optional bool Forever = 9;
  if (this->forever() != 0) {
    total_size += 1 + 1;
  }

  // repeated int32 ProductItemIndex = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->productitemindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->productitemindex(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _productitemindex_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string fishList = 3;
  total_size += 1 * this->fishlist_size();
  for (int i = 0; i < this->fishlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fishlist(i));
  }

  // repeated .gt_msg.ProductItem items = 10;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductItemContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.ProductItemContent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProductItemContent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductItemContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.ProductItemContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.ProductItemContent)
    MergeFrom(*source);
  }
}

void ProductItemContent::MergeFrom(const ProductItemContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.ProductItemContent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  productitemindex_.MergeFrom(from.productitemindex_);
  fishlist_.MergeFrom(from.fishlist_);
  items_.MergeFrom(from.items_);
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.speedscale() != 0) {
    set_speedscale(from.speedscale());
  }
  if (from.angleoffset() != 0) {
    set_angleoffset(from.angleoffset());
  }
  if (from.followcount() != 0) {
    set_followcount(from.followcount());
  }
  if (from.followdistance() != 0) {
    set_followdistance(from.followdistance());
  }
  if (from.forever() != 0) {
    set_forever(from.forever());
  }
}

void ProductItemContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.ProductItemContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductItemContent::CopyFrom(const ProductItemContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.ProductItemContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductItemContent::IsInitialized() const {

  return true;
}

void ProductItemContent::Swap(ProductItemContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductItemContent::InternalSwap(ProductItemContent* other) {
  productitemindex_.UnsafeArenaSwap(&other->productitemindex_);
  std::swap(frame_, other->frame_);
  fishlist_.UnsafeArenaSwap(&other->fishlist_);
  std::swap(speedscale_, other->speedscale_);
  std::swap(angleoffset_, other->angleoffset_);
  std::swap(followcount_, other->followcount_);
  std::swap(followdistance_, other->followdistance_);
  std::swap(forever_, other->forever_);
  items_.UnsafeArenaSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductItemContent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProductItemContent_descriptor_;
  metadata.reflection = ProductItemContent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductItemContent

// repeated int32 ProductItemIndex = 1;
int ProductItemContent::productitemindex_size() const {
  return productitemindex_.size();
}
void ProductItemContent::clear_productitemindex() {
  productitemindex_.Clear();
}
 ::google::protobuf::int32 ProductItemContent::productitemindex(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.ProductItemIndex)
  return productitemindex_.Get(index);
}
 void ProductItemContent::set_productitemindex(int index, ::google::protobuf::int32 value) {
  productitemindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.ProductItemIndex)
}
 void ProductItemContent::add_productitemindex(::google::protobuf::int32 value) {
  productitemindex_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.ProductItemIndex)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProductItemContent::productitemindex() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.ProductItemIndex)
  return productitemindex_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProductItemContent::mutable_productitemindex() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.ProductItemIndex)
  return &productitemindex_;
}

// optional int32 frame = 2;
void ProductItemContent::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 ProductItemContent::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.frame)
  return frame_;
}
 void ProductItemContent::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.frame)
}

// repeated string fishList = 3;
int ProductItemContent::fishlist_size() const {
  return fishlist_.size();
}
void ProductItemContent::clear_fishlist() {
  fishlist_.Clear();
}
 const ::std::string& ProductItemContent::fishlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.fishList)
  return fishlist_.Get(index);
}
 ::std::string* ProductItemContent::mutable_fishlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.fishList)
  return fishlist_.Mutable(index);
}
 void ProductItemContent::set_fishlist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.fishList)
  fishlist_.Mutable(index)->assign(value);
}
 void ProductItemContent::set_fishlist(int index, const char* value) {
  fishlist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItemContent.fishList)
}
 void ProductItemContent::set_fishlist(int index, const char* value, size_t size) {
  fishlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItemContent.fishList)
}
 ::std::string* ProductItemContent::add_fishlist() {
  // @@protoc_insertion_point(field_add_mutable:gt_msg.ProductItemContent.fishList)
  return fishlist_.Add();
}
 void ProductItemContent::add_fishlist(const ::std::string& value) {
  fishlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.fishList)
}
 void ProductItemContent::add_fishlist(const char* value) {
  fishlist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gt_msg.ProductItemContent.fishList)
}
 void ProductItemContent::add_fishlist(const char* value, size_t size) {
  fishlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gt_msg.ProductItemContent.fishList)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProductItemContent::fishlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.fishList)
  return fishlist_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ProductItemContent::mutable_fishlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.fishList)
  return &fishlist_;
}

// optional float SpeedScale = 4;
void ProductItemContent::clear_speedscale() {
  speedscale_ = 0;
}
 float ProductItemContent::speedscale() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.SpeedScale)
  return speedscale_;
}
 void ProductItemContent::set_speedscale(float value) {
  
  speedscale_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.SpeedScale)
}

// optional int32 AngleOffset = 5;
void ProductItemContent::clear_angleoffset() {
  angleoffset_ = 0;
}
 ::google::protobuf::int32 ProductItemContent::angleoffset() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.AngleOffset)
  return angleoffset_;
}
 void ProductItemContent::set_angleoffset(::google::protobuf::int32 value) {
  
  angleoffset_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.AngleOffset)
}

// optional int32 FollowCount = 7;
void ProductItemContent::clear_followcount() {
  followcount_ = 0;
}
 ::google::protobuf::int32 ProductItemContent::followcount() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.FollowCount)
  return followcount_;
}
 void ProductItemContent::set_followcount(::google::protobuf::int32 value) {
  
  followcount_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.FollowCount)
}

// optional int32 FollowDistance = 8;
void ProductItemContent::clear_followdistance() {
  followdistance_ = 0;
}
 ::google::protobuf::int32 ProductItemContent::followdistance() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.FollowDistance)
  return followdistance_;
}
 void ProductItemContent::set_followdistance(::google::protobuf::int32 value) {
  
  followdistance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.FollowDistance)
}

// optional bool Forever = 9;
void ProductItemContent::clear_forever() {
  forever_ = false;
}
 bool ProductItemContent::forever() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.Forever)
  return forever_;
}
 void ProductItemContent::set_forever(bool value) {
  
  forever_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemContent.Forever)
}

// repeated .gt_msg.ProductItem items = 10;
int ProductItemContent::items_size() const {
  return items_.size();
}
void ProductItemContent::clear_items() {
  items_.Clear();
}
const ::gt_msg::ProductItem& ProductItemContent::items(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemContent.items)
  return items_.Get(index);
}
::gt_msg::ProductItem* ProductItemContent::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemContent.items)
  return items_.Mutable(index);
}
::gt_msg::ProductItem* ProductItemContent::add_items() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemContent.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
ProductItemContent::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemContent.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
ProductItemContent::items() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemContent.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductItem::kContentNameFieldNumber;
const int ProductItem::kIsSyncFieldNumber;
const int ProductItem::kTimeFieldNumber;
const int ProductItem::kContentItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductItem::ProductItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.ProductItem)
}

void ProductItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProductItem::ProductItem(const ProductItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.ProductItem)
}

void ProductItem::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  contentname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issync_ = false;
  time_ = 0;
}

ProductItem::~ProductItem() {
  // @@protoc_insertion_point(destructor:gt_msg.ProductItem)
  SharedDtor();
}

void ProductItem::SharedDtor() {
  contentname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ProductItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProductItem_descriptor_;
}

const ProductItem& ProductItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

ProductItem* ProductItem::default_instance_ = NULL;

ProductItem* ProductItem::New(::google::protobuf::Arena* arena) const {
  ProductItem* n = new ProductItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProductItem::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.ProductItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProductItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProductItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(issync_, time_);
  contentname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  contentitems_.Clear();
}

bool ProductItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.ProductItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ContentName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contentname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contentname().data(), this->contentname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.ProductItem.ContentName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_isSync;
        break;
      }

      // optional bool isSync = 2;
      case 2: {
        if (tag == 16) {
         parse_isSync:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issync_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // optional int32 time = 3;
      case 3: {
        if (tag == 24) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_contentItems;
        break;
      }

      // repeated .gt_msg.ProductItemContent contentItems = 4;
      case 4: {
        if (tag == 34) {
         parse_contentItems:
          DO_(input->IncrementRecursionDepth());
         parse_loop_contentItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_contentitems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_contentItems;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.ProductItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.ProductItem)
  return false;
#undef DO_
}

void ProductItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.ProductItem)
  // optional string ContentName = 1;
  if (this->contentname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contentname().data(), this->contentname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.ProductItem.ContentName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->contentname(), output);
  }

  // optional bool isSync = 2;
  if (this->issync() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->issync(), output);
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time(), output);
  }

  // repeated .gt_msg.ProductItemContent contentItems = 4;
  for (unsigned int i = 0, n = this->contentitems_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->contentitems(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.ProductItem)
}

::google::protobuf::uint8* ProductItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.ProductItem)
  // optional string ContentName = 1;
  if (this->contentname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contentname().data(), this->contentname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.ProductItem.ContentName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->contentname(), target);
  }

  // optional bool isSync = 2;
  if (this->issync() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->issync(), target);
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time(), target);
  }

  // repeated .gt_msg.ProductItemContent contentItems = 4;
  for (unsigned int i = 0, n = this->contentitems_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->contentitems(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.ProductItem)
  return target;
}

int ProductItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.ProductItem)
  int total_size = 0;

  // optional string ContentName = 1;
  if (this->contentname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contentname());
  }

  // optional bool isSync = 2;
  if (this->issync() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // repeated .gt_msg.ProductItemContent contentItems = 4;
  total_size += 1 * this->contentitems_size();
  for (int i = 0; i < this->contentitems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contentitems(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.ProductItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProductItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.ProductItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.ProductItem)
    MergeFrom(*source);
  }
}

void ProductItem::MergeFrom(const ProductItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.ProductItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  contentitems_.MergeFrom(from.contentitems_);
  if (from.contentname().size() > 0) {

    contentname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contentname_);
  }
  if (from.issync() != 0) {
    set_issync(from.issync());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void ProductItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.ProductItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductItem::CopyFrom(const ProductItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.ProductItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductItem::IsInitialized() const {

  return true;
}

void ProductItem::Swap(ProductItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductItem::InternalSwap(ProductItem* other) {
  contentname_.Swap(&other->contentname_);
  std::swap(issync_, other->issync_);
  std::swap(time_, other->time_);
  contentitems_.UnsafeArenaSwap(&other->contentitems_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProductItem_descriptor_;
  metadata.reflection = ProductItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductItem

// optional string ContentName = 1;
void ProductItem::clear_contentname() {
  contentname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProductItem::contentname() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.ContentName)
  return contentname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProductItem::set_contentname(const ::std::string& value) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.ContentName)
}
 void ProductItem::set_contentname(const char* value) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.ProductItem.ContentName)
}
 void ProductItem::set_contentname(const char* value, size_t size) {
  
  contentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.ProductItem.ContentName)
}
 ::std::string* ProductItem::mutable_contentname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItem.ContentName)
  return contentname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProductItem::release_contentname() {
  // @@protoc_insertion_point(field_release:gt_msg.ProductItem.ContentName)
  
  return contentname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProductItem::set_allocated_contentname(::std::string* contentname) {
  if (contentname != NULL) {
    
  } else {
    
  }
  contentname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contentname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.ProductItem.ContentName)
}

// optional bool isSync = 2;
void ProductItem::clear_issync() {
  issync_ = false;
}
 bool ProductItem::issync() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.isSync)
  return issync_;
}
 void ProductItem::set_issync(bool value) {
  
  issync_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.isSync)
}

// optional int32 time = 3;
void ProductItem::clear_time() {
  time_ = 0;
}
 ::google::protobuf::int32 ProductItem::time() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.time)
  return time_;
}
 void ProductItem::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItem.time)
}

// repeated .gt_msg.ProductItemContent contentItems = 4;
int ProductItem::contentitems_size() const {
  return contentitems_.size();
}
void ProductItem::clear_contentitems() {
  contentitems_.Clear();
}
const ::gt_msg::ProductItemContent& ProductItem::contentitems(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItem.contentItems)
  return contentitems_.Get(index);
}
::gt_msg::ProductItemContent* ProductItem::mutable_contentitems(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItem.contentItems)
  return contentitems_.Mutable(index);
}
::gt_msg::ProductItemContent* ProductItem::add_contentitems() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItem.contentItems)
  return contentitems_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >*
ProductItem::mutable_contentitems() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItem.contentItems)
  return &contentitems_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItemContent >&
ProductItem::contentitems() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItem.contentItems)
  return contentitems_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductItemGroup::kItemListFieldNumber;
const int ProductItemGroup::kMainEnterFieldNumber;
const int ProductItemGroup::kAddFishEnterFieldNumber;
const int ProductItemGroup::kEnableAddFishFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductItemGroup::ProductItemGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.ProductItemGroup)
}

void ProductItemGroup::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProductItemGroup::ProductItemGroup(const ProductItemGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.ProductItemGroup)
}

void ProductItemGroup::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mainenter_ = 0;
  addfishenter_ = 0;
  enableaddfish_ = false;
}

ProductItemGroup::~ProductItemGroup() {
  // @@protoc_insertion_point(destructor:gt_msg.ProductItemGroup)
  SharedDtor();
}

void ProductItemGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProductItemGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProductItemGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProductItemGroup_descriptor_;
}

const ProductItemGroup& ProductItemGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

ProductItemGroup* ProductItemGroup::default_instance_ = NULL;

ProductItemGroup* ProductItemGroup::New(::google::protobuf::Arena* arena) const {
  ProductItemGroup* n = new ProductItemGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProductItemGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.ProductItemGroup)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProductItemGroup, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProductItemGroup*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mainenter_, enableaddfish_);

#undef ZR_HELPER_
#undef ZR_

  itemlist_.Clear();
}

bool ProductItemGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.ProductItemGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.ProductItem itemList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_itemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_itemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_mainEnter;
        break;
      }

      // optional int32 mainEnter = 2;
      case 2: {
        if (tag == 16) {
         parse_mainEnter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mainenter_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AddFishEnter;
        break;
      }

      // optional int32 AddFishEnter = 3;
      case 3: {
        if (tag == 24) {
         parse_AddFishEnter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addfishenter_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_EnableAddFish;
        break;
      }

      // optional bool EnableAddFish = 4;
      case 4: {
        if (tag == 32) {
         parse_EnableAddFish:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enableaddfish_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.ProductItemGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.ProductItemGroup)
  return false;
#undef DO_
}

void ProductItemGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.ProductItemGroup)
  // repeated .gt_msg.ProductItem itemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(i), output);
  }

  // optional int32 mainEnter = 2;
  if (this->mainenter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mainenter(), output);
  }

  // optional int32 AddFishEnter = 3;
  if (this->addfishenter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->addfishenter(), output);
  }

  // optional bool EnableAddFish = 4;
  if (this->enableaddfish() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enableaddfish(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.ProductItemGroup)
}

::google::protobuf::uint8* ProductItemGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.ProductItemGroup)
  // repeated .gt_msg.ProductItem itemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(i), false, target);
  }

  // optional int32 mainEnter = 2;
  if (this->mainenter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mainenter(), target);
  }

  // optional int32 AddFishEnter = 3;
  if (this->addfishenter() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->addfishenter(), target);
  }

  // optional bool EnableAddFish = 4;
  if (this->enableaddfish() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enableaddfish(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.ProductItemGroup)
  return target;
}

int ProductItemGroup::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.ProductItemGroup)
  int total_size = 0;

  // optional int32 mainEnter = 2;
  if (this->mainenter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mainenter());
  }

  // optional int32 AddFishEnter = 3;
  if (this->addfishenter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->addfishenter());
  }

  // optional bool EnableAddFish = 4;
  if (this->enableaddfish() != 0) {
    total_size += 1 + 1;
  }

  // repeated .gt_msg.ProductItem itemList = 1;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProductItemGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.ProductItemGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProductItemGroup* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProductItemGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.ProductItemGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.ProductItemGroup)
    MergeFrom(*source);
  }
}

void ProductItemGroup::MergeFrom(const ProductItemGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.ProductItemGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
  if (from.mainenter() != 0) {
    set_mainenter(from.mainenter());
  }
  if (from.addfishenter() != 0) {
    set_addfishenter(from.addfishenter());
  }
  if (from.enableaddfish() != 0) {
    set_enableaddfish(from.enableaddfish());
  }
}

void ProductItemGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.ProductItemGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductItemGroup::CopyFrom(const ProductItemGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.ProductItemGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductItemGroup::IsInitialized() const {

  return true;
}

void ProductItemGroup::Swap(ProductItemGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductItemGroup::InternalSwap(ProductItemGroup* other) {
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  std::swap(mainenter_, other->mainenter_);
  std::swap(addfishenter_, other->addfishenter_);
  std::swap(enableaddfish_, other->enableaddfish_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProductItemGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProductItemGroup_descriptor_;
  metadata.reflection = ProductItemGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProductItemGroup

// repeated .gt_msg.ProductItem itemList = 1;
int ProductItemGroup::itemlist_size() const {
  return itemlist_.size();
}
void ProductItemGroup::clear_itemlist() {
  itemlist_.Clear();
}
const ::gt_msg::ProductItem& ProductItemGroup::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Get(index);
}
::gt_msg::ProductItem* ProductItemGroup::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Mutable(index);
}
::gt_msg::ProductItem* ProductItemGroup::add_itemlist() {
  // @@protoc_insertion_point(field_add:gt_msg.ProductItemGroup.itemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >*
ProductItemGroup::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.ProductItemGroup.itemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::ProductItem >&
ProductItemGroup::itemlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.ProductItemGroup.itemList)
  return itemlist_;
}

// optional int32 mainEnter = 2;
void ProductItemGroup::clear_mainenter() {
  mainenter_ = 0;
}
 ::google::protobuf::int32 ProductItemGroup::mainenter() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.mainEnter)
  return mainenter_;
}
 void ProductItemGroup::set_mainenter(::google::protobuf::int32 value) {
  
  mainenter_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.mainEnter)
}

// optional int32 AddFishEnter = 3;
void ProductItemGroup::clear_addfishenter() {
  addfishenter_ = 0;
}
 ::google::protobuf::int32 ProductItemGroup::addfishenter() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.AddFishEnter)
  return addfishenter_;
}
 void ProductItemGroup::set_addfishenter(::google::protobuf::int32 value) {
  
  addfishenter_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.AddFishEnter)
}

// optional bool EnableAddFish = 4;
void ProductItemGroup::clear_enableaddfish() {
  enableaddfish_ = false;
}
 bool ProductItemGroup::enableaddfish() const {
  // @@protoc_insertion_point(field_get:gt_msg.ProductItemGroup.EnableAddFish)
  return enableaddfish_;
}
 void ProductItemGroup::set_enableaddfish(bool value) {
  
  enableaddfish_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.ProductItemGroup.EnableAddFish)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishProductNode::kProductNameFieldNumber;
const int FishProductNode::kRepeatTimeFieldNumber;
const int FishProductNode::kFishTypeFieldNumber;
const int FishProductNode::kStartFrameFieldNumber;
const int FishProductNode::kChildsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishProductNode::FishProductNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.FishProductNode)
}

void FishProductNode::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FishProductNode::FishProductNode(const FishProductNode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.FishProductNode)
}

void FishProductNode::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  repeattime_ = 0;
  fishtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  startframe_ = 0;
}

FishProductNode::~FishProductNode() {
  // @@protoc_insertion_point(destructor:gt_msg.FishProductNode)
  SharedDtor();
}

void FishProductNode::SharedDtor() {
  productname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fishtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FishProductNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishProductNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FishProductNode_descriptor_;
}

const FishProductNode& FishProductNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

FishProductNode* FishProductNode::default_instance_ = NULL;

FishProductNode* FishProductNode::New(::google::protobuf::Arena* arena) const {
  FishProductNode* n = new FishProductNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishProductNode::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.FishProductNode)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FishProductNode, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FishProductNode*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(repeattime_, startframe_);
  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fishtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  childs_.Clear();
}

bool FishProductNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.FishProductNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string productName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productname().data(), this->productname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.FishProductNode.productName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_repeatTime;
        break;
      }

      // optional int32 repeatTime = 2;
      case 2: {
        if (tag == 16) {
         parse_repeatTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &repeattime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fishType;
        break;
      }

      // optional string fishType = 3;
      case 3: {
        if (tag == 26) {
         parse_fishType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fishtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fishtype().data(), this->fishtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.FishProductNode.fishType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_startFrame;
        break;
      }

      // optional int32 startFrame = 4;
      case 4: {
        if (tag == 32) {
         parse_startFrame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startframe_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_childs;
        break;
      }

      // repeated .gt_msg.FishProductNode childs = 5;
      case 5: {
        if (tag == 42) {
         parse_childs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_childs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_childs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_childs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.FishProductNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.FishProductNode)
  return false;
#undef DO_
}

void FishProductNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.FishProductNode)
  // optional string productName = 1;
  if (this->productname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.FishProductNode.productName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->productname(), output);
  }

  // optional int32 repeatTime = 2;
  if (this->repeattime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->repeattime(), output);
  }

  // optional string fishType = 3;
  if (this->fishtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fishtype().data(), this->fishtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.FishProductNode.fishType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fishtype(), output);
  }

  // optional int32 startFrame = 4;
  if (this->startframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->startframe(), output);
  }

  // repeated .gt_msg.FishProductNode childs = 5;
  for (unsigned int i = 0, n = this->childs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->childs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.FishProductNode)
}

::google::protobuf::uint8* FishProductNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.FishProductNode)
  // optional string productName = 1;
  if (this->productname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productname().data(), this->productname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.FishProductNode.productName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->productname(), target);
  }

  // optional int32 repeatTime = 2;
  if (this->repeattime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->repeattime(), target);
  }

  // optional string fishType = 3;
  if (this->fishtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fishtype().data(), this->fishtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.FishProductNode.fishType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fishtype(), target);
  }

  // optional int32 startFrame = 4;
  if (this->startframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->startframe(), target);
  }

  // repeated .gt_msg.FishProductNode childs = 5;
  for (unsigned int i = 0, n = this->childs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->childs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.FishProductNode)
  return target;
}

int FishProductNode::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.FishProductNode)
  int total_size = 0;

  // optional string productName = 1;
  if (this->productname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productname());
  }

  // optional int32 repeatTime = 2;
  if (this->repeattime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->repeattime());
  }

  // optional string fishType = 3;
  if (this->fishtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fishtype());
  }

  // optional int32 startFrame = 4;
  if (this->startframe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startframe());
  }

  // repeated .gt_msg.FishProductNode childs = 5;
  total_size += 1 * this->childs_size();
  for (int i = 0; i < this->childs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->childs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishProductNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.FishProductNode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FishProductNode* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FishProductNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.FishProductNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.FishProductNode)
    MergeFrom(*source);
  }
}

void FishProductNode::MergeFrom(const FishProductNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.FishProductNode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  childs_.MergeFrom(from.childs_);
  if (from.productname().size() > 0) {

    productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
  }
  if (from.repeattime() != 0) {
    set_repeattime(from.repeattime());
  }
  if (from.fishtype().size() > 0) {

    fishtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fishtype_);
  }
  if (from.startframe() != 0) {
    set_startframe(from.startframe());
  }
}

void FishProductNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.FishProductNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishProductNode::CopyFrom(const FishProductNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.FishProductNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishProductNode::IsInitialized() const {

  return true;
}

void FishProductNode::Swap(FishProductNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishProductNode::InternalSwap(FishProductNode* other) {
  productname_.Swap(&other->productname_);
  std::swap(repeattime_, other->repeattime_);
  fishtype_.Swap(&other->fishtype_);
  std::swap(startframe_, other->startframe_);
  childs_.UnsafeArenaSwap(&other->childs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishProductNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FishProductNode_descriptor_;
  metadata.reflection = FishProductNode_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishProductNode

// optional string productName = 1;
void FishProductNode::clear_productname() {
  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FishProductNode::productname() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.productName)
  return productname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FishProductNode::set_productname(const ::std::string& value) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.productName)
}
 void FishProductNode::set_productname(const char* value) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishProductNode.productName)
}
 void FishProductNode::set_productname(const char* value, size_t size) {
  
  productname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishProductNode.productName)
}
 ::std::string* FishProductNode::mutable_productname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.productName)
  return productname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FishProductNode::release_productname() {
  // @@protoc_insertion_point(field_release:gt_msg.FishProductNode.productName)
  
  return productname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FishProductNode::set_allocated_productname(::std::string* productname) {
  if (productname != NULL) {
    
  } else {
    
  }
  productname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishProductNode.productName)
}

// optional int32 repeatTime = 2;
void FishProductNode::clear_repeattime() {
  repeattime_ = 0;
}
 ::google::protobuf::int32 FishProductNode::repeattime() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.repeatTime)
  return repeattime_;
}
 void FishProductNode::set_repeattime(::google::protobuf::int32 value) {
  
  repeattime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.repeatTime)
}

// optional string fishType = 3;
void FishProductNode::clear_fishtype() {
  fishtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FishProductNode::fishtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.fishType)
  return fishtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FishProductNode::set_fishtype(const ::std::string& value) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.fishType)
}
 void FishProductNode::set_fishtype(const char* value) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.FishProductNode.fishType)
}
 void FishProductNode::set_fishtype(const char* value, size_t size) {
  
  fishtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.FishProductNode.fishType)
}
 ::std::string* FishProductNode::mutable_fishtype() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.fishType)
  return fishtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FishProductNode::release_fishtype() {
  // @@protoc_insertion_point(field_release:gt_msg.FishProductNode.fishType)
  
  return fishtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FishProductNode::set_allocated_fishtype(::std::string* fishtype) {
  if (fishtype != NULL) {
    
  } else {
    
  }
  fishtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fishtype);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.FishProductNode.fishType)
}

// optional int32 startFrame = 4;
void FishProductNode::clear_startframe() {
  startframe_ = 0;
}
 ::google::protobuf::int32 FishProductNode::startframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.startFrame)
  return startframe_;
}
 void FishProductNode::set_startframe(::google::protobuf::int32 value) {
  
  startframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.FishProductNode.startFrame)
}

// repeated .gt_msg.FishProductNode childs = 5;
int FishProductNode::childs_size() const {
  return childs_.size();
}
void FishProductNode::clear_childs() {
  childs_.Clear();
}
const ::gt_msg::FishProductNode& FishProductNode::childs(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.FishProductNode.childs)
  return childs_.Get(index);
}
::gt_msg::FishProductNode* FishProductNode::mutable_childs(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.FishProductNode.childs)
  return childs_.Mutable(index);
}
::gt_msg::FishProductNode* FishProductNode::add_childs() {
  // @@protoc_insertion_point(field_add:gt_msg.FishProductNode.childs)
  return childs_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >*
FishProductNode::mutable_childs() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.FishProductNode.childs)
  return &childs_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::FishProductNode >&
FishProductNode::childs() const {
  // @@protoc_insertion_point(field_list:gt_msg.FishProductNode.childs)
  return childs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int row::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

row::row()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.row)
}

void row::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

row::row(const row& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.row)
}

void row::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

row::~row() {
  // @@protoc_insertion_point(destructor:gt_msg.row)
  SharedDtor();
}

void row::SharedDtor() {
  if (this != default_instance_) {
  }
}

void row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* row::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return row_descriptor_;
}

const row& row::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

row* row::default_instance_ = NULL;

row* row::New(::google::protobuf::Arena* arena) const {
  row* n = new row;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void row::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.row)
  data_.Clear();
}

bool row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.row)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 data = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_data())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.row)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.row)
  return false;
#undef DO_
}

void row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.row)
  // repeated int32 data = 1;
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_data_cached_byte_size_);
  }
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.row)
}

::google::protobuf::uint8* row::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.row)
  // repeated int32 data = 1;
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->data(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.row)
  return target;
}

int row::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.row)
  int total_size = 0;

  // repeated int32 data = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->data(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void row::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.row)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const row* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const row>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.row)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.row)
    MergeFrom(*source);
  }
}

void row::MergeFrom(const row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.row)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
}

void row::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void row::CopyFrom(const row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool row::IsInitialized() const {

  return true;
}

void row::Swap(row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void row::InternalSwap(row* other) {
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata row::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = row_descriptor_;
  metadata.reflection = row_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// row

// repeated int32 data = 1;
int row::data_size() const {
  return data_.size();
}
void row::clear_data() {
  data_.Clear();
}
 ::google::protobuf::int32 row::data(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.row.data)
  return data_.Get(index);
}
 void row::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.row.data)
}
 void row::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.row.data)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
row::data() const {
  // @@protoc_insertion_point(field_list:gt_msg.row.data)
  return data_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
row::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.row.data)
  return &data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapData::MapData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.MapData)
}

void MapData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MapData::MapData(const MapData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.MapData)
}

void MapData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MapData::~MapData() {
  // @@protoc_insertion_point(destructor:gt_msg.MapData)
  SharedDtor();
}

void MapData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MapData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapData_descriptor_;
}

const MapData& MapData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

MapData* MapData::default_instance_ = NULL;

MapData* MapData::New(::google::protobuf::Arena* arena) const {
  MapData* n = new MapData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapData::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.MapData)
  data_.Clear();
}

bool MapData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.MapData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.row data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.MapData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.MapData)
  return false;
#undef DO_
}

void MapData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.MapData)
  // repeated .gt_msg.row data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.MapData)
}

::google::protobuf::uint8* MapData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.MapData)
  // repeated .gt_msg.row data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.MapData)
  return target;
}

int MapData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.MapData)
  int total_size = 0;

  // repeated .gt_msg.row data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.MapData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MapData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MapData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.MapData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.MapData)
    MergeFrom(*source);
  }
}

void MapData::MergeFrom(const MapData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.MapData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
}

void MapData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.MapData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapData::CopyFrom(const MapData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.MapData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapData::IsInitialized() const {

  return true;
}

void MapData::Swap(MapData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapData::InternalSwap(MapData* other) {
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapData_descriptor_;
  metadata.reflection = MapData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapData

// repeated .gt_msg.row data = 1;
int MapData::data_size() const {
  return data_.size();
}
void MapData::clear_data() {
  data_.Clear();
}
const ::gt_msg::row& MapData::data(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.MapData.data)
  return data_.Get(index);
}
::gt_msg::row* MapData::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.MapData.data)
  return data_.Mutable(index);
}
::gt_msg::row* MapData::add_data() {
  // @@protoc_insertion_point(field_add:gt_msg.MapData.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::row >*
MapData::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.MapData.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::row >&
MapData::data() const {
  // @@protoc_insertion_point(field_list:gt_msg.MapData.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nears::kIndexFieldNumber;
const int Nears::kDistanceFieldNumber;
const int Nears::kPointIndexFieldNumber;
const int Nears::kLineIndexFieldNumber;
const int Nears::kOtherLineIndexFieldNumber;
const int Nears::kEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nears::Nears()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Nears)
}

void Nears::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Nears::Nears(const Nears& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Nears)
}

void Nears::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  index_ = 0;
  distance_ = 0;
  lineindex_ = 0;
  otherlineindex_ = 0;
  enable_ = false;
}

Nears::~Nears() {
  // @@protoc_insertion_point(destructor:gt_msg.Nears)
  SharedDtor();
}

void Nears::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Nears::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Nears::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Nears_descriptor_;
}

const Nears& Nears::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Nears* Nears::default_instance_ = NULL;

Nears* Nears::New(::google::protobuf::Arena* arena) const {
  Nears* n = new Nears;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Nears::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Nears)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Nears, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Nears*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, distance_);
  ZR_(lineindex_, enable_);

#undef ZR_HELPER_
#undef ZR_

  pointindex_.Clear();
}

bool Nears::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Nears)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_distance;
        break;
      }

      // optional float distance = 2;
      case 2: {
        if (tag == 21) {
         parse_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pointIndex;
        break;
      }

      // repeated int32 pointIndex = 3;
      case 3: {
        if (tag == 26) {
         parse_pointIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pointindex())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26, input, this->mutable_pointindex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_lineIndex;
        break;
      }

      // optional int32 lineIndex = 4;
      case 4: {
        if (tag == 32) {
         parse_lineIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lineindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_OtherLineIndex;
        break;
      }

      // optional int32 OtherLineIndex = 5;
      case 5: {
        if (tag == 40) {
         parse_OtherLineIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otherlineindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_enable;
        break;
      }

      // optional bool enable = 6;
      case 6: {
        if (tag == 48) {
         parse_enable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Nears)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Nears)
  return false;
#undef DO_
}

void Nears::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Nears)
  // optional int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional float distance = 2;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->distance(), output);
  }

  // repeated int32 pointIndex = 3;
  if (this->pointindex_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pointindex_cached_byte_size_);
  }
  for (int i = 0; i < this->pointindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pointindex(i), output);
  }

  // optional int32 lineIndex = 4;
  if (this->lineindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lineindex(), output);
  }

  // optional int32 OtherLineIndex = 5;
  if (this->otherlineindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->otherlineindex(), output);
  }

  // optional bool enable = 6;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->enable(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Nears)
}

::google::protobuf::uint8* Nears::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Nears)
  // optional int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional float distance = 2;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->distance(), target);
  }

  // repeated int32 pointIndex = 3;
  if (this->pointindex_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pointindex_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pointindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pointindex(i), target);
  }

  // optional int32 lineIndex = 4;
  if (this->lineindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lineindex(), target);
  }

  // optional int32 OtherLineIndex = 5;
  if (this->otherlineindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->otherlineindex(), target);
  }

  // optional bool enable = 6;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->enable(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Nears)
  return target;
}

int Nears::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Nears)
  int total_size = 0;

  // optional int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // optional float distance = 2;
  if (this->distance() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 lineIndex = 4;
  if (this->lineindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lineindex());
  }

  // optional int32 OtherLineIndex = 5;
  if (this->otherlineindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->otherlineindex());
  }

  // optional bool enable = 6;
  if (this->enable() != 0) {
    total_size += 1 + 1;
  }

  // repeated int32 pointIndex = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->pointindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pointindex(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pointindex_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Nears::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Nears)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Nears* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Nears>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Nears)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Nears)
    MergeFrom(*source);
  }
}

void Nears::MergeFrom(const Nears& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Nears)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pointindex_.MergeFrom(from.pointindex_);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
  if (from.lineindex() != 0) {
    set_lineindex(from.lineindex());
  }
  if (from.otherlineindex() != 0) {
    set_otherlineindex(from.otherlineindex());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void Nears::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Nears)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nears::CopyFrom(const Nears& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Nears)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nears::IsInitialized() const {

  return true;
}

void Nears::Swap(Nears* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nears::InternalSwap(Nears* other) {
  std::swap(index_, other->index_);
  std::swap(distance_, other->distance_);
  pointindex_.UnsafeArenaSwap(&other->pointindex_);
  std::swap(lineindex_, other->lineindex_);
  std::swap(otherlineindex_, other->otherlineindex_);
  std::swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Nears::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Nears_descriptor_;
  metadata.reflection = Nears_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Nears

// optional int32 index = 1;
void Nears::clear_index() {
  index_ = 0;
}
 ::google::protobuf::int32 Nears::index() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.index)
  return index_;
}
 void Nears::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.index)
}

// optional float distance = 2;
void Nears::clear_distance() {
  distance_ = 0;
}
 float Nears::distance() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.distance)
  return distance_;
}
 void Nears::set_distance(float value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.distance)
}

// repeated int32 pointIndex = 3;
int Nears::pointindex_size() const {
  return pointindex_.size();
}
void Nears::clear_pointindex() {
  pointindex_.Clear();
}
 ::google::protobuf::int32 Nears::pointindex(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.pointIndex)
  return pointindex_.Get(index);
}
 void Nears::set_pointindex(int index, ::google::protobuf::int32 value) {
  pointindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.Nears.pointIndex)
}
 void Nears::add_pointindex(::google::protobuf::int32 value) {
  pointindex_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.Nears.pointIndex)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Nears::pointindex() const {
  // @@protoc_insertion_point(field_list:gt_msg.Nears.pointIndex)
  return pointindex_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Nears::mutable_pointindex() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Nears.pointIndex)
  return &pointindex_;
}

// optional int32 lineIndex = 4;
void Nears::clear_lineindex() {
  lineindex_ = 0;
}
 ::google::protobuf::int32 Nears::lineindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.lineIndex)
  return lineindex_;
}
 void Nears::set_lineindex(::google::protobuf::int32 value) {
  
  lineindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.lineIndex)
}

// optional int32 OtherLineIndex = 5;
void Nears::clear_otherlineindex() {
  otherlineindex_ = 0;
}
 ::google::protobuf::int32 Nears::otherlineindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.OtherLineIndex)
  return otherlineindex_;
}
 void Nears::set_otherlineindex(::google::protobuf::int32 value) {
  
  otherlineindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.OtherLineIndex)
}

// optional bool enable = 6;
void Nears::clear_enable() {
  enable_ = false;
}
 bool Nears::enable() const {
  // @@protoc_insertion_point(field_get:gt_msg.Nears.enable)
  return enable_;
}
 void Nears::set_enable(bool value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Nears.enable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cell::kIndexFieldNumber;
const int Cell::kVFieldNumber;
const int Cell::kVIndexFieldNumber;
const int Cell::kMidPosFieldNumber;
const int Cell::kNearsFieldNumber;
const int Cell::kLineMidSqrDistanceFieldNumber;
const int Cell::kLineMidPosFieldNumber;
const int Cell::kNormalizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cell::Cell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Cell)
}

void Cell::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  midpos_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

Cell::Cell(const Cell& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Cell)
}

void Cell::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  index_ = 0;
  midpos_ = NULL;
}

Cell::~Cell() {
  // @@protoc_insertion_point(destructor:gt_msg.Cell)
  SharedDtor();
}

void Cell::SharedDtor() {
  if (this != default_instance_) {
    delete midpos_;
  }
}

void Cell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cell::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cell_descriptor_;
}

const Cell& Cell::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Cell* Cell::default_instance_ = NULL;

Cell* Cell::New(::google::protobuf::Arena* arena) const {
  Cell* n = new Cell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cell::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Cell)
  index_ = 0;
  if (GetArenaNoVirtual() == NULL && midpos_ != NULL) delete midpos_;
  midpos_ = NULL;
  v_.Clear();
  vindex_.Clear();
  nears_.Clear();
  linemidsqrdistance_.Clear();
  linemidpos_.Clear();
  normalize_.Clear();
}

bool Cell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Cell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_v;
        break;
      }

      // repeated .gt_msg.Vec3 v = 2;
      case 2: {
        if (tag == 18) {
         parse_v:
          DO_(input->IncrementRecursionDepth());
         parse_loop_v:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_v()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_v;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_vIndex;
        break;
      }

      // repeated int32 vIndex = 3;
      case 3: {
        if (tag == 26) {
         parse_vIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_vindex())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26, input, this->mutable_vindex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_midPos;
        break;
      }

      // optional .gt_msg.Vec3 midPos = 4;
      case 4: {
        if (tag == 34) {
         parse_midPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_midpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_nears;
        break;
      }

      // repeated .gt_msg.Nears nears = 5;
      case 5: {
        if (tag == 42) {
         parse_nears:
          DO_(input->IncrementRecursionDepth());
         parse_loop_nears:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_nears()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_nears;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_lineMidSqrDistance;
        break;
      }

      // repeated float lineMidSqrDistance = 6;
      case 6: {
        if (tag == 50) {
         parse_lineMidSqrDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_linemidsqrdistance())));
        } else if (tag == 53) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50, input, this->mutable_linemidsqrdistance())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_lineMidPos;
        break;
      }

      // repeated .gt_msg.Vec3 lineMidPos = 7;
      case 7: {
        if (tag == 58) {
         parse_lineMidPos:
          DO_(input->IncrementRecursionDepth());
         parse_loop_lineMidPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_linemidpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_lineMidPos;
        if (input->ExpectTag(66)) goto parse_loop_normalize;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .gt_msg.Vec3 normalize = 8;
      case 8: {
        if (tag == 66) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_normalize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_normalize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_normalize;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Cell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Cell)
  return false;
#undef DO_
}

void Cell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Cell)
  // optional int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // repeated .gt_msg.Vec3 v = 2;
  for (unsigned int i = 0, n = this->v_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->v(i), output);
  }

  // repeated int32 vIndex = 3;
  if (this->vindex_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_vindex_cached_byte_size_);
  }
  for (int i = 0; i < this->vindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->vindex(i), output);
  }

  // optional .gt_msg.Vec3 midPos = 4;
  if (this->has_midpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->midpos_, output);
  }

  // repeated .gt_msg.Nears nears = 5;
  for (unsigned int i = 0, n = this->nears_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->nears(i), output);
  }

  // repeated float lineMidSqrDistance = 6;
  if (this->linemidsqrdistance_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_linemidsqrdistance_cached_byte_size_);
  }
  for (int i = 0; i < this->linemidsqrdistance_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->linemidsqrdistance(i), output);
  }

  // repeated .gt_msg.Vec3 lineMidPos = 7;
  for (unsigned int i = 0, n = this->linemidpos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->linemidpos(i), output);
  }

  // repeated .gt_msg.Vec3 normalize = 8;
  for (unsigned int i = 0, n = this->normalize_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->normalize(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Cell)
}

::google::protobuf::uint8* Cell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Cell)
  // optional int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // repeated .gt_msg.Vec3 v = 2;
  for (unsigned int i = 0, n = this->v_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->v(i), false, target);
  }

  // repeated int32 vIndex = 3;
  if (this->vindex_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _vindex_cached_byte_size_, target);
  }
  for (int i = 0; i < this->vindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->vindex(i), target);
  }

  // optional .gt_msg.Vec3 midPos = 4;
  if (this->has_midpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->midpos_, false, target);
  }

  // repeated .gt_msg.Nears nears = 5;
  for (unsigned int i = 0, n = this->nears_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->nears(i), false, target);
  }

  // repeated float lineMidSqrDistance = 6;
  if (this->linemidsqrdistance_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _linemidsqrdistance_cached_byte_size_, target);
  }
  for (int i = 0; i < this->linemidsqrdistance_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->linemidsqrdistance(i), target);
  }

  // repeated .gt_msg.Vec3 lineMidPos = 7;
  for (unsigned int i = 0, n = this->linemidpos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->linemidpos(i), false, target);
  }

  // repeated .gt_msg.Vec3 normalize = 8;
  for (unsigned int i = 0, n = this->normalize_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->normalize(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Cell)
  return target;
}

int Cell::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Cell)
  int total_size = 0;

  // optional int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // optional .gt_msg.Vec3 midPos = 4;
  if (this->has_midpos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->midpos_);
  }

  // repeated .gt_msg.Vec3 v = 2;
  total_size += 1 * this->v_size();
  for (int i = 0; i < this->v_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->v(i));
  }

  // repeated int32 vIndex = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->vindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->vindex(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vindex_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .gt_msg.Nears nears = 5;
  total_size += 1 * this->nears_size();
  for (int i = 0; i < this->nears_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nears(i));
  }

  // repeated float lineMidSqrDistance = 6;
  {
    int data_size = 0;
    data_size = 4 * this->linemidsqrdistance_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _linemidsqrdistance_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .gt_msg.Vec3 lineMidPos = 7;
  total_size += 1 * this->linemidpos_size();
  for (int i = 0; i < this->linemidpos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->linemidpos(i));
  }

  // repeated .gt_msg.Vec3 normalize = 8;
  total_size += 1 * this->normalize_size();
  for (int i = 0; i < this->normalize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->normalize(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Cell)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Cell* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Cell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Cell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Cell)
    MergeFrom(*source);
  }
}

void Cell::MergeFrom(const Cell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Cell)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  v_.MergeFrom(from.v_);
  vindex_.MergeFrom(from.vindex_);
  nears_.MergeFrom(from.nears_);
  linemidsqrdistance_.MergeFrom(from.linemidsqrdistance_);
  linemidpos_.MergeFrom(from.linemidpos_);
  normalize_.MergeFrom(from.normalize_);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.has_midpos()) {
    mutable_midpos()->::gt_msg::Vec3::MergeFrom(from.midpos());
  }
}

void Cell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cell::CopyFrom(const Cell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cell::IsInitialized() const {

  return true;
}

void Cell::Swap(Cell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cell::InternalSwap(Cell* other) {
  std::swap(index_, other->index_);
  v_.UnsafeArenaSwap(&other->v_);
  vindex_.UnsafeArenaSwap(&other->vindex_);
  std::swap(midpos_, other->midpos_);
  nears_.UnsafeArenaSwap(&other->nears_);
  linemidsqrdistance_.UnsafeArenaSwap(&other->linemidsqrdistance_);
  linemidpos_.UnsafeArenaSwap(&other->linemidpos_);
  normalize_.UnsafeArenaSwap(&other->normalize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cell::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cell_descriptor_;
  metadata.reflection = Cell_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Cell

// optional int32 index = 1;
void Cell::clear_index() {
  index_ = 0;
}
 ::google::protobuf::int32 Cell::index() const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.index)
  return index_;
}
 void Cell::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Cell.index)
}

// repeated .gt_msg.Vec3 v = 2;
int Cell::v_size() const {
  return v_.size();
}
void Cell::clear_v() {
  v_.Clear();
}
const ::gt_msg::Vec3& Cell::v(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.v)
  return v_.Get(index);
}
::gt_msg::Vec3* Cell::mutable_v(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.v)
  return v_.Mutable(index);
}
::gt_msg::Vec3* Cell::add_v() {
  // @@protoc_insertion_point(field_add:gt_msg.Cell.v)
  return v_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
Cell::mutable_v() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.v)
  return &v_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
Cell::v() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.v)
  return v_;
}

// repeated int32 vIndex = 3;
int Cell::vindex_size() const {
  return vindex_.size();
}
void Cell::clear_vindex() {
  vindex_.Clear();
}
 ::google::protobuf::int32 Cell::vindex(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.vIndex)
  return vindex_.Get(index);
}
 void Cell::set_vindex(int index, ::google::protobuf::int32 value) {
  vindex_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.Cell.vIndex)
}
 void Cell::add_vindex(::google::protobuf::int32 value) {
  vindex_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.Cell.vIndex)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Cell::vindex() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.vIndex)
  return vindex_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Cell::mutable_vindex() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.vIndex)
  return &vindex_;
}

// optional .gt_msg.Vec3 midPos = 4;
bool Cell::has_midpos() const {
  return !_is_default_instance_ && midpos_ != NULL;
}
void Cell::clear_midpos() {
  if (GetArenaNoVirtual() == NULL && midpos_ != NULL) delete midpos_;
  midpos_ = NULL;
}
const ::gt_msg::Vec3& Cell::midpos() const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.midPos)
  return midpos_ != NULL ? *midpos_ : *default_instance_->midpos_;
}
::gt_msg::Vec3* Cell::mutable_midpos() {
  
  if (midpos_ == NULL) {
    midpos_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.midPos)
  return midpos_;
}
::gt_msg::Vec3* Cell::release_midpos() {
  // @@protoc_insertion_point(field_release:gt_msg.Cell.midPos)
  
  ::gt_msg::Vec3* temp = midpos_;
  midpos_ = NULL;
  return temp;
}
void Cell::set_allocated_midpos(::gt_msg::Vec3* midpos) {
  delete midpos_;
  midpos_ = midpos;
  if (midpos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Cell.midPos)
}

// repeated .gt_msg.Nears nears = 5;
int Cell::nears_size() const {
  return nears_.size();
}
void Cell::clear_nears() {
  nears_.Clear();
}
const ::gt_msg::Nears& Cell::nears(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.nears)
  return nears_.Get(index);
}
::gt_msg::Nears* Cell::mutable_nears(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.nears)
  return nears_.Mutable(index);
}
::gt_msg::Nears* Cell::add_nears() {
  // @@protoc_insertion_point(field_add:gt_msg.Cell.nears)
  return nears_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Nears >*
Cell::mutable_nears() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.nears)
  return &nears_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Nears >&
Cell::nears() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.nears)
  return nears_;
}

// repeated float lineMidSqrDistance = 6;
int Cell::linemidsqrdistance_size() const {
  return linemidsqrdistance_.size();
}
void Cell::clear_linemidsqrdistance() {
  linemidsqrdistance_.Clear();
}
 float Cell::linemidsqrdistance(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.lineMidSqrDistance)
  return linemidsqrdistance_.Get(index);
}
 void Cell::set_linemidsqrdistance(int index, float value) {
  linemidsqrdistance_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.Cell.lineMidSqrDistance)
}
 void Cell::add_linemidsqrdistance(float value) {
  linemidsqrdistance_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.Cell.lineMidSqrDistance)
}
 const ::google::protobuf::RepeatedField< float >&
Cell::linemidsqrdistance() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.lineMidSqrDistance)
  return linemidsqrdistance_;
}
 ::google::protobuf::RepeatedField< float >*
Cell::mutable_linemidsqrdistance() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.lineMidSqrDistance)
  return &linemidsqrdistance_;
}

// repeated .gt_msg.Vec3 lineMidPos = 7;
int Cell::linemidpos_size() const {
  return linemidpos_.size();
}
void Cell::clear_linemidpos() {
  linemidpos_.Clear();
}
const ::gt_msg::Vec3& Cell::linemidpos(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.lineMidPos)
  return linemidpos_.Get(index);
}
::gt_msg::Vec3* Cell::mutable_linemidpos(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.lineMidPos)
  return linemidpos_.Mutable(index);
}
::gt_msg::Vec3* Cell::add_linemidpos() {
  // @@protoc_insertion_point(field_add:gt_msg.Cell.lineMidPos)
  return linemidpos_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
Cell::mutable_linemidpos() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.lineMidPos)
  return &linemidpos_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
Cell::linemidpos() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.lineMidPos)
  return linemidpos_;
}

// repeated .gt_msg.Vec3 normalize = 8;
int Cell::normalize_size() const {
  return normalize_.size();
}
void Cell::clear_normalize() {
  normalize_.Clear();
}
const ::gt_msg::Vec3& Cell::normalize(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Cell.normalize)
  return normalize_.Get(index);
}
::gt_msg::Vec3* Cell::mutable_normalize(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Cell.normalize)
  return normalize_.Mutable(index);
}
::gt_msg::Vec3* Cell::add_normalize() {
  // @@protoc_insertion_point(field_add:gt_msg.Cell.normalize)
  return normalize_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
Cell::mutable_normalize() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Cell.normalize)
  return &normalize_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
Cell::normalize() const {
  // @@protoc_insertion_point(field_list:gt_msg.Cell.normalize)
  return normalize_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PosData::kPosFieldNumber;
const int PosData::kCellIndexsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PosData::PosData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.PosData)
}

void PosData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pos_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

PosData::PosData(const PosData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.PosData)
}

void PosData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  pos_ = NULL;
}

PosData::~PosData() {
  // @@protoc_insertion_point(destructor:gt_msg.PosData)
  SharedDtor();
}

void PosData::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void PosData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PosData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PosData_descriptor_;
}

const PosData& PosData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

PosData* PosData::default_instance_ = NULL;

PosData* PosData::New(::google::protobuf::Arena* arena) const {
  PosData* n = new PosData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PosData::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.PosData)
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
  cellindexs_.Clear();
}

bool PosData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.PosData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gt_msg.Vec3 Pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CellIndexs;
        break;
      }

      // repeated int32 CellIndexs = 2;
      case 2: {
        if (tag == 18) {
         parse_CellIndexs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cellindexs())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_cellindexs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.PosData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.PosData)
  return false;
#undef DO_
}

void PosData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.PosData)
  // optional .gt_msg.Vec3 Pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // repeated int32 CellIndexs = 2;
  if (this->cellindexs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_cellindexs_cached_byte_size_);
  }
  for (int i = 0; i < this->cellindexs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->cellindexs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.PosData)
}

::google::protobuf::uint8* PosData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.PosData)
  // optional .gt_msg.Vec3 Pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, false, target);
  }

  // repeated int32 CellIndexs = 2;
  if (this->cellindexs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _cellindexs_cached_byte_size_, target);
  }
  for (int i = 0; i < this->cellindexs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->cellindexs(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.PosData)
  return target;
}

int PosData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.PosData)
  int total_size = 0;

  // optional .gt_msg.Vec3 Pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // repeated int32 CellIndexs = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->cellindexs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->cellindexs(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cellindexs_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PosData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.PosData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PosData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PosData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.PosData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.PosData)
    MergeFrom(*source);
  }
}

void PosData::MergeFrom(const PosData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.PosData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  cellindexs_.MergeFrom(from.cellindexs_);
  if (from.has_pos()) {
    mutable_pos()->::gt_msg::Vec3::MergeFrom(from.pos());
  }
}

void PosData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.PosData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PosData::CopyFrom(const PosData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.PosData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PosData::IsInitialized() const {

  return true;
}

void PosData::Swap(PosData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PosData::InternalSwap(PosData* other) {
  std::swap(pos_, other->pos_);
  cellindexs_.UnsafeArenaSwap(&other->cellindexs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PosData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PosData_descriptor_;
  metadata.reflection = PosData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PosData

// optional .gt_msg.Vec3 Pos = 1;
bool PosData::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
void PosData::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::gt_msg::Vec3& PosData::pos() const {
  // @@protoc_insertion_point(field_get:gt_msg.PosData.Pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
::gt_msg::Vec3* PosData::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.PosData.Pos)
  return pos_;
}
::gt_msg::Vec3* PosData::release_pos() {
  // @@protoc_insertion_point(field_release:gt_msg.PosData.Pos)
  
  ::gt_msg::Vec3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PosData::set_allocated_pos(::gt_msg::Vec3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.PosData.Pos)
}

// repeated int32 CellIndexs = 2;
int PosData::cellindexs_size() const {
  return cellindexs_.size();
}
void PosData::clear_cellindexs() {
  cellindexs_.Clear();
}
 ::google::protobuf::int32 PosData::cellindexs(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.PosData.CellIndexs)
  return cellindexs_.Get(index);
}
 void PosData::set_cellindexs(int index, ::google::protobuf::int32 value) {
  cellindexs_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.PosData.CellIndexs)
}
 void PosData::add_cellindexs(::google::protobuf::int32 value) {
  cellindexs_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.PosData.CellIndexs)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PosData::cellindexs() const {
  // @@protoc_insertion_point(field_list:gt_msg.PosData.CellIndexs)
  return cellindexs_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PosData::mutable_cellindexs() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.PosData.CellIndexs)
  return &cellindexs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NavData::kCelllistFieldNumber;
const int NavData::kPosListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NavData::NavData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.NavData)
}

void NavData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NavData::NavData(const NavData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.NavData)
}

void NavData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

NavData::~NavData() {
  // @@protoc_insertion_point(destructor:gt_msg.NavData)
  SharedDtor();
}

void NavData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NavData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NavData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NavData_descriptor_;
}

const NavData& NavData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

NavData* NavData::default_instance_ = NULL;

NavData* NavData::New(::google::protobuf::Arena* arena) const {
  NavData* n = new NavData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NavData::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.NavData)
  celllist_.Clear();
  poslist_.Clear();
}

bool NavData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.NavData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.Cell celllist = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_celllist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_celllist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_celllist;
        if (input->ExpectTag(26)) goto parse_loop_posList;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .gt_msg.PosData posList = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_posList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_poslist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_posList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.NavData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.NavData)
  return false;
#undef DO_
}

void NavData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.NavData)
  // repeated .gt_msg.Cell celllist = 1;
  for (unsigned int i = 0, n = this->celllist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->celllist(i), output);
  }

  // repeated .gt_msg.PosData posList = 3;
  for (unsigned int i = 0, n = this->poslist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->poslist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.NavData)
}

::google::protobuf::uint8* NavData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.NavData)
  // repeated .gt_msg.Cell celllist = 1;
  for (unsigned int i = 0, n = this->celllist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->celllist(i), false, target);
  }

  // repeated .gt_msg.PosData posList = 3;
  for (unsigned int i = 0, n = this->poslist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->poslist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.NavData)
  return target;
}

int NavData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.NavData)
  int total_size = 0;

  // repeated .gt_msg.Cell celllist = 1;
  total_size += 1 * this->celllist_size();
  for (int i = 0; i < this->celllist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->celllist(i));
  }

  // repeated .gt_msg.PosData posList = 3;
  total_size += 1 * this->poslist_size();
  for (int i = 0; i < this->poslist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->poslist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NavData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.NavData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NavData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NavData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.NavData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.NavData)
    MergeFrom(*source);
  }
}

void NavData::MergeFrom(const NavData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.NavData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  celllist_.MergeFrom(from.celllist_);
  poslist_.MergeFrom(from.poslist_);
}

void NavData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.NavData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NavData::CopyFrom(const NavData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.NavData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NavData::IsInitialized() const {

  return true;
}

void NavData::Swap(NavData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NavData::InternalSwap(NavData* other) {
  celllist_.UnsafeArenaSwap(&other->celllist_);
  poslist_.UnsafeArenaSwap(&other->poslist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NavData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NavData_descriptor_;
  metadata.reflection = NavData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NavData

// repeated .gt_msg.Cell celllist = 1;
int NavData::celllist_size() const {
  return celllist_.size();
}
void NavData::clear_celllist() {
  celllist_.Clear();
}
const ::gt_msg::Cell& NavData::celllist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.NavData.celllist)
  return celllist_.Get(index);
}
::gt_msg::Cell* NavData::mutable_celllist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.NavData.celllist)
  return celllist_.Mutable(index);
}
::gt_msg::Cell* NavData::add_celllist() {
  // @@protoc_insertion_point(field_add:gt_msg.NavData.celllist)
  return celllist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Cell >*
NavData::mutable_celllist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.NavData.celllist)
  return &celllist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Cell >&
NavData::celllist() const {
  // @@protoc_insertion_point(field_list:gt_msg.NavData.celllist)
  return celllist_;
}

// repeated .gt_msg.PosData posList = 3;
int NavData::poslist_size() const {
  return poslist_.size();
}
void NavData::clear_poslist() {
  poslist_.Clear();
}
const ::gt_msg::PosData& NavData::poslist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.NavData.posList)
  return poslist_.Get(index);
}
::gt_msg::PosData* NavData::mutable_poslist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.NavData.posList)
  return poslist_.Mutable(index);
}
::gt_msg::PosData* NavData::add_poslist() {
  // @@protoc_insertion_point(field_add:gt_msg.NavData.posList)
  return poslist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::PosData >*
NavData::mutable_poslist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.NavData.posList)
  return &poslist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::PosData >&
NavData::poslist() const {
  // @@protoc_insertion_point(field_list:gt_msg.NavData.posList)
  return poslist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SynPos::kMoverIdFieldNumber;
const int SynPos::kFrameFieldNumber;
const int SynPos::kPositionFieldNumber;
const int SynPos::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SynPos::SynPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.SynPos)
}

void SynPos::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  position_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

SynPos::SynPos(const SynPos& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.SynPos)
}

void SynPos::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  moverid_ = 0;
  frame_ = 0;
  position_ = NULL;
  state_ = 0;
}

SynPos::~SynPos() {
  // @@protoc_insertion_point(destructor:gt_msg.SynPos)
  SharedDtor();
}

void SynPos::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void SynPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SynPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SynPos_descriptor_;
}

const SynPos& SynPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

SynPos* SynPos::default_instance_ = NULL;

SynPos* SynPos::New(::google::protobuf::Arena* arena) const {
  SynPos* n = new SynPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SynPos::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.SynPos)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SynPos, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SynPos*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(moverid_, frame_);
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
  state_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool SynPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.SynPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 MoverId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &moverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 2;
      case 2: {
        if (tag == 16) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Position;
        break;
      }

      // optional .gt_msg.Vec3 Position = 3;
      case 3: {
        if (tag == 26) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_State;
        break;
      }

      // optional int32 State = 4;
      case 4: {
        if (tag == 32) {
         parse_State:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.SynPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.SynPos)
  return false;
#undef DO_
}

void SynPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.SynPos)
  // optional int32 MoverId = 1;
  if (this->moverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->moverid(), output);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frame(), output);
  }

  // optional .gt_msg.Vec3 Position = 3;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->position_, output);
  }

  // optional int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.SynPos)
}

::google::protobuf::uint8* SynPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.SynPos)
  // optional int32 MoverId = 1;
  if (this->moverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->moverid(), target);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->frame(), target);
  }

  // optional .gt_msg.Vec3 Position = 3;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->position_, false, target);
  }

  // optional int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.SynPos)
  return target;
}

int SynPos::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.SynPos)
  int total_size = 0;

  // optional int32 MoverId = 1;
  if (this->moverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->moverid());
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional .gt_msg.Vec3 Position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // optional int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SynPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.SynPos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SynPos* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SynPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.SynPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.SynPos)
    MergeFrom(*source);
  }
}

void SynPos::MergeFrom(const SynPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.SynPos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.moverid() != 0) {
    set_moverid(from.moverid());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.has_position()) {
    mutable_position()->::gt_msg::Vec3::MergeFrom(from.position());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SynPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.SynPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynPos::CopyFrom(const SynPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.SynPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynPos::IsInitialized() const {

  return true;
}

void SynPos::Swap(SynPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SynPos::InternalSwap(SynPos* other) {
  std::swap(moverid_, other->moverid_);
  std::swap(frame_, other->frame_);
  std::swap(position_, other->position_);
  std::swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SynPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SynPos_descriptor_;
  metadata.reflection = SynPos_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SynPos

// optional int32 MoverId = 1;
void SynPos::clear_moverid() {
  moverid_ = 0;
}
 ::google::protobuf::int32 SynPos::moverid() const {
  // @@protoc_insertion_point(field_get:gt_msg.SynPos.MoverId)
  return moverid_;
}
 void SynPos::set_moverid(::google::protobuf::int32 value) {
  
  moverid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SynPos.MoverId)
}

// optional int32 Frame = 2;
void SynPos::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 SynPos::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.SynPos.Frame)
  return frame_;
}
 void SynPos::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SynPos.Frame)
}

// optional .gt_msg.Vec3 Position = 3;
bool SynPos::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
void SynPos::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::gt_msg::Vec3& SynPos::position() const {
  // @@protoc_insertion_point(field_get:gt_msg.SynPos.Position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
::gt_msg::Vec3* SynPos::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.SynPos.Position)
  return position_;
}
::gt_msg::Vec3* SynPos::release_position() {
  // @@protoc_insertion_point(field_release:gt_msg.SynPos.Position)
  
  ::gt_msg::Vec3* temp = position_;
  position_ = NULL;
  return temp;
}
void SynPos::set_allocated_position(::gt_msg::Vec3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.SynPos.Position)
}

// optional int32 State = 4;
void SynPos::clear_state() {
  state_ = 0;
}
 ::google::protobuf::int32 SynPos::state() const {
  // @@protoc_insertion_point(field_get:gt_msg.SynPos.State)
  return state_;
}
 void SynPos::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.SynPos.State)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_StartGame::kResultCodeFieldNumber;
const int S_StartGame::kWorldSizeFieldNumber;
const int S_StartGame::kFrameFieldNumber;
const int S_StartGame::kExecuteDelayFrameFieldNumber;
const int S_StartGame::kPosSendFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_StartGame::S_StartGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_StartGame)
}

void S_StartGame::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  worldsize_ = const_cast< ::gt_msg::Size*>(&::gt_msg::Size::default_instance());
}

S_StartGame::S_StartGame(const S_StartGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_StartGame)
}

void S_StartGame::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  resultcode_ = 0;
  worldsize_ = NULL;
  frame_ = 0;
  executedelayframe_ = 0;
  possendframe_ = 0;
}

S_StartGame::~S_StartGame() {
  // @@protoc_insertion_point(destructor:gt_msg.S_StartGame)
  SharedDtor();
}

void S_StartGame::SharedDtor() {
  if (this != default_instance_) {
    delete worldsize_;
  }
}

void S_StartGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_StartGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_StartGame_descriptor_;
}

const S_StartGame& S_StartGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_StartGame* S_StartGame::default_instance_ = NULL;

S_StartGame* S_StartGame::New(::google::protobuf::Arena* arena) const {
  S_StartGame* n = new S_StartGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_StartGame::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_StartGame)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_StartGame, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_StartGame*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(resultcode_, possendframe_);
  if (GetArenaNoVirtual() == NULL && worldsize_ != NULL) delete worldsize_;
  worldsize_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool S_StartGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_StartGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ResultCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resultcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_WorldSize;
        break;
      }

      // optional .gt_msg.Size WorldSize = 2;
      case 2: {
        if (tag == 18) {
         parse_WorldSize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_worldsize()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 3;
      case 3: {
        if (tag == 24) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ExecuteDelayFrame;
        break;
      }

      // optional int32 ExecuteDelayFrame = 4;
      case 4: {
        if (tag == 32) {
         parse_ExecuteDelayFrame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &executedelayframe_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_PosSendFrame;
        break;
      }

      // optional int32 PosSendFrame = 5;
      case 5: {
        if (tag == 40) {
         parse_PosSendFrame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &possendframe_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_StartGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_StartGame)
  return false;
#undef DO_
}

void S_StartGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_StartGame)
  // optional int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resultcode(), output);
  }

  // optional .gt_msg.Size WorldSize = 2;
  if (this->has_worldsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->worldsize_, output);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->frame(), output);
  }

  // optional int32 ExecuteDelayFrame = 4;
  if (this->executedelayframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->executedelayframe(), output);
  }

  // optional int32 PosSendFrame = 5;
  if (this->possendframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->possendframe(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_StartGame)
}

::google::protobuf::uint8* S_StartGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_StartGame)
  // optional int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resultcode(), target);
  }

  // optional .gt_msg.Size WorldSize = 2;
  if (this->has_worldsize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->worldsize_, false, target);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->frame(), target);
  }

  // optional int32 ExecuteDelayFrame = 4;
  if (this->executedelayframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->executedelayframe(), target);
  }

  // optional int32 PosSendFrame = 5;
  if (this->possendframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->possendframe(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_StartGame)
  return target;
}

int S_StartGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_StartGame)
  int total_size = 0;

  // optional int32 ResultCode = 1;
  if (this->resultcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resultcode());
  }

  // optional .gt_msg.Size WorldSize = 2;
  if (this->has_worldsize()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->worldsize_);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional int32 ExecuteDelayFrame = 4;
  if (this->executedelayframe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->executedelayframe());
  }

  // optional int32 PosSendFrame = 5;
  if (this->possendframe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->possendframe());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_StartGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_StartGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_StartGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_StartGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_StartGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_StartGame)
    MergeFrom(*source);
  }
}

void S_StartGame::MergeFrom(const S_StartGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_StartGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.resultcode() != 0) {
    set_resultcode(from.resultcode());
  }
  if (from.has_worldsize()) {
    mutable_worldsize()->::gt_msg::Size::MergeFrom(from.worldsize());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.executedelayframe() != 0) {
    set_executedelayframe(from.executedelayframe());
  }
  if (from.possendframe() != 0) {
    set_possendframe(from.possendframe());
  }
}

void S_StartGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_StartGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_StartGame::CopyFrom(const S_StartGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_StartGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_StartGame::IsInitialized() const {

  return true;
}

void S_StartGame::Swap(S_StartGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_StartGame::InternalSwap(S_StartGame* other) {
  std::swap(resultcode_, other->resultcode_);
  std::swap(worldsize_, other->worldsize_);
  std::swap(frame_, other->frame_);
  std::swap(executedelayframe_, other->executedelayframe_);
  std::swap(possendframe_, other->possendframe_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_StartGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_StartGame_descriptor_;
  metadata.reflection = S_StartGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_StartGame

// optional int32 ResultCode = 1;
void S_StartGame::clear_resultcode() {
  resultcode_ = 0;
}
 ::google::protobuf::int32 S_StartGame::resultcode() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.ResultCode)
  return resultcode_;
}
 void S_StartGame::set_resultcode(::google::protobuf::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_StartGame.ResultCode)
}

// optional .gt_msg.Size WorldSize = 2;
bool S_StartGame::has_worldsize() const {
  return !_is_default_instance_ && worldsize_ != NULL;
}
void S_StartGame::clear_worldsize() {
  if (GetArenaNoVirtual() == NULL && worldsize_ != NULL) delete worldsize_;
  worldsize_ = NULL;
}
const ::gt_msg::Size& S_StartGame::worldsize() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.WorldSize)
  return worldsize_ != NULL ? *worldsize_ : *default_instance_->worldsize_;
}
::gt_msg::Size* S_StartGame::mutable_worldsize() {
  
  if (worldsize_ == NULL) {
    worldsize_ = new ::gt_msg::Size;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_StartGame.WorldSize)
  return worldsize_;
}
::gt_msg::Size* S_StartGame::release_worldsize() {
  // @@protoc_insertion_point(field_release:gt_msg.S_StartGame.WorldSize)
  
  ::gt_msg::Size* temp = worldsize_;
  worldsize_ = NULL;
  return temp;
}
void S_StartGame::set_allocated_worldsize(::gt_msg::Size* worldsize) {
  delete worldsize_;
  worldsize_ = worldsize;
  if (worldsize) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_StartGame.WorldSize)
}

// optional int32 Frame = 3;
void S_StartGame::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_StartGame::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.Frame)
  return frame_;
}
 void S_StartGame::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_StartGame.Frame)
}

// optional int32 ExecuteDelayFrame = 4;
void S_StartGame::clear_executedelayframe() {
  executedelayframe_ = 0;
}
 ::google::protobuf::int32 S_StartGame::executedelayframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.ExecuteDelayFrame)
  return executedelayframe_;
}
 void S_StartGame::set_executedelayframe(::google::protobuf::int32 value) {
  
  executedelayframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_StartGame.ExecuteDelayFrame)
}

// optional int32 PosSendFrame = 5;
void S_StartGame::clear_possendframe() {
  possendframe_ = 0;
}
 ::google::protobuf::int32 S_StartGame::possendframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_StartGame.PosSendFrame)
  return possendframe_;
}
 void S_StartGame::set_possendframe(::google::protobuf::int32 value) {
  
  possendframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_StartGame.PosSendFrame)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_FrameSync::kFrameFieldNumber;
const int S_FrameSync::kMonstersFieldNumber;
const int S_FrameSync::kPlayersFieldNumber;
const int S_FrameSync::kBulletsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_FrameSync::S_FrameSync()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_FrameSync)
}

void S_FrameSync::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S_FrameSync::S_FrameSync(const S_FrameSync& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_FrameSync)
}

void S_FrameSync::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  frame_ = 0;
}

S_FrameSync::~S_FrameSync() {
  // @@protoc_insertion_point(destructor:gt_msg.S_FrameSync)
  SharedDtor();
}

void S_FrameSync::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_FrameSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_FrameSync::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_FrameSync_descriptor_;
}

const S_FrameSync& S_FrameSync::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_FrameSync* S_FrameSync::default_instance_ = NULL;

S_FrameSync* S_FrameSync::New(::google::protobuf::Arena* arena) const {
  S_FrameSync* n = new S_FrameSync;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_FrameSync::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_FrameSync)
  frame_ = 0;
  monsters_.Clear();
  players_.Clear();
  bullets_.Clear();
}

bool S_FrameSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_FrameSync)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Frame = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Monsters;
        break;
      }

      // repeated .gt_msg.TestPoint Monsters = 2;
      case 2: {
        if (tag == 18) {
         parse_Monsters:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Monsters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_monsters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Monsters;
        if (input->ExpectTag(26)) goto parse_loop_Players;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .gt_msg.TestPoint Players = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Players:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Players;
        if (input->ExpectTag(34)) goto parse_loop_Bullets;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .gt_msg.TestPoint Bullets = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Bullets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_bullets()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_Bullets;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_FrameSync)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_FrameSync)
  return false;
#undef DO_
}

void S_FrameSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_FrameSync)
  // optional int32 Frame = 1;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frame(), output);
  }

  // repeated .gt_msg.TestPoint Monsters = 2;
  for (unsigned int i = 0, n = this->monsters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->monsters(i), output);
  }

  // repeated .gt_msg.TestPoint Players = 3;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->players(i), output);
  }

  // repeated .gt_msg.TestPoint Bullets = 4;
  for (unsigned int i = 0, n = this->bullets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bullets(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_FrameSync)
}

::google::protobuf::uint8* S_FrameSync::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_FrameSync)
  // optional int32 Frame = 1;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frame(), target);
  }

  // repeated .gt_msg.TestPoint Monsters = 2;
  for (unsigned int i = 0, n = this->monsters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->monsters(i), false, target);
  }

  // repeated .gt_msg.TestPoint Players = 3;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->players(i), false, target);
  }

  // repeated .gt_msg.TestPoint Bullets = 4;
  for (unsigned int i = 0, n = this->bullets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->bullets(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_FrameSync)
  return target;
}

int S_FrameSync::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_FrameSync)
  int total_size = 0;

  // optional int32 Frame = 1;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // repeated .gt_msg.TestPoint Monsters = 2;
  total_size += 1 * this->monsters_size();
  for (int i = 0; i < this->monsters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->monsters(i));
  }

  // repeated .gt_msg.TestPoint Players = 3;
  total_size += 1 * this->players_size();
  for (int i = 0; i < this->players_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->players(i));
  }

  // repeated .gt_msg.TestPoint Bullets = 4;
  total_size += 1 * this->bullets_size();
  for (int i = 0; i < this->bullets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bullets(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_FrameSync::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_FrameSync)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_FrameSync* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_FrameSync>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_FrameSync)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_FrameSync)
    MergeFrom(*source);
  }
}

void S_FrameSync::MergeFrom(const S_FrameSync& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_FrameSync)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  monsters_.MergeFrom(from.monsters_);
  players_.MergeFrom(from.players_);
  bullets_.MergeFrom(from.bullets_);
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
}

void S_FrameSync::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_FrameSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_FrameSync::CopyFrom(const S_FrameSync& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_FrameSync)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_FrameSync::IsInitialized() const {

  return true;
}

void S_FrameSync::Swap(S_FrameSync* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_FrameSync::InternalSwap(S_FrameSync* other) {
  std::swap(frame_, other->frame_);
  monsters_.UnsafeArenaSwap(&other->monsters_);
  players_.UnsafeArenaSwap(&other->players_);
  bullets_.UnsafeArenaSwap(&other->bullets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_FrameSync::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_FrameSync_descriptor_;
  metadata.reflection = S_FrameSync_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_FrameSync

// optional int32 Frame = 1;
void S_FrameSync::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_FrameSync::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_FrameSync.Frame)
  return frame_;
}
 void S_FrameSync::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_FrameSync.Frame)
}

// repeated .gt_msg.TestPoint Monsters = 2;
int S_FrameSync::monsters_size() const {
  return monsters_.size();
}
void S_FrameSync::clear_monsters() {
  monsters_.Clear();
}
const ::gt_msg::TestPoint& S_FrameSync::monsters(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_FrameSync.Monsters)
  return monsters_.Get(index);
}
::gt_msg::TestPoint* S_FrameSync::mutable_monsters(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_FrameSync.Monsters)
  return monsters_.Mutable(index);
}
::gt_msg::TestPoint* S_FrameSync::add_monsters() {
  // @@protoc_insertion_point(field_add:gt_msg.S_FrameSync.Monsters)
  return monsters_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
S_FrameSync::mutable_monsters() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_FrameSync.Monsters)
  return &monsters_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
S_FrameSync::monsters() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_FrameSync.Monsters)
  return monsters_;
}

// repeated .gt_msg.TestPoint Players = 3;
int S_FrameSync::players_size() const {
  return players_.size();
}
void S_FrameSync::clear_players() {
  players_.Clear();
}
const ::gt_msg::TestPoint& S_FrameSync::players(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_FrameSync.Players)
  return players_.Get(index);
}
::gt_msg::TestPoint* S_FrameSync::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_FrameSync.Players)
  return players_.Mutable(index);
}
::gt_msg::TestPoint* S_FrameSync::add_players() {
  // @@protoc_insertion_point(field_add:gt_msg.S_FrameSync.Players)
  return players_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
S_FrameSync::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_FrameSync.Players)
  return &players_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
S_FrameSync::players() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_FrameSync.Players)
  return players_;
}

// repeated .gt_msg.TestPoint Bullets = 4;
int S_FrameSync::bullets_size() const {
  return bullets_.size();
}
void S_FrameSync::clear_bullets() {
  bullets_.Clear();
}
const ::gt_msg::TestPoint& S_FrameSync::bullets(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_FrameSync.Bullets)
  return bullets_.Get(index);
}
::gt_msg::TestPoint* S_FrameSync::mutable_bullets(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_FrameSync.Bullets)
  return bullets_.Mutable(index);
}
::gt_msg::TestPoint* S_FrameSync::add_bullets() {
  // @@protoc_insertion_point(field_add:gt_msg.S_FrameSync.Bullets)
  return bullets_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >*
S_FrameSync::mutable_bullets() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_FrameSync.Bullets)
  return &bullets_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::TestPoint >&
S_FrameSync::bullets() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_FrameSync.Bullets)
  return bullets_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_SpawnItem::kItemIdFieldNumber;
const int S_SpawnItem::kFrameFieldNumber;
const int S_SpawnItem::kTypeFieldNumber;
const int S_SpawnItem::kPosFieldNumber;
const int S_SpawnItem::kTeamIdFieldNumber;
const int S_SpawnItem::kScoreFieldNumber;
const int S_SpawnItem::kHPFieldNumber;
const int S_SpawnItem::kEXPFieldNumber;
const int S_SpawnItem::kLVFieldNumber;
const int S_SpawnItem::kDMGFieldNumber;
const int S_SpawnItem::kMaxExpFieldNumber;
const int S_SpawnItem::kMultipleFieldNumber;
const int S_SpawnItem::kMulListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_SpawnItem::S_SpawnItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_SpawnItem)
}

void S_SpawnItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pos_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

S_SpawnItem::S_SpawnItem(const S_SpawnItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_SpawnItem)
}

void S_SpawnItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  itemid_ = 0;
  frame_ = 0;
  type_ = 0;
  pos_ = NULL;
  teamid_ = 0;
  score_ = GOOGLE_LONGLONG(0);
  hp_ = 0;
  exp_ = 0;
  lv_ = 0;
  dmg_ = 0;
  maxexp_ = 0;
  multiple_ = 0;
}

S_SpawnItem::~S_SpawnItem() {
  // @@protoc_insertion_point(destructor:gt_msg.S_SpawnItem)
  SharedDtor();
}

void S_SpawnItem::SharedDtor() {
  if (this != default_instance_) {
    delete pos_;
  }
}

void S_SpawnItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_SpawnItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_SpawnItem_descriptor_;
}

const S_SpawnItem& S_SpawnItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_SpawnItem* S_SpawnItem::default_instance_ = NULL;

S_SpawnItem* S_SpawnItem::New(::google::protobuf::Arena* arena) const {
  S_SpawnItem* n = new S_SpawnItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_SpawnItem::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_SpawnItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_SpawnItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_SpawnItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, frame_);
  ZR_(type_, exp_);
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
  ZR_(lv_, multiple_);

#undef ZR_HELPER_
#undef ZR_

  mullist_.Clear();
}

bool S_SpawnItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_SpawnItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 2;
      case 2: {
        if (tag == 16) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Type;
        break;
      }

      // optional int32 Type = 3;
      case 3: {
        if (tag == 24) {
         parse_Type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Pos;
        break;
      }

      // optional .gt_msg.Vec3 Pos = 4;
      case 4: {
        if (tag == 34) {
         parse_Pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_TeamId;
        break;
      }

      // optional int32 TeamId = 5;
      case 5: {
        if (tag == 40) {
         parse_TeamId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &teamid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Score;
        break;
      }

      // optional int64 Score = 6;
      case 6: {
        if (tag == 48) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &score_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_HP;
        break;
      }

      // optional int32 HP = 7;
      case 7: {
        if (tag == 56) {
         parse_HP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_EXP;
        break;
      }

      // optional int32 EXP = 8;
      case 8: {
        if (tag == 64) {
         parse_EXP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_LV;
        break;
      }

      // optional int32 LV = 9;
      case 9: {
        if (tag == 72) {
         parse_LV:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_DMG;
        break;
      }

      // optional int32 DMG = 10;
      case 10: {
        if (tag == 80) {
         parse_DMG:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dmg_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_MaxExp;
        break;
      }

      // optional int32 MaxExp = 11;
      case 11: {
        if (tag == 88) {
         parse_MaxExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_Multiple;
        break;
      }

      // optional int32 Multiple = 12;
      case 12: {
        if (tag == 96) {
         parse_Multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiple_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_MulList;
        break;
      }

      // repeated int32 MulList = 13;
      case 13: {
        if (tag == 106) {
         parse_MulList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mullist())));
        } else if (tag == 104) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106, input, this->mutable_mullist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_SpawnItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_SpawnItem)
  return false;
#undef DO_
}

void S_SpawnItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_SpawnItem)
  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frame(), output);
  }

  // optional int32 Type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional .gt_msg.Vec3 Pos = 4;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pos_, output);
  }

  // optional int32 TeamId = 5;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->teamid(), output);
  }

  // optional int64 Score = 6;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->score(), output);
  }

  // optional int32 HP = 7;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hp(), output);
  }

  // optional int32 EXP = 8;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->exp(), output);
  }

  // optional int32 LV = 9;
  if (this->lv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->lv(), output);
  }

  // optional int32 DMG = 10;
  if (this->dmg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->dmg(), output);
  }

  // optional int32 MaxExp = 11;
  if (this->maxexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->maxexp(), output);
  }

  // optional int32 Multiple = 12;
  if (this->multiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->multiple(), output);
  }

  // repeated int32 MulList = 13;
  if (this->mullist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mullist_cached_byte_size_);
  }
  for (int i = 0; i < this->mullist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->mullist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_SpawnItem)
}

::google::protobuf::uint8* S_SpawnItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_SpawnItem)
  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->frame(), target);
  }

  // optional int32 Type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional .gt_msg.Vec3 Pos = 4;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pos_, false, target);
  }

  // optional int32 TeamId = 5;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->teamid(), target);
  }

  // optional int64 Score = 6;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->score(), target);
  }

  // optional int32 HP = 7;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->hp(), target);
  }

  // optional int32 EXP = 8;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->exp(), target);
  }

  // optional int32 LV = 9;
  if (this->lv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->lv(), target);
  }

  // optional int32 DMG = 10;
  if (this->dmg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->dmg(), target);
  }

  // optional int32 MaxExp = 11;
  if (this->maxexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->maxexp(), target);
  }

  // optional int32 Multiple = 12;
  if (this->multiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->multiple(), target);
  }

  // repeated int32 MulList = 13;
  if (this->mullist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _mullist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->mullist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->mullist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_SpawnItem)
  return target;
}

int S_SpawnItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_SpawnItem)
  int total_size = 0;

  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemid());
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional int32 Type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional .gt_msg.Vec3 Pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // optional int32 TeamId = 5;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->teamid());
  }

  // optional int64 Score = 6;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->score());
  }

  // optional int32 HP = 7;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // optional int32 EXP = 8;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // optional int32 LV = 9;
  if (this->lv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lv());
  }

  // optional int32 DMG = 10;
  if (this->dmg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dmg());
  }

  // optional int32 MaxExp = 11;
  if (this->maxexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxexp());
  }

  // optional int32 Multiple = 12;
  if (this->multiple() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->multiple());
  }

  // repeated int32 MulList = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->mullist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->mullist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mullist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_SpawnItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_SpawnItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_SpawnItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_SpawnItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_SpawnItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_SpawnItem)
    MergeFrom(*source);
  }
}

void S_SpawnItem::MergeFrom(const S_SpawnItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_SpawnItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  mullist_.MergeFrom(from.mullist_);
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.has_pos()) {
    mutable_pos()->::gt_msg::Vec3::MergeFrom(from.pos());
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.lv() != 0) {
    set_lv(from.lv());
  }
  if (from.dmg() != 0) {
    set_dmg(from.dmg());
  }
  if (from.maxexp() != 0) {
    set_maxexp(from.maxexp());
  }
  if (from.multiple() != 0) {
    set_multiple(from.multiple());
  }
}

void S_SpawnItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_SpawnItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_SpawnItem::CopyFrom(const S_SpawnItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_SpawnItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_SpawnItem::IsInitialized() const {

  return true;
}

void S_SpawnItem::Swap(S_SpawnItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_SpawnItem::InternalSwap(S_SpawnItem* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(frame_, other->frame_);
  std::swap(type_, other->type_);
  std::swap(pos_, other->pos_);
  std::swap(teamid_, other->teamid_);
  std::swap(score_, other->score_);
  std::swap(hp_, other->hp_);
  std::swap(exp_, other->exp_);
  std::swap(lv_, other->lv_);
  std::swap(dmg_, other->dmg_);
  std::swap(maxexp_, other->maxexp_);
  std::swap(multiple_, other->multiple_);
  mullist_.UnsafeArenaSwap(&other->mullist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_SpawnItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_SpawnItem_descriptor_;
  metadata.reflection = S_SpawnItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_SpawnItem

// optional int32 ItemId = 1;
void S_SpawnItem::clear_itemid() {
  itemid_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::itemid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.ItemId)
  return itemid_;
}
 void S_SpawnItem::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.ItemId)
}

// optional int32 Frame = 2;
void S_SpawnItem::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Frame)
  return frame_;
}
 void S_SpawnItem::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.Frame)
}

// optional int32 Type = 3;
void S_SpawnItem::clear_type() {
  type_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Type)
  return type_;
}
 void S_SpawnItem::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.Type)
}

// optional .gt_msg.Vec3 Pos = 4;
bool S_SpawnItem::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
void S_SpawnItem::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::gt_msg::Vec3& S_SpawnItem::pos() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
::gt_msg::Vec3* S_SpawnItem::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_SpawnItem.Pos)
  return pos_;
}
::gt_msg::Vec3* S_SpawnItem::release_pos() {
  // @@protoc_insertion_point(field_release:gt_msg.S_SpawnItem.Pos)
  
  ::gt_msg::Vec3* temp = pos_;
  pos_ = NULL;
  return temp;
}
void S_SpawnItem::set_allocated_pos(::gt_msg::Vec3* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_SpawnItem.Pos)
}

// optional int32 TeamId = 5;
void S_SpawnItem::clear_teamid() {
  teamid_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::teamid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.TeamId)
  return teamid_;
}
 void S_SpawnItem::set_teamid(::google::protobuf::int32 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.TeamId)
}

// optional int64 Score = 6;
void S_SpawnItem::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 S_SpawnItem::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Score)
  return score_;
}
 void S_SpawnItem::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.Score)
}

// optional int32 HP = 7;
void S_SpawnItem::clear_hp() {
  hp_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::hp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.HP)
  return hp_;
}
 void S_SpawnItem::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.HP)
}

// optional int32 EXP = 8;
void S_SpawnItem::clear_exp() {
  exp_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::exp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.EXP)
  return exp_;
}
 void S_SpawnItem::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.EXP)
}

// optional int32 LV = 9;
void S_SpawnItem::clear_lv() {
  lv_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::lv() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.LV)
  return lv_;
}
 void S_SpawnItem::set_lv(::google::protobuf::int32 value) {
  
  lv_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.LV)
}

// optional int32 DMG = 10;
void S_SpawnItem::clear_dmg() {
  dmg_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::dmg() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.DMG)
  return dmg_;
}
 void S_SpawnItem::set_dmg(::google::protobuf::int32 value) {
  
  dmg_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.DMG)
}

// optional int32 MaxExp = 11;
void S_SpawnItem::clear_maxexp() {
  maxexp_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::maxexp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.MaxExp)
  return maxexp_;
}
 void S_SpawnItem::set_maxexp(::google::protobuf::int32 value) {
  
  maxexp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.MaxExp)
}

// optional int32 Multiple = 12;
void S_SpawnItem::clear_multiple() {
  multiple_ = 0;
}
 ::google::protobuf::int32 S_SpawnItem::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.Multiple)
  return multiple_;
}
 void S_SpawnItem::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.Multiple)
}

// repeated int32 MulList = 13;
int S_SpawnItem::mullist_size() const {
  return mullist_.size();
}
void S_SpawnItem::clear_mullist() {
  mullist_.Clear();
}
 ::google::protobuf::int32 S_SpawnItem::mullist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_SpawnItem.MulList)
  return mullist_.Get(index);
}
 void S_SpawnItem::set_mullist(int index, ::google::protobuf::int32 value) {
  mullist_.Set(index, value);
  // @@protoc_insertion_point(field_set:gt_msg.S_SpawnItem.MulList)
}
 void S_SpawnItem::add_mullist(::google::protobuf::int32 value) {
  mullist_.Add(value);
  // @@protoc_insertion_point(field_add:gt_msg.S_SpawnItem.MulList)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
S_SpawnItem::mullist() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_SpawnItem.MulList)
  return mullist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
S_SpawnItem::mutable_mullist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_SpawnItem.MulList)
  return &mullist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int R_ChangeMultiple::kValueFieldNumber;
const int R_ChangeMultiple::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

R_ChangeMultiple::R_ChangeMultiple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.R_ChangeMultiple)
}

void R_ChangeMultiple::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

R_ChangeMultiple::R_ChangeMultiple(const R_ChangeMultiple& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.R_ChangeMultiple)
}

void R_ChangeMultiple::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_ = 0;
  frame_ = 0;
}

R_ChangeMultiple::~R_ChangeMultiple() {
  // @@protoc_insertion_point(destructor:gt_msg.R_ChangeMultiple)
  SharedDtor();
}

void R_ChangeMultiple::SharedDtor() {
  if (this != default_instance_) {
  }
}

void R_ChangeMultiple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* R_ChangeMultiple::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return R_ChangeMultiple_descriptor_;
}

const R_ChangeMultiple& R_ChangeMultiple::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

R_ChangeMultiple* R_ChangeMultiple::default_instance_ = NULL;

R_ChangeMultiple* R_ChangeMultiple::New(::google::protobuf::Arena* arena) const {
  R_ChangeMultiple* n = new R_ChangeMultiple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void R_ChangeMultiple::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.R_ChangeMultiple)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(R_ChangeMultiple, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<R_ChangeMultiple*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(value_, frame_);

#undef ZR_HELPER_
#undef ZR_

}

bool R_ChangeMultiple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.R_ChangeMultiple)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Value = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 2;
      case 2: {
        if (tag == 16) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.R_ChangeMultiple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.R_ChangeMultiple)
  return false;
#undef DO_
}

void R_ChangeMultiple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.R_ChangeMultiple)
  // optional int32 Value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frame(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.R_ChangeMultiple)
}

::google::protobuf::uint8* R_ChangeMultiple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.R_ChangeMultiple)
  // optional int32 Value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->frame(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.R_ChangeMultiple)
  return target;
}

int R_ChangeMultiple::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.R_ChangeMultiple)
  int total_size = 0;

  // optional int32 Value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void R_ChangeMultiple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.R_ChangeMultiple)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const R_ChangeMultiple* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const R_ChangeMultiple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.R_ChangeMultiple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.R_ChangeMultiple)
    MergeFrom(*source);
  }
}

void R_ChangeMultiple::MergeFrom(const R_ChangeMultiple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.R_ChangeMultiple)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
}

void R_ChangeMultiple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.R_ChangeMultiple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void R_ChangeMultiple::CopyFrom(const R_ChangeMultiple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.R_ChangeMultiple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool R_ChangeMultiple::IsInitialized() const {

  return true;
}

void R_ChangeMultiple::Swap(R_ChangeMultiple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void R_ChangeMultiple::InternalSwap(R_ChangeMultiple* other) {
  std::swap(value_, other->value_);
  std::swap(frame_, other->frame_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata R_ChangeMultiple::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = R_ChangeMultiple_descriptor_;
  metadata.reflection = R_ChangeMultiple_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// R_ChangeMultiple

// optional int32 Value = 1;
void R_ChangeMultiple::clear_value() {
  value_ = 0;
}
 ::google::protobuf::int32 R_ChangeMultiple::value() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_ChangeMultiple.Value)
  return value_;
}
 void R_ChangeMultiple::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_ChangeMultiple.Value)
}

// optional int32 Frame = 2;
void R_ChangeMultiple::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 R_ChangeMultiple::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_ChangeMultiple.Frame)
  return frame_;
}
 void R_ChangeMultiple::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_ChangeMultiple.Frame)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_ChangeMultiple::kItemIdFieldNumber;
const int S_ChangeMultiple::kValueFieldNumber;
const int S_ChangeMultiple::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_ChangeMultiple::S_ChangeMultiple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_ChangeMultiple)
}

void S_ChangeMultiple::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S_ChangeMultiple::S_ChangeMultiple(const S_ChangeMultiple& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_ChangeMultiple)
}

void S_ChangeMultiple::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  itemid_ = 0;
  value_ = 0;
  frame_ = 0;
}

S_ChangeMultiple::~S_ChangeMultiple() {
  // @@protoc_insertion_point(destructor:gt_msg.S_ChangeMultiple)
  SharedDtor();
}

void S_ChangeMultiple::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_ChangeMultiple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_ChangeMultiple::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_ChangeMultiple_descriptor_;
}

const S_ChangeMultiple& S_ChangeMultiple::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_ChangeMultiple* S_ChangeMultiple::default_instance_ = NULL;

S_ChangeMultiple* S_ChangeMultiple::New(::google::protobuf::Arena* arena) const {
  S_ChangeMultiple* n = new S_ChangeMultiple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_ChangeMultiple::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_ChangeMultiple)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_ChangeMultiple, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_ChangeMultiple*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, frame_);

#undef ZR_HELPER_
#undef ZR_

}

bool S_ChangeMultiple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_ChangeMultiple)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Value;
        break;
      }

      // optional int32 Value = 2;
      case 2: {
        if (tag == 16) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 3;
      case 3: {
        if (tag == 24) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_ChangeMultiple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_ChangeMultiple)
  return false;
#undef DO_
}

void S_ChangeMultiple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_ChangeMultiple)
  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 Value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->frame(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_ChangeMultiple)
}

::google::protobuf::uint8* S_ChangeMultiple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_ChangeMultiple)
  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 Value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->frame(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_ChangeMultiple)
  return target;
}

int S_ChangeMultiple::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_ChangeMultiple)
  int total_size = 0;

  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemid());
  }

  // optional int32 Value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_ChangeMultiple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_ChangeMultiple)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_ChangeMultiple* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_ChangeMultiple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_ChangeMultiple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_ChangeMultiple)
    MergeFrom(*source);
  }
}

void S_ChangeMultiple::MergeFrom(const S_ChangeMultiple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_ChangeMultiple)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
}

void S_ChangeMultiple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_ChangeMultiple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_ChangeMultiple::CopyFrom(const S_ChangeMultiple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_ChangeMultiple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ChangeMultiple::IsInitialized() const {

  return true;
}

void S_ChangeMultiple::Swap(S_ChangeMultiple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_ChangeMultiple::InternalSwap(S_ChangeMultiple* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(value_, other->value_);
  std::swap(frame_, other->frame_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_ChangeMultiple::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_ChangeMultiple_descriptor_;
  metadata.reflection = S_ChangeMultiple_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_ChangeMultiple

// optional int32 ItemId = 1;
void S_ChangeMultiple::clear_itemid() {
  itemid_ = 0;
}
 ::google::protobuf::int32 S_ChangeMultiple::itemid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ChangeMultiple.ItemId)
  return itemid_;
}
 void S_ChangeMultiple::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ChangeMultiple.ItemId)
}

// optional int32 Value = 2;
void S_ChangeMultiple::clear_value() {
  value_ = 0;
}
 ::google::protobuf::int32 S_ChangeMultiple::value() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ChangeMultiple.Value)
  return value_;
}
 void S_ChangeMultiple::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ChangeMultiple.Value)
}

// optional int32 Frame = 3;
void S_ChangeMultiple::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_ChangeMultiple::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ChangeMultiple.Frame)
  return frame_;
}
 void S_ChangeMultiple::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ChangeMultiple.Frame)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_KillItem::kDeadIdFieldNumber;
const int S_KillItem::kFrameFieldNumber;
const int S_KillItem::kKillerIdFieldNumber;
const int S_KillItem::kKillerExperienceFieldNumber;
const int S_KillItem::kReBirthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_KillItem::S_KillItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_KillItem)
}

void S_KillItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S_KillItem::S_KillItem(const S_KillItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_KillItem)
}

void S_KillItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  deadid_ = 0;
  frame_ = 0;
  killerid_ = 0;
  killerexperience_ = 0;
  rebirth_ = 0;
}

S_KillItem::~S_KillItem() {
  // @@protoc_insertion_point(destructor:gt_msg.S_KillItem)
  SharedDtor();
}

void S_KillItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_KillItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_KillItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_KillItem_descriptor_;
}

const S_KillItem& S_KillItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_KillItem* S_KillItem::default_instance_ = NULL;

S_KillItem* S_KillItem::New(::google::protobuf::Arena* arena) const {
  S_KillItem* n = new S_KillItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_KillItem::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_KillItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_KillItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_KillItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(deadid_, rebirth_);

#undef ZR_HELPER_
#undef ZR_

}

bool S_KillItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_KillItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 DeadId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deadid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 2;
      case 2: {
        if (tag == 16) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_KillerId;
        break;
      }

      // optional int32 KillerId = 3;
      case 3: {
        if (tag == 24) {
         parse_KillerId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_KillerExperience;
        break;
      }

      // optional int32 KillerExperience = 4;
      case 4: {
        if (tag == 32) {
         parse_KillerExperience:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killerexperience_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ReBirth;
        break;
      }

      // optional int32 ReBirth = 5;
      case 5: {
        if (tag == 40) {
         parse_ReBirth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rebirth_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_KillItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_KillItem)
  return false;
#undef DO_
}

void S_KillItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_KillItem)
  // optional int32 DeadId = 1;
  if (this->deadid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->deadid(), output);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frame(), output);
  }

  // optional int32 KillerId = 3;
  if (this->killerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->killerid(), output);
  }

  // optional int32 KillerExperience = 4;
  if (this->killerexperience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->killerexperience(), output);
  }

  // optional int32 ReBirth = 5;
  if (this->rebirth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rebirth(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_KillItem)
}

::google::protobuf::uint8* S_KillItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_KillItem)
  // optional int32 DeadId = 1;
  if (this->deadid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->deadid(), target);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->frame(), target);
  }

  // optional int32 KillerId = 3;
  if (this->killerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->killerid(), target);
  }

  // optional int32 KillerExperience = 4;
  if (this->killerexperience() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->killerexperience(), target);
  }

  // optional int32 ReBirth = 5;
  if (this->rebirth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rebirth(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_KillItem)
  return target;
}

int S_KillItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_KillItem)
  int total_size = 0;

  // optional int32 DeadId = 1;
  if (this->deadid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deadid());
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional int32 KillerId = 3;
  if (this->killerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->killerid());
  }

  // optional int32 KillerExperience = 4;
  if (this->killerexperience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->killerexperience());
  }

  // optional int32 ReBirth = 5;
  if (this->rebirth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rebirth());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_KillItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_KillItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_KillItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_KillItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_KillItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_KillItem)
    MergeFrom(*source);
  }
}

void S_KillItem::MergeFrom(const S_KillItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_KillItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.deadid() != 0) {
    set_deadid(from.deadid());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.killerid() != 0) {
    set_killerid(from.killerid());
  }
  if (from.killerexperience() != 0) {
    set_killerexperience(from.killerexperience());
  }
  if (from.rebirth() != 0) {
    set_rebirth(from.rebirth());
  }
}

void S_KillItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_KillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_KillItem::CopyFrom(const S_KillItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_KillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_KillItem::IsInitialized() const {

  return true;
}

void S_KillItem::Swap(S_KillItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_KillItem::InternalSwap(S_KillItem* other) {
  std::swap(deadid_, other->deadid_);
  std::swap(frame_, other->frame_);
  std::swap(killerid_, other->killerid_);
  std::swap(killerexperience_, other->killerexperience_);
  std::swap(rebirth_, other->rebirth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_KillItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_KillItem_descriptor_;
  metadata.reflection = S_KillItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_KillItem

// optional int32 DeadId = 1;
void S_KillItem::clear_deadid() {
  deadid_ = 0;
}
 ::google::protobuf::int32 S_KillItem::deadid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.DeadId)
  return deadid_;
}
 void S_KillItem::set_deadid(::google::protobuf::int32 value) {
  
  deadid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.DeadId)
}

// optional int32 Frame = 2;
void S_KillItem::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_KillItem::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.Frame)
  return frame_;
}
 void S_KillItem::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.Frame)
}

// optional int32 KillerId = 3;
void S_KillItem::clear_killerid() {
  killerid_ = 0;
}
 ::google::protobuf::int32 S_KillItem::killerid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.KillerId)
  return killerid_;
}
 void S_KillItem::set_killerid(::google::protobuf::int32 value) {
  
  killerid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.KillerId)
}

// optional int32 KillerExperience = 4;
void S_KillItem::clear_killerexperience() {
  killerexperience_ = 0;
}
 ::google::protobuf::int32 S_KillItem::killerexperience() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.KillerExperience)
  return killerexperience_;
}
 void S_KillItem::set_killerexperience(::google::protobuf::int32 value) {
  
  killerexperience_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.KillerExperience)
}

// optional int32 ReBirth = 5;
void S_KillItem::clear_rebirth() {
  rebirth_ = 0;
}
 ::google::protobuf::int32 S_KillItem::rebirth() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_KillItem.ReBirth)
  return rebirth_;
}
 void S_KillItem::set_rebirth(::google::protobuf::int32 value) {
  
  rebirth_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_KillItem.ReBirth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int R_Move::kDataFieldNumber;
const int R_Move::kCellIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

R_Move::R_Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.R_Move)
}

void R_Move::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::gt_msg::SynPos*>(&::gt_msg::SynPos::default_instance());
}

R_Move::R_Move(const R_Move& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.R_Move)
}

void R_Move::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  data_ = NULL;
  cellindex_ = 0;
}

R_Move::~R_Move() {
  // @@protoc_insertion_point(destructor:gt_msg.R_Move)
  SharedDtor();
}

void R_Move::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void R_Move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* R_Move::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return R_Move_descriptor_;
}

const R_Move& R_Move::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

R_Move* R_Move::default_instance_ = NULL;

R_Move* R_Move::New(::google::protobuf::Arena* arena) const {
  R_Move* n = new R_Move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void R_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.R_Move)
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  cellindex_ = 0;
}

bool R_Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.R_Move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gt_msg.SynPos Data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CellIndex;
        break;
      }

      // optional int32 CellIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_CellIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cellindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.R_Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.R_Move)
  return false;
#undef DO_
}

void R_Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.R_Move)
  // optional .gt_msg.SynPos Data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // optional int32 CellIndex = 2;
  if (this->cellindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cellindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.R_Move)
}

::google::protobuf::uint8* R_Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.R_Move)
  // optional .gt_msg.SynPos Data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  // optional int32 CellIndex = 2;
  if (this->cellindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cellindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.R_Move)
  return target;
}

int R_Move::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.R_Move)
  int total_size = 0;

  // optional .gt_msg.SynPos Data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // optional int32 CellIndex = 2;
  if (this->cellindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cellindex());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void R_Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.R_Move)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const R_Move* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const R_Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.R_Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.R_Move)
    MergeFrom(*source);
  }
}

void R_Move::MergeFrom(const R_Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.R_Move)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_data()) {
    mutable_data()->::gt_msg::SynPos::MergeFrom(from.data());
  }
  if (from.cellindex() != 0) {
    set_cellindex(from.cellindex());
  }
}

void R_Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.R_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void R_Move::CopyFrom(const R_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.R_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool R_Move::IsInitialized() const {

  return true;
}

void R_Move::Swap(R_Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void R_Move::InternalSwap(R_Move* other) {
  std::swap(data_, other->data_);
  std::swap(cellindex_, other->cellindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata R_Move::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = R_Move_descriptor_;
  metadata.reflection = R_Move_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// R_Move

// optional .gt_msg.SynPos Data = 1;
bool R_Move::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void R_Move::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::gt_msg::SynPos& R_Move::data() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Move.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::gt_msg::SynPos* R_Move::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::gt_msg::SynPos;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.R_Move.Data)
  return data_;
}
::gt_msg::SynPos* R_Move::release_data() {
  // @@protoc_insertion_point(field_release:gt_msg.R_Move.Data)
  
  ::gt_msg::SynPos* temp = data_;
  data_ = NULL;
  return temp;
}
void R_Move::set_allocated_data(::gt_msg::SynPos* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.R_Move.Data)
}

// optional int32 CellIndex = 2;
void R_Move::clear_cellindex() {
  cellindex_ = 0;
}
 ::google::protobuf::int32 R_Move::cellindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Move.CellIndex)
  return cellindex_;
}
 void R_Move::set_cellindex(::google::protobuf::int32 value) {
  
  cellindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Move.CellIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_Move::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_Move::S_Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_Move)
}

void S_Move::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::gt_msg::SynPos*>(&::gt_msg::SynPos::default_instance());
}

S_Move::S_Move(const S_Move& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_Move)
}

void S_Move::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  data_ = NULL;
}

S_Move::~S_Move() {
  // @@protoc_insertion_point(destructor:gt_msg.S_Move)
  SharedDtor();
}

void S_Move::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void S_Move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_Move::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_Move_descriptor_;
}

const S_Move& S_Move::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_Move* S_Move::default_instance_ = NULL;

S_Move* S_Move::New(::google::protobuf::Arena* arena) const {
  S_Move* n = new S_Move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_Move)
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}

bool S_Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_Move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gt_msg.SynPos Data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_Move)
  return false;
#undef DO_
}

void S_Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_Move)
  // optional .gt_msg.SynPos Data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_Move)
}

::google::protobuf::uint8* S_Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_Move)
  // optional .gt_msg.SynPos Data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_Move)
  return target;
}

int S_Move::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_Move)
  int total_size = 0;

  // optional .gt_msg.SynPos Data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_Move)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_Move* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_Move)
    MergeFrom(*source);
  }
}

void S_Move::MergeFrom(const S_Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_Move)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_data()) {
    mutable_data()->::gt_msg::SynPos::MergeFrom(from.data());
  }
}

void S_Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_Move::CopyFrom(const S_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Move::IsInitialized() const {

  return true;
}

void S_Move::Swap(S_Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_Move::InternalSwap(S_Move* other) {
  std::swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_Move::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_Move_descriptor_;
  metadata.reflection = S_Move_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_Move

// optional .gt_msg.SynPos Data = 1;
bool S_Move::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void S_Move::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::gt_msg::SynPos& S_Move::data() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Move.Data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::gt_msg::SynPos* S_Move::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::gt_msg::SynPos;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_Move.Data)
  return data_;
}
::gt_msg::SynPos* S_Move::release_data() {
  // @@protoc_insertion_point(field_release:gt_msg.S_Move.Data)
  
  ::gt_msg::SynPos* temp = data_;
  data_ = NULL;
  return temp;
}
void S_Move::set_allocated_data(::gt_msg::SynPos* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_Move.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int R_Attack::kAttackerIdFieldNumber;
const int R_Attack::kVictimIdFieldNumber;
const int R_Attack::kFrameFieldNumber;
const int R_Attack::kSkillIdFieldNumber;
const int R_Attack::kSkillLevelFieldNumber;
const int R_Attack::kDirectionFieldNumber;
const int R_Attack::kMultipleFieldNumber;
const int R_Attack::kPositionFieldNumber;
const int R_Attack::kCellIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

R_Attack::R_Attack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.R_Attack)
}

void R_Attack::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  direction_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
  position_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

R_Attack::R_Attack(const R_Attack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.R_Attack)
}

void R_Attack::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  attackerid_ = 0;
  victimid_ = 0;
  frame_ = 0;
  skillid_ = 0;
  skilllevel_ = 0;
  direction_ = NULL;
  multiple_ = 0;
  position_ = NULL;
  cellindex_ = 0;
}

R_Attack::~R_Attack() {
  // @@protoc_insertion_point(destructor:gt_msg.R_Attack)
  SharedDtor();
}

void R_Attack::SharedDtor() {
  if (this != default_instance_) {
    delete direction_;
    delete position_;
  }
}

void R_Attack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* R_Attack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return R_Attack_descriptor_;
}

const R_Attack& R_Attack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

R_Attack* R_Attack::default_instance_ = NULL;

R_Attack* R_Attack::New(::google::protobuf::Arena* arena) const {
  R_Attack* n = new R_Attack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void R_Attack::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.R_Attack)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(R_Attack, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<R_Attack*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(attackerid_, skillid_);
  ZR_(skilllevel_, multiple_);
  if (GetArenaNoVirtual() == NULL && direction_ != NULL) delete direction_;
  direction_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
  cellindex_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool R_Attack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.R_Attack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 AttackerId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attackerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_VictimId;
        break;
      }

      // optional int32 VictimId = 2;
      case 2: {
        if (tag == 16) {
         parse_VictimId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victimid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 3;
      case 3: {
        if (tag == 24) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_SkillId;
        break;
      }

      // optional int32 SkillId = 4;
      case 4: {
        if (tag == 32) {
         parse_SkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SkillLevel;
        break;
      }

      // optional int32 SkillLevel = 5;
      case 5: {
        if (tag == 40) {
         parse_SkillLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skilllevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Direction;
        break;
      }

      // optional .gt_msg.Vec3 Direction = 6;
      case 6: {
        if (tag == 50) {
         parse_Direction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Multiple;
        break;
      }

      // optional int32 Multiple = 7;
      case 7: {
        if (tag == 56) {
         parse_Multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiple_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Position;
        break;
      }

      // optional .gt_msg.Vec3 Position = 8;
      case 8: {
        if (tag == 66) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_CellIndex;
        break;
      }

      // optional int32 CellIndex = 9;
      case 9: {
        if (tag == 72) {
         parse_CellIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cellindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.R_Attack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.R_Attack)
  return false;
#undef DO_
}

void R_Attack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.R_Attack)
  // optional int32 AttackerId = 1;
  if (this->attackerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attackerid(), output);
  }

  // optional int32 VictimId = 2;
  if (this->victimid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->victimid(), output);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->frame(), output);
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skillid(), output);
  }

  // optional int32 SkillLevel = 5;
  if (this->skilllevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skilllevel(), output);
  }

  // optional .gt_msg.Vec3 Direction = 6;
  if (this->has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->direction_, output);
  }

  // optional int32 Multiple = 7;
  if (this->multiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->multiple(), output);
  }

  // optional .gt_msg.Vec3 Position = 8;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->position_, output);
  }

  // optional int32 CellIndex = 9;
  if (this->cellindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->cellindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.R_Attack)
}

::google::protobuf::uint8* R_Attack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.R_Attack)
  // optional int32 AttackerId = 1;
  if (this->attackerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attackerid(), target);
  }

  // optional int32 VictimId = 2;
  if (this->victimid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->victimid(), target);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->frame(), target);
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skillid(), target);
  }

  // optional int32 SkillLevel = 5;
  if (this->skilllevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skilllevel(), target);
  }

  // optional .gt_msg.Vec3 Direction = 6;
  if (this->has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->direction_, false, target);
  }

  // optional int32 Multiple = 7;
  if (this->multiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->multiple(), target);
  }

  // optional .gt_msg.Vec3 Position = 8;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->position_, false, target);
  }

  // optional int32 CellIndex = 9;
  if (this->cellindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->cellindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.R_Attack)
  return target;
}

int R_Attack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.R_Attack)
  int total_size = 0;

  // optional int32 AttackerId = 1;
  if (this->attackerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attackerid());
  }

  // optional int32 VictimId = 2;
  if (this->victimid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->victimid());
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skillid());
  }

  // optional int32 SkillLevel = 5;
  if (this->skilllevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skilllevel());
  }

  // optional .gt_msg.Vec3 Direction = 6;
  if (this->has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->direction_);
  }

  // optional int32 Multiple = 7;
  if (this->multiple() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->multiple());
  }

  // optional .gt_msg.Vec3 Position = 8;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // optional int32 CellIndex = 9;
  if (this->cellindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cellindex());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void R_Attack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.R_Attack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const R_Attack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const R_Attack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.R_Attack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.R_Attack)
    MergeFrom(*source);
  }
}

void R_Attack::MergeFrom(const R_Attack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.R_Attack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.attackerid() != 0) {
    set_attackerid(from.attackerid());
  }
  if (from.victimid() != 0) {
    set_victimid(from.victimid());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.skilllevel() != 0) {
    set_skilllevel(from.skilllevel());
  }
  if (from.has_direction()) {
    mutable_direction()->::gt_msg::Vec3::MergeFrom(from.direction());
  }
  if (from.multiple() != 0) {
    set_multiple(from.multiple());
  }
  if (from.has_position()) {
    mutable_position()->::gt_msg::Vec3::MergeFrom(from.position());
  }
  if (from.cellindex() != 0) {
    set_cellindex(from.cellindex());
  }
}

void R_Attack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.R_Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void R_Attack::CopyFrom(const R_Attack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.R_Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool R_Attack::IsInitialized() const {

  return true;
}

void R_Attack::Swap(R_Attack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void R_Attack::InternalSwap(R_Attack* other) {
  std::swap(attackerid_, other->attackerid_);
  std::swap(victimid_, other->victimid_);
  std::swap(frame_, other->frame_);
  std::swap(skillid_, other->skillid_);
  std::swap(skilllevel_, other->skilllevel_);
  std::swap(direction_, other->direction_);
  std::swap(multiple_, other->multiple_);
  std::swap(position_, other->position_);
  std::swap(cellindex_, other->cellindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata R_Attack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = R_Attack_descriptor_;
  metadata.reflection = R_Attack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// R_Attack

// optional int32 AttackerId = 1;
void R_Attack::clear_attackerid() {
  attackerid_ = 0;
}
 ::google::protobuf::int32 R_Attack::attackerid() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.AttackerId)
  return attackerid_;
}
 void R_Attack::set_attackerid(::google::protobuf::int32 value) {
  
  attackerid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.AttackerId)
}

// optional int32 VictimId = 2;
void R_Attack::clear_victimid() {
  victimid_ = 0;
}
 ::google::protobuf::int32 R_Attack::victimid() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.VictimId)
  return victimid_;
}
 void R_Attack::set_victimid(::google::protobuf::int32 value) {
  
  victimid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.VictimId)
}

// optional int32 Frame = 3;
void R_Attack::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 R_Attack::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.Frame)
  return frame_;
}
 void R_Attack::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.Frame)
}

// optional int32 SkillId = 4;
void R_Attack::clear_skillid() {
  skillid_ = 0;
}
 ::google::protobuf::int32 R_Attack::skillid() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.SkillId)
  return skillid_;
}
 void R_Attack::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.SkillId)
}

// optional int32 SkillLevel = 5;
void R_Attack::clear_skilllevel() {
  skilllevel_ = 0;
}
 ::google::protobuf::int32 R_Attack::skilllevel() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.SkillLevel)
  return skilllevel_;
}
 void R_Attack::set_skilllevel(::google::protobuf::int32 value) {
  
  skilllevel_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.SkillLevel)
}

// optional .gt_msg.Vec3 Direction = 6;
bool R_Attack::has_direction() const {
  return !_is_default_instance_ && direction_ != NULL;
}
void R_Attack::clear_direction() {
  if (GetArenaNoVirtual() == NULL && direction_ != NULL) delete direction_;
  direction_ = NULL;
}
const ::gt_msg::Vec3& R_Attack::direction() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.Direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
::gt_msg::Vec3* R_Attack::mutable_direction() {
  
  if (direction_ == NULL) {
    direction_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.R_Attack.Direction)
  return direction_;
}
::gt_msg::Vec3* R_Attack::release_direction() {
  // @@protoc_insertion_point(field_release:gt_msg.R_Attack.Direction)
  
  ::gt_msg::Vec3* temp = direction_;
  direction_ = NULL;
  return temp;
}
void R_Attack::set_allocated_direction(::gt_msg::Vec3* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.R_Attack.Direction)
}

// optional int32 Multiple = 7;
void R_Attack::clear_multiple() {
  multiple_ = 0;
}
 ::google::protobuf::int32 R_Attack::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.Multiple)
  return multiple_;
}
 void R_Attack::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.Multiple)
}

// optional .gt_msg.Vec3 Position = 8;
bool R_Attack::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
void R_Attack::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::gt_msg::Vec3& R_Attack::position() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.Position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
::gt_msg::Vec3* R_Attack::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.R_Attack.Position)
  return position_;
}
::gt_msg::Vec3* R_Attack::release_position() {
  // @@protoc_insertion_point(field_release:gt_msg.R_Attack.Position)
  
  ::gt_msg::Vec3* temp = position_;
  position_ = NULL;
  return temp;
}
void R_Attack::set_allocated_position(::gt_msg::Vec3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.R_Attack.Position)
}

// optional int32 CellIndex = 9;
void R_Attack::clear_cellindex() {
  cellindex_ = 0;
}
 ::google::protobuf::int32 R_Attack::cellindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.R_Attack.CellIndex)
  return cellindex_;
}
 void R_Attack::set_cellindex(::google::protobuf::int32 value) {
  
  cellindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.R_Attack.CellIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_Attack::kAttackerIdFieldNumber;
const int S_Attack::kVictimIdFieldNumber;
const int S_Attack::kFrameFieldNumber;
const int S_Attack::kSkillIdFieldNumber;
const int S_Attack::kSkillLevelFieldNumber;
const int S_Attack::kDirectionFieldNumber;
const int S_Attack::kMultipleFieldNumber;
const int S_Attack::kPositionFieldNumber;
const int S_Attack::kCellIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_Attack::S_Attack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_Attack)
}

void S_Attack::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  direction_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
  position_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

S_Attack::S_Attack(const S_Attack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_Attack)
}

void S_Attack::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  attackerid_ = 0;
  victimid_ = 0;
  frame_ = 0;
  skillid_ = 0;
  skilllevel_ = 0;
  direction_ = NULL;
  multiple_ = 0;
  position_ = NULL;
  cellindex_ = 0;
}

S_Attack::~S_Attack() {
  // @@protoc_insertion_point(destructor:gt_msg.S_Attack)
  SharedDtor();
}

void S_Attack::SharedDtor() {
  if (this != default_instance_) {
    delete direction_;
    delete position_;
  }
}

void S_Attack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_Attack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_Attack_descriptor_;
}

const S_Attack& S_Attack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_Attack* S_Attack::default_instance_ = NULL;

S_Attack* S_Attack::New(::google::protobuf::Arena* arena) const {
  S_Attack* n = new S_Attack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_Attack::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_Attack)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_Attack, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_Attack*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(attackerid_, skillid_);
  ZR_(skilllevel_, multiple_);
  if (GetArenaNoVirtual() == NULL && direction_ != NULL) delete direction_;
  direction_ = NULL;
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
  cellindex_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool S_Attack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_Attack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 AttackerId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attackerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_VictimId;
        break;
      }

      // optional int32 VictimId = 2;
      case 2: {
        if (tag == 16) {
         parse_VictimId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victimid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 3;
      case 3: {
        if (tag == 24) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_SkillId;
        break;
      }

      // optional int32 SkillId = 4;
      case 4: {
        if (tag == 32) {
         parse_SkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SkillLevel;
        break;
      }

      // optional int32 SkillLevel = 5;
      case 5: {
        if (tag == 40) {
         parse_SkillLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skilllevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Direction;
        break;
      }

      // optional .gt_msg.Vec3 Direction = 6;
      case 6: {
        if (tag == 50) {
         parse_Direction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Multiple;
        break;
      }

      // optional int32 Multiple = 7;
      case 7: {
        if (tag == 56) {
         parse_Multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiple_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Position;
        break;
      }

      // optional .gt_msg.Vec3 Position = 8;
      case 8: {
        if (tag == 66) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_CellIndex;
        break;
      }

      // optional int32 CellIndex = 9;
      case 9: {
        if (tag == 72) {
         parse_CellIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cellindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_Attack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_Attack)
  return false;
#undef DO_
}

void S_Attack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_Attack)
  // optional int32 AttackerId = 1;
  if (this->attackerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attackerid(), output);
  }

  // optional int32 VictimId = 2;
  if (this->victimid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->victimid(), output);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->frame(), output);
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skillid(), output);
  }

  // optional int32 SkillLevel = 5;
  if (this->skilllevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skilllevel(), output);
  }

  // optional .gt_msg.Vec3 Direction = 6;
  if (this->has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->direction_, output);
  }

  // optional int32 Multiple = 7;
  if (this->multiple() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->multiple(), output);
  }

  // optional .gt_msg.Vec3 Position = 8;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->position_, output);
  }

  // optional int32 CellIndex = 9;
  if (this->cellindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->cellindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_Attack)
}

::google::protobuf::uint8* S_Attack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_Attack)
  // optional int32 AttackerId = 1;
  if (this->attackerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attackerid(), target);
  }

  // optional int32 VictimId = 2;
  if (this->victimid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->victimid(), target);
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->frame(), target);
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skillid(), target);
  }

  // optional int32 SkillLevel = 5;
  if (this->skilllevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skilllevel(), target);
  }

  // optional .gt_msg.Vec3 Direction = 6;
  if (this->has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->direction_, false, target);
  }

  // optional int32 Multiple = 7;
  if (this->multiple() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->multiple(), target);
  }

  // optional .gt_msg.Vec3 Position = 8;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->position_, false, target);
  }

  // optional int32 CellIndex = 9;
  if (this->cellindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->cellindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_Attack)
  return target;
}

int S_Attack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_Attack)
  int total_size = 0;

  // optional int32 AttackerId = 1;
  if (this->attackerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attackerid());
  }

  // optional int32 VictimId = 2;
  if (this->victimid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->victimid());
  }

  // optional int32 Frame = 3;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skillid());
  }

  // optional int32 SkillLevel = 5;
  if (this->skilllevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skilllevel());
  }

  // optional .gt_msg.Vec3 Direction = 6;
  if (this->has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->direction_);
  }

  // optional int32 Multiple = 7;
  if (this->multiple() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->multiple());
  }

  // optional .gt_msg.Vec3 Position = 8;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // optional int32 CellIndex = 9;
  if (this->cellindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cellindex());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_Attack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_Attack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_Attack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_Attack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_Attack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_Attack)
    MergeFrom(*source);
  }
}

void S_Attack::MergeFrom(const S_Attack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_Attack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.attackerid() != 0) {
    set_attackerid(from.attackerid());
  }
  if (from.victimid() != 0) {
    set_victimid(from.victimid());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.skilllevel() != 0) {
    set_skilllevel(from.skilllevel());
  }
  if (from.has_direction()) {
    mutable_direction()->::gt_msg::Vec3::MergeFrom(from.direction());
  }
  if (from.multiple() != 0) {
    set_multiple(from.multiple());
  }
  if (from.has_position()) {
    mutable_position()->::gt_msg::Vec3::MergeFrom(from.position());
  }
  if (from.cellindex() != 0) {
    set_cellindex(from.cellindex());
  }
}

void S_Attack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_Attack::CopyFrom(const S_Attack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_Attack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Attack::IsInitialized() const {

  return true;
}

void S_Attack::Swap(S_Attack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_Attack::InternalSwap(S_Attack* other) {
  std::swap(attackerid_, other->attackerid_);
  std::swap(victimid_, other->victimid_);
  std::swap(frame_, other->frame_);
  std::swap(skillid_, other->skillid_);
  std::swap(skilllevel_, other->skilllevel_);
  std::swap(direction_, other->direction_);
  std::swap(multiple_, other->multiple_);
  std::swap(position_, other->position_);
  std::swap(cellindex_, other->cellindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_Attack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_Attack_descriptor_;
  metadata.reflection = S_Attack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_Attack

// optional int32 AttackerId = 1;
void S_Attack::clear_attackerid() {
  attackerid_ = 0;
}
 ::google::protobuf::int32 S_Attack::attackerid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.AttackerId)
  return attackerid_;
}
 void S_Attack::set_attackerid(::google::protobuf::int32 value) {
  
  attackerid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.AttackerId)
}

// optional int32 VictimId = 2;
void S_Attack::clear_victimid() {
  victimid_ = 0;
}
 ::google::protobuf::int32 S_Attack::victimid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.VictimId)
  return victimid_;
}
 void S_Attack::set_victimid(::google::protobuf::int32 value) {
  
  victimid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.VictimId)
}

// optional int32 Frame = 3;
void S_Attack::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_Attack::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.Frame)
  return frame_;
}
 void S_Attack::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.Frame)
}

// optional int32 SkillId = 4;
void S_Attack::clear_skillid() {
  skillid_ = 0;
}
 ::google::protobuf::int32 S_Attack::skillid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.SkillId)
  return skillid_;
}
 void S_Attack::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.SkillId)
}

// optional int32 SkillLevel = 5;
void S_Attack::clear_skilllevel() {
  skilllevel_ = 0;
}
 ::google::protobuf::int32 S_Attack::skilllevel() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.SkillLevel)
  return skilllevel_;
}
 void S_Attack::set_skilllevel(::google::protobuf::int32 value) {
  
  skilllevel_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.SkillLevel)
}

// optional .gt_msg.Vec3 Direction = 6;
bool S_Attack::has_direction() const {
  return !_is_default_instance_ && direction_ != NULL;
}
void S_Attack::clear_direction() {
  if (GetArenaNoVirtual() == NULL && direction_ != NULL) delete direction_;
  direction_ = NULL;
}
const ::gt_msg::Vec3& S_Attack::direction() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.Direction)
  return direction_ != NULL ? *direction_ : *default_instance_->direction_;
}
::gt_msg::Vec3* S_Attack::mutable_direction() {
  
  if (direction_ == NULL) {
    direction_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_Attack.Direction)
  return direction_;
}
::gt_msg::Vec3* S_Attack::release_direction() {
  // @@protoc_insertion_point(field_release:gt_msg.S_Attack.Direction)
  
  ::gt_msg::Vec3* temp = direction_;
  direction_ = NULL;
  return temp;
}
void S_Attack::set_allocated_direction(::gt_msg::Vec3* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_Attack.Direction)
}

// optional int32 Multiple = 7;
void S_Attack::clear_multiple() {
  multiple_ = 0;
}
 ::google::protobuf::int32 S_Attack::multiple() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.Multiple)
  return multiple_;
}
 void S_Attack::set_multiple(::google::protobuf::int32 value) {
  
  multiple_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.Multiple)
}

// optional .gt_msg.Vec3 Position = 8;
bool S_Attack::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
void S_Attack::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::gt_msg::Vec3& S_Attack::position() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.Position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
::gt_msg::Vec3* S_Attack::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.S_Attack.Position)
  return position_;
}
::gt_msg::Vec3* S_Attack::release_position() {
  // @@protoc_insertion_point(field_release:gt_msg.S_Attack.Position)
  
  ::gt_msg::Vec3* temp = position_;
  position_ = NULL;
  return temp;
}
void S_Attack::set_allocated_position(::gt_msg::Vec3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.S_Attack.Position)
}

// optional int32 CellIndex = 9;
void S_Attack::clear_cellindex() {
  cellindex_ = 0;
}
 ::google::protobuf::int32 S_Attack::cellindex() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Attack.CellIndex)
  return cellindex_;
}
 void S_Attack::set_cellindex(::google::protobuf::int32 value) {
  
  cellindex_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Attack.CellIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_ItemScore::kItemIdFieldNumber;
const int S_ItemScore::kFrameFieldNumber;
const int S_ItemScore::kScoreFieldNumber;
const int S_ItemScore::kExperienceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_ItemScore::S_ItemScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_ItemScore)
}

void S_ItemScore::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S_ItemScore::S_ItemScore(const S_ItemScore& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_ItemScore)
}

void S_ItemScore::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  itemid_ = 0;
  frame_ = 0;
  score_ = GOOGLE_LONGLONG(0);
  experience_ = 0;
}

S_ItemScore::~S_ItemScore() {
  // @@protoc_insertion_point(destructor:gt_msg.S_ItemScore)
  SharedDtor();
}

void S_ItemScore::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_ItemScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_ItemScore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_ItemScore_descriptor_;
}

const S_ItemScore& S_ItemScore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_ItemScore* S_ItemScore::default_instance_ = NULL;

S_ItemScore* S_ItemScore::New(::google::protobuf::Arena* arena) const {
  S_ItemScore* n = new S_ItemScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_ItemScore::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_ItemScore)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_ItemScore, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_ItemScore*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, experience_);

#undef ZR_HELPER_
#undef ZR_

}

bool S_ItemScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_ItemScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 2;
      case 2: {
        if (tag == 16) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Score;
        break;
      }

      // optional int64 Score = 3;
      case 3: {
        if (tag == 24) {
         parse_Score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &score_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Experience;
        break;
      }

      // optional int32 Experience = 4;
      case 4: {
        if (tag == 32) {
         parse_Experience:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &experience_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_ItemScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_ItemScore)
  return false;
#undef DO_
}

void S_ItemScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_ItemScore)
  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frame(), output);
  }

  // optional int64 Score = 3;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->score(), output);
  }

  // optional int32 Experience = 4;
  if (this->experience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->experience(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_ItemScore)
}

::google::protobuf::uint8* S_ItemScore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_ItemScore)
  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->frame(), target);
  }

  // optional int64 Score = 3;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->score(), target);
  }

  // optional int32 Experience = 4;
  if (this->experience() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->experience(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_ItemScore)
  return target;
}

int S_ItemScore::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_ItemScore)
  int total_size = 0;

  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemid());
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional int64 Score = 3;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->score());
  }

  // optional int32 Experience = 4;
  if (this->experience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->experience());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_ItemScore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_ItemScore)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_ItemScore* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_ItemScore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_ItemScore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_ItemScore)
    MergeFrom(*source);
  }
}

void S_ItemScore::MergeFrom(const S_ItemScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_ItemScore)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.experience() != 0) {
    set_experience(from.experience());
  }
}

void S_ItemScore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_ItemScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_ItemScore::CopyFrom(const S_ItemScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_ItemScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_ItemScore::IsInitialized() const {

  return true;
}

void S_ItemScore::Swap(S_ItemScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_ItemScore::InternalSwap(S_ItemScore* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(frame_, other->frame_);
  std::swap(score_, other->score_);
  std::swap(experience_, other->experience_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_ItemScore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_ItemScore_descriptor_;
  metadata.reflection = S_ItemScore_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_ItemScore

// optional int32 ItemId = 1;
void S_ItemScore::clear_itemid() {
  itemid_ = 0;
}
 ::google::protobuf::int32 S_ItemScore::itemid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ItemScore.ItemId)
  return itemid_;
}
 void S_ItemScore::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ItemScore.ItemId)
}

// optional int32 Frame = 2;
void S_ItemScore::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_ItemScore::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ItemScore.Frame)
  return frame_;
}
 void S_ItemScore::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ItemScore.Frame)
}

// optional int64 Score = 3;
void S_ItemScore::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 S_ItemScore::score() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ItemScore.Score)
  return score_;
}
 void S_ItemScore::set_score(::google::protobuf::int64 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ItemScore.Score)
}

// optional int32 Experience = 4;
void S_ItemScore::clear_experience() {
  experience_ = 0;
}
 ::google::protobuf::int32 S_ItemScore::experience() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_ItemScore.Experience)
  return experience_;
}
 void S_ItemScore::set_experience(::google::protobuf::int32 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_ItemScore.Experience)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_TestDelay::S_TestDelay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_TestDelay)
}

void S_TestDelay::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S_TestDelay::S_TestDelay(const S_TestDelay& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_TestDelay)
}

void S_TestDelay::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

S_TestDelay::~S_TestDelay() {
  // @@protoc_insertion_point(destructor:gt_msg.S_TestDelay)
  SharedDtor();
}

void S_TestDelay::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_TestDelay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_TestDelay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_TestDelay_descriptor_;
}

const S_TestDelay& S_TestDelay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_TestDelay* S_TestDelay::default_instance_ = NULL;

S_TestDelay* S_TestDelay::New(::google::protobuf::Arena* arena) const {
  S_TestDelay* n = new S_TestDelay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_TestDelay::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_TestDelay)
}

bool S_TestDelay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_TestDelay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_TestDelay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_TestDelay)
  return false;
#undef DO_
}

void S_TestDelay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_TestDelay)
  // @@protoc_insertion_point(serialize_end:gt_msg.S_TestDelay)
}

::google::protobuf::uint8* S_TestDelay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_TestDelay)
  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_TestDelay)
  return target;
}

int S_TestDelay::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_TestDelay)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_TestDelay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_TestDelay)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_TestDelay* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_TestDelay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_TestDelay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_TestDelay)
    MergeFrom(*source);
  }
}

void S_TestDelay::MergeFrom(const S_TestDelay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_TestDelay)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void S_TestDelay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_TestDelay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_TestDelay::CopyFrom(const S_TestDelay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_TestDelay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_TestDelay::IsInitialized() const {

  return true;
}

void S_TestDelay::Swap(S_TestDelay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_TestDelay::InternalSwap(S_TestDelay* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_TestDelay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_TestDelay_descriptor_;
  metadata.reflection = S_TestDelay_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_TestDelay

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

R_TestDelay::R_TestDelay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.R_TestDelay)
}

void R_TestDelay::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

R_TestDelay::R_TestDelay(const R_TestDelay& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.R_TestDelay)
}

void R_TestDelay::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

R_TestDelay::~R_TestDelay() {
  // @@protoc_insertion_point(destructor:gt_msg.R_TestDelay)
  SharedDtor();
}

void R_TestDelay::SharedDtor() {
  if (this != default_instance_) {
  }
}

void R_TestDelay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* R_TestDelay::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return R_TestDelay_descriptor_;
}

const R_TestDelay& R_TestDelay::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

R_TestDelay* R_TestDelay::default_instance_ = NULL;

R_TestDelay* R_TestDelay::New(::google::protobuf::Arena* arena) const {
  R_TestDelay* n = new R_TestDelay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void R_TestDelay::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.R_TestDelay)
}

bool R_TestDelay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.R_TestDelay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.R_TestDelay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.R_TestDelay)
  return false;
#undef DO_
}

void R_TestDelay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.R_TestDelay)
  // @@protoc_insertion_point(serialize_end:gt_msg.R_TestDelay)
}

::google::protobuf::uint8* R_TestDelay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.R_TestDelay)
  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.R_TestDelay)
  return target;
}

int R_TestDelay::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.R_TestDelay)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void R_TestDelay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.R_TestDelay)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const R_TestDelay* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const R_TestDelay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.R_TestDelay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.R_TestDelay)
    MergeFrom(*source);
  }
}

void R_TestDelay::MergeFrom(const R_TestDelay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.R_TestDelay)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void R_TestDelay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.R_TestDelay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void R_TestDelay::CopyFrom(const R_TestDelay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.R_TestDelay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool R_TestDelay::IsInitialized() const {

  return true;
}

void R_TestDelay::Swap(R_TestDelay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void R_TestDelay::InternalSwap(R_TestDelay* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata R_TestDelay::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = R_TestDelay_descriptor_;
  metadata.reflection = R_TestDelay_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// R_TestDelay

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_MovePosList::kFrameFieldNumber;
const int S_MovePosList::kMoverIdFieldNumber;
const int S_MovePosList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_MovePosList::S_MovePosList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_MovePosList)
}

void S_MovePosList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S_MovePosList::S_MovePosList(const S_MovePosList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_MovePosList)
}

void S_MovePosList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  frame_ = 0;
  moverid_ = 0;
}

S_MovePosList::~S_MovePosList() {
  // @@protoc_insertion_point(destructor:gt_msg.S_MovePosList)
  SharedDtor();
}

void S_MovePosList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_MovePosList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_MovePosList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_MovePosList_descriptor_;
}

const S_MovePosList& S_MovePosList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_MovePosList* S_MovePosList::default_instance_ = NULL;

S_MovePosList* S_MovePosList::New(::google::protobuf::Arena* arena) const {
  S_MovePosList* n = new S_MovePosList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_MovePosList::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_MovePosList)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_MovePosList, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_MovePosList*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(frame_, moverid_);

#undef ZR_HELPER_
#undef ZR_

  list_.Clear();
}

bool S_MovePosList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_MovePosList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Frame = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MoverId;
        break;
      }

      // optional int32 MoverId = 2;
      case 2: {
        if (tag == 16) {
         parse_MoverId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &moverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_list;
        break;
      }

      // repeated .gt_msg.Vec3 list = 3;
      case 3: {
        if (tag == 26) {
         parse_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_MovePosList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_MovePosList)
  return false;
#undef DO_
}

void S_MovePosList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_MovePosList)
  // optional int32 Frame = 1;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frame(), output);
  }

  // optional int32 MoverId = 2;
  if (this->moverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->moverid(), output);
  }

  // repeated .gt_msg.Vec3 list = 3;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_MovePosList)
}

::google::protobuf::uint8* S_MovePosList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_MovePosList)
  // optional int32 Frame = 1;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frame(), target);
  }

  // optional int32 MoverId = 2;
  if (this->moverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->moverid(), target);
  }

  // repeated .gt_msg.Vec3 list = 3;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_MovePosList)
  return target;
}

int S_MovePosList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_MovePosList)
  int total_size = 0;

  // optional int32 Frame = 1;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional int32 MoverId = 2;
  if (this->moverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->moverid());
  }

  // repeated .gt_msg.Vec3 list = 3;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_MovePosList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_MovePosList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_MovePosList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_MovePosList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_MovePosList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_MovePosList)
    MergeFrom(*source);
  }
}

void S_MovePosList::MergeFrom(const S_MovePosList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_MovePosList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  list_.MergeFrom(from.list_);
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.moverid() != 0) {
    set_moverid(from.moverid());
  }
}

void S_MovePosList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_MovePosList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_MovePosList::CopyFrom(const S_MovePosList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_MovePosList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_MovePosList::IsInitialized() const {

  return true;
}

void S_MovePosList::Swap(S_MovePosList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_MovePosList::InternalSwap(S_MovePosList* other) {
  std::swap(frame_, other->frame_);
  std::swap(moverid_, other->moverid_);
  list_.UnsafeArenaSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_MovePosList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_MovePosList_descriptor_;
  metadata.reflection = S_MovePosList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_MovePosList

// optional int32 Frame = 1;
void S_MovePosList::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_MovePosList::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_MovePosList.Frame)
  return frame_;
}
 void S_MovePosList::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_MovePosList.Frame)
}

// optional int32 MoverId = 2;
void S_MovePosList::clear_moverid() {
  moverid_ = 0;
}
 ::google::protobuf::int32 S_MovePosList::moverid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_MovePosList.MoverId)
  return moverid_;
}
 void S_MovePosList::set_moverid(::google::protobuf::int32 value) {
  
  moverid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_MovePosList.MoverId)
}

// repeated .gt_msg.Vec3 list = 3;
int S_MovePosList::list_size() const {
  return list_.size();
}
void S_MovePosList::clear_list() {
  list_.Clear();
}
const ::gt_msg::Vec3& S_MovePosList::list(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_MovePosList.list)
  return list_.Get(index);
}
::gt_msg::Vec3* S_MovePosList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_MovePosList.list)
  return list_.Mutable(index);
}
::gt_msg::Vec3* S_MovePosList::add_list() {
  // @@protoc_insertion_point(field_add:gt_msg.S_MovePosList.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >*
S_MovePosList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_MovePosList.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Vec3 >&
S_MovePosList::list() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_MovePosList.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Victim::kIdFieldNumber;
const int Victim::kHPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Victim::Victim()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Victim)
}

void Victim::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Victim::Victim(const Victim& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Victim)
}

void Victim::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  hp_ = 0;
}

Victim::~Victim() {
  // @@protoc_insertion_point(destructor:gt_msg.Victim)
  SharedDtor();
}

void Victim::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Victim::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Victim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Victim_descriptor_;
}

const Victim& Victim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Victim* Victim::default_instance_ = NULL;

Victim* Victim::New(::google::protobuf::Arena* arena) const {
  Victim* n = new Victim;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Victim::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Victim)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Victim, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Victim*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, hp_);

#undef ZR_HELPER_
#undef ZR_

}

bool Victim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Victim)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_HP;
        break;
      }

      // optional int32 HP = 2;
      case 2: {
        if (tag == 16) {
         parse_HP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Victim)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Victim)
  return false;
#undef DO_
}

void Victim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Victim)
  // optional int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 HP = 2;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hp(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Victim)
}

::google::protobuf::uint8* Victim::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Victim)
  // optional int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 HP = 2;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Victim)
  return target;
}

int Victim::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Victim)
  int total_size = 0;

  // optional int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int32 HP = 2;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Victim::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Victim)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Victim* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Victim>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Victim)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Victim)
    MergeFrom(*source);
  }
}

void Victim::MergeFrom(const Victim& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Victim)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
}

void Victim::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Victim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Victim::CopyFrom(const Victim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Victim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Victim::IsInitialized() const {

  return true;
}

void Victim::Swap(Victim* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Victim::InternalSwap(Victim* other) {
  std::swap(id_, other->id_);
  std::swap(hp_, other->hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Victim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Victim_descriptor_;
  metadata.reflection = Victim_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Victim

// optional int32 Id = 1;
void Victim::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Victim::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Victim.Id)
  return id_;
}
 void Victim::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Victim.Id)
}

// optional int32 HP = 2;
void Victim::clear_hp() {
  hp_ = 0;
}
 ::google::protobuf::int32 Victim::hp() const {
  // @@protoc_insertion_point(field_get:gt_msg.Victim.HP)
  return hp_;
}
 void Victim::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Victim.HP)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_Hit::kCasterIdFieldNumber;
const int S_Hit::kFrameFieldNumber;
const int S_Hit::kEndFrameFieldNumber;
const int S_Hit::kSkillIdFieldNumber;
const int S_Hit::kAttackerScoreFieldNumber;
const int S_Hit::kVictimListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_Hit::S_Hit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_Hit)
}

void S_Hit::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S_Hit::S_Hit(const S_Hit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_Hit)
}

void S_Hit::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  casterid_ = 0;
  frame_ = 0;
  endframe_ = 0;
  skillid_ = 0;
  attackerscore_ = GOOGLE_LONGLONG(0);
}

S_Hit::~S_Hit() {
  // @@protoc_insertion_point(destructor:gt_msg.S_Hit)
  SharedDtor();
}

void S_Hit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_Hit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_Hit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_Hit_descriptor_;
}

const S_Hit& S_Hit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_Hit* S_Hit::default_instance_ = NULL;

S_Hit* S_Hit::New(::google::protobuf::Arena* arena) const {
  S_Hit* n = new S_Hit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_Hit::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_Hit)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_Hit, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_Hit*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(casterid_, attackerscore_);

#undef ZR_HELPER_
#undef ZR_

  victimlist_.Clear();
}

bool S_Hit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_Hit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 CasterId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &casterid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Frame;
        break;
      }

      // optional int32 Frame = 2;
      case 2: {
        if (tag == 16) {
         parse_Frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EndFrame;
        break;
      }

      // optional int32 EndFrame = 3;
      case 3: {
        if (tag == 24) {
         parse_EndFrame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endframe_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_SkillId;
        break;
      }

      // optional int32 SkillId = 4;
      case 4: {
        if (tag == 32) {
         parse_SkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_AttackerScore;
        break;
      }

      // optional int64 AttackerScore = 5;
      case 5: {
        if (tag == 40) {
         parse_AttackerScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attackerscore_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_VictimList;
        break;
      }

      // repeated .gt_msg.Victim VictimList = 6;
      case 6: {
        if (tag == 50) {
         parse_VictimList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_VictimList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_victimlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_VictimList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_Hit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_Hit)
  return false;
#undef DO_
}

void S_Hit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_Hit)
  // optional int32 CasterId = 1;
  if (this->casterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->casterid(), output);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->frame(), output);
  }

  // optional int32 EndFrame = 3;
  if (this->endframe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->endframe(), output);
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skillid(), output);
  }

  // optional int64 AttackerScore = 5;
  if (this->attackerscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->attackerscore(), output);
  }

  // repeated .gt_msg.Victim VictimList = 6;
  for (unsigned int i = 0, n = this->victimlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->victimlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_Hit)
}

::google::protobuf::uint8* S_Hit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_Hit)
  // optional int32 CasterId = 1;
  if (this->casterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->casterid(), target);
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->frame(), target);
  }

  // optional int32 EndFrame = 3;
  if (this->endframe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->endframe(), target);
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skillid(), target);
  }

  // optional int64 AttackerScore = 5;
  if (this->attackerscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->attackerscore(), target);
  }

  // repeated .gt_msg.Victim VictimList = 6;
  for (unsigned int i = 0, n = this->victimlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->victimlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_Hit)
  return target;
}

int S_Hit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_Hit)
  int total_size = 0;

  // optional int32 CasterId = 1;
  if (this->casterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->casterid());
  }

  // optional int32 Frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  // optional int32 EndFrame = 3;
  if (this->endframe() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->endframe());
  }

  // optional int32 SkillId = 4;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skillid());
  }

  // optional int64 AttackerScore = 5;
  if (this->attackerscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->attackerscore());
  }

  // repeated .gt_msg.Victim VictimList = 6;
  total_size += 1 * this->victimlist_size();
  for (int i = 0; i < this->victimlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->victimlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_Hit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_Hit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_Hit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_Hit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_Hit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_Hit)
    MergeFrom(*source);
  }
}

void S_Hit::MergeFrom(const S_Hit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_Hit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  victimlist_.MergeFrom(from.victimlist_);
  if (from.casterid() != 0) {
    set_casterid(from.casterid());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.endframe() != 0) {
    set_endframe(from.endframe());
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.attackerscore() != 0) {
    set_attackerscore(from.attackerscore());
  }
}

void S_Hit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_Hit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_Hit::CopyFrom(const S_Hit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_Hit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Hit::IsInitialized() const {

  return true;
}

void S_Hit::Swap(S_Hit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_Hit::InternalSwap(S_Hit* other) {
  std::swap(casterid_, other->casterid_);
  std::swap(frame_, other->frame_);
  std::swap(endframe_, other->endframe_);
  std::swap(skillid_, other->skillid_);
  std::swap(attackerscore_, other->attackerscore_);
  victimlist_.UnsafeArenaSwap(&other->victimlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_Hit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_Hit_descriptor_;
  metadata.reflection = S_Hit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_Hit

// optional int32 CasterId = 1;
void S_Hit::clear_casterid() {
  casterid_ = 0;
}
 ::google::protobuf::int32 S_Hit::casterid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.CasterId)
  return casterid_;
}
 void S_Hit::set_casterid(::google::protobuf::int32 value) {
  
  casterid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.CasterId)
}

// optional int32 Frame = 2;
void S_Hit::clear_frame() {
  frame_ = 0;
}
 ::google::protobuf::int32 S_Hit::frame() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.Frame)
  return frame_;
}
 void S_Hit::set_frame(::google::protobuf::int32 value) {
  
  frame_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.Frame)
}

// optional int32 EndFrame = 3;
void S_Hit::clear_endframe() {
  endframe_ = 0;
}
 ::google::protobuf::int32 S_Hit::endframe() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.EndFrame)
  return endframe_;
}
 void S_Hit::set_endframe(::google::protobuf::int32 value) {
  
  endframe_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.EndFrame)
}

// optional int32 SkillId = 4;
void S_Hit::clear_skillid() {
  skillid_ = 0;
}
 ::google::protobuf::int32 S_Hit::skillid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.SkillId)
  return skillid_;
}
 void S_Hit::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.SkillId)
}

// optional int64 AttackerScore = 5;
void S_Hit::clear_attackerscore() {
  attackerscore_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 S_Hit::attackerscore() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.AttackerScore)
  return attackerscore_;
}
 void S_Hit::set_attackerscore(::google::protobuf::int64 value) {
  
  attackerscore_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_Hit.AttackerScore)
}

// repeated .gt_msg.Victim VictimList = 6;
int S_Hit::victimlist_size() const {
  return victimlist_.size();
}
void S_Hit::clear_victimlist() {
  victimlist_.Clear();
}
const ::gt_msg::Victim& S_Hit::victimlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.S_Hit.VictimList)
  return victimlist_.Get(index);
}
::gt_msg::Victim* S_Hit::mutable_victimlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.S_Hit.VictimList)
  return victimlist_.Mutable(index);
}
::gt_msg::Victim* S_Hit::add_victimlist() {
  // @@protoc_insertion_point(field_add:gt_msg.S_Hit.VictimList)
  return victimlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Victim >*
S_Hit::mutable_victimlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.S_Hit.VictimList)
  return &victimlist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Victim >&
S_Hit::victimlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.S_Hit.VictimList)
  return victimlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S_LV::kItemIdFieldNumber;
const int S_LV::kItemExpFieldNumber;
const int S_LV::kLevelFieldNumber;
const int S_LV::kMaxExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S_LV::S_LV()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.S_LV)
}

void S_LV::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

S_LV::S_LV(const S_LV& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.S_LV)
}

void S_LV::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  itemid_ = 0;
  itemexp_ = 0;
  level_ = 0;
  maxexp_ = 0;
}

S_LV::~S_LV() {
  // @@protoc_insertion_point(destructor:gt_msg.S_LV)
  SharedDtor();
}

void S_LV::SharedDtor() {
  if (this != default_instance_) {
  }
}

void S_LV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S_LV::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S_LV_descriptor_;
}

const S_LV& S_LV::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

S_LV* S_LV::default_instance_ = NULL;

S_LV* S_LV::New(::google::protobuf::Arena* arena) const {
  S_LV* n = new S_LV;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S_LV::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.S_LV)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(S_LV, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<S_LV*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, maxexp_);

#undef ZR_HELPER_
#undef ZR_

}

bool S_LV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.S_LV)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ItemId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemExp;
        break;
      }

      // optional int32 ItemExp = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Level;
        break;
      }

      // optional int32 Level = 3;
      case 3: {
        if (tag == 24) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_MaxExp;
        break;
      }

      // optional int32 MaxExp = 4;
      case 4: {
        if (tag == 32) {
         parse_MaxExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.S_LV)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.S_LV)
  return false;
#undef DO_
}

void S_LV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.S_LV)
  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 ItemExp = 2;
  if (this->itemexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemexp(), output);
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // optional int32 MaxExp = 4;
  if (this->maxexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxexp(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.S_LV)
}

::google::protobuf::uint8* S_LV::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.S_LV)
  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 ItemExp = 2;
  if (this->itemexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemexp(), target);
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // optional int32 MaxExp = 4;
  if (this->maxexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxexp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.S_LV)
  return target;
}

int S_LV::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.S_LV)
  int total_size = 0;

  // optional int32 ItemId = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemid());
  }

  // optional int32 ItemExp = 2;
  if (this->itemexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemexp());
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional int32 MaxExp = 4;
  if (this->maxexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxexp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S_LV::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.S_LV)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const S_LV* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const S_LV>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.S_LV)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.S_LV)
    MergeFrom(*source);
  }
}

void S_LV::MergeFrom(const S_LV& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.S_LV)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.itemexp() != 0) {
    set_itemexp(from.itemexp());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.maxexp() != 0) {
    set_maxexp(from.maxexp());
  }
}

void S_LV::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.S_LV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S_LV::CopyFrom(const S_LV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.S_LV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_LV::IsInitialized() const {

  return true;
}

void S_LV::Swap(S_LV* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S_LV::InternalSwap(S_LV* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(itemexp_, other->itemexp_);
  std::swap(level_, other->level_);
  std::swap(maxexp_, other->maxexp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S_LV::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S_LV_descriptor_;
  metadata.reflection = S_LV_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S_LV

// optional int32 ItemId = 1;
void S_LV::clear_itemid() {
  itemid_ = 0;
}
 ::google::protobuf::int32 S_LV::itemid() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_LV.ItemId)
  return itemid_;
}
 void S_LV::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_LV.ItemId)
}

// optional int32 ItemExp = 2;
void S_LV::clear_itemexp() {
  itemexp_ = 0;
}
 ::google::protobuf::int32 S_LV::itemexp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_LV.ItemExp)
  return itemexp_;
}
 void S_LV::set_itemexp(::google::protobuf::int32 value) {
  
  itemexp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_LV.ItemExp)
}

// optional int32 Level = 3;
void S_LV::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 S_LV::level() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_LV.Level)
  return level_;
}
 void S_LV::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_LV.Level)
}

// optional int32 MaxExp = 4;
void S_LV::clear_maxexp() {
  maxexp_ = 0;
}
 ::google::protobuf::int32 S_LV::maxexp() const {
  // @@protoc_insertion_point(field_get:gt_msg.S_LV.MaxExp)
  return maxexp_;
}
 void S_LV::set_maxexp(::google::protobuf::int32 value) {
  
  maxexp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.S_LV.MaxExp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_SkillData::kIdFieldNumber;
const int Proto_SkillData::kLevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_SkillData::Proto_SkillData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_SkillData)
}

void Proto_SkillData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_SkillData::Proto_SkillData(const Proto_SkillData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_SkillData)
}

void Proto_SkillData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  lev_ = 0;
}

Proto_SkillData::~Proto_SkillData() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_SkillData)
  SharedDtor();
}

void Proto_SkillData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_SkillData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SkillData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SkillData_descriptor_;
}

const Proto_SkillData& Proto_SkillData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_SkillData* Proto_SkillData::default_instance_ = NULL;

Proto_SkillData* Proto_SkillData::New(::google::protobuf::Arena* arena) const {
  Proto_SkillData* n = new Proto_SkillData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_SkillData::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_SkillData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Proto_SkillData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_SkillData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, lev_);

#undef ZR_HELPER_
#undef ZR_

}

bool Proto_SkillData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_SkillData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_lev;
        break;
      }

      // optional int32 lev = 2;
      case 2: {
        if (tag == 16) {
         parse_lev:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lev_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_SkillData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_SkillData)
  return false;
#undef DO_
}

void Proto_SkillData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_SkillData)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 lev = 2;
  if (this->lev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lev(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_SkillData)
}

::google::protobuf::uint8* Proto_SkillData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_SkillData)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 lev = 2;
  if (this->lev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lev(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_SkillData)
  return target;
}

int Proto_SkillData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_SkillData)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int32 lev = 2;
  if (this->lev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lev());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SkillData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_SkillData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_SkillData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_SkillData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_SkillData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_SkillData)
    MergeFrom(*source);
  }
}

void Proto_SkillData::MergeFrom(const Proto_SkillData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_SkillData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.lev() != 0) {
    set_lev(from.lev());
  }
}

void Proto_SkillData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_SkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SkillData::CopyFrom(const Proto_SkillData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_SkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SkillData::IsInitialized() const {

  return true;
}

void Proto_SkillData::Swap(Proto_SkillData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_SkillData::InternalSwap(Proto_SkillData* other) {
  std::swap(id_, other->id_);
  std::swap(lev_, other->lev_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_SkillData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SkillData_descriptor_;
  metadata.reflection = Proto_SkillData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_SkillData

// optional int32 id = 1;
void Proto_SkillData::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Proto_SkillData::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillData.id)
  return id_;
}
 void Proto_SkillData::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillData.id)
}

// optional int32 lev = 2;
void Proto_SkillData::clear_lev() {
  lev_ = 0;
}
 ::google::protobuf::int32 Proto_SkillData::lev() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillData.lev)
  return lev_;
}
 void Proto_SkillData::set_lev(::google::protobuf::int32 value) {
  
  lev_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillData.lev)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_Monster::kTypeFieldNumber;
const int Proto_Monster::kNameFieldNumber;
const int Proto_Monster::kJobFieldNumber;
const int Proto_Monster::kScalFieldNumber;
const int Proto_Monster::kExpFieldNumber;
const int Proto_Monster::kObjTypeFieldNumber;
const int Proto_Monster::kModleNameFieldNumber;
const int Proto_Monster::kLevelFieldNumber;
const int Proto_Monster::kMaxHpFieldNumber;
const int Proto_Monster::kAttackFieldNumber;
const int Proto_Monster::kMagicAtkFieldNumber;
const int Proto_Monster::kPhysicsDefFieldNumber;
const int Proto_Monster::kMagicDefFieldNumber;
const int Proto_Monster::kHitRateFieldNumber;
const int Proto_Monster::kDodgeFieldNumber;
const int Proto_Monster::kBurstsRateFieldNumber;
const int Proto_Monster::kMoveSpeedFieldNumber;
const int Proto_Monster::kAiIDFieldNumber;
const int Proto_Monster::kActionDistanceFieldNumber;
const int Proto_Monster::kMinActionTimeFieldNumber;
const int Proto_Monster::kSkillListFieldNumber;
const int Proto_Monster::kBirthEffectNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_Monster::Proto_Monster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_Monster)
}

void Proto_Monster::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_Monster::Proto_Monster(const Proto_Monster& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_Monster)
}

void Proto_Monster::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_ = 0;
  scal_ = 0;
  exp_ = 0;
  objtype_ = 0;
  modlename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  maxhp_ = 0;
  attack_ = 0;
  magicatk_ = 0;
  physicsdef_ = 0;
  magicdef_ = 0;
  hitrate_ = 0;
  dodge_ = 0;
  burstsrate_ = 0;
  movespeed_ = 0;
  aiid_ = 0;
  actiondistance_ = 0;
  minactiontime_ = 0;
  birtheffectname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Proto_Monster::~Proto_Monster() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_Monster)
  SharedDtor();
}

void Proto_Monster::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modlename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birtheffectname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Proto_Monster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_Monster::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_Monster_descriptor_;
}

const Proto_Monster& Proto_Monster::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_Monster* Proto_Monster::default_instance_ = NULL;

Proto_Monster* Proto_Monster::New(::google::protobuf::Arena* arena) const {
  Proto_Monster* n = new Proto_Monster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_Monster::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_Monster)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Proto_Monster, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_Monster*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, exp_);
  ZR_(objtype_, level_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modlename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(maxhp_, burstsrate_);
  ZR_(movespeed_, minactiontime_);
  birtheffectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  skilllist_.Clear();
}

bool Proto_Monster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_Monster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Monster.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_job;
        break;
      }

      // optional .gt_msg.JobType job = 3;
      case 3: {
        if (tag == 24) {
         parse_job:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_job(static_cast< ::gt_msg::JobType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_scal;
        break;
      }

      // optional int32 scal = 4;
      case 4: {
        if (tag == 32) {
         parse_scal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_exp;
        break;
      }

      // optional int32 exp = 5;
      case 5: {
        if (tag == 40) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_objType;
        break;
      }

      // optional .gt_msg.Object_Type_Enum objType = 6;
      case 6: {
        if (tag == 48) {
         parse_objType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_objtype(static_cast< ::gt_msg::Object_Type_Enum >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_modleName;
        break;
      }

      // optional string modleName = 7;
      case 7: {
        if (tag == 58) {
         parse_modleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modlename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->modlename().data(), this->modlename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Monster.modleName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_level;
        break;
      }

      // optional int32 level = 8;
      case 8: {
        if (tag == 64) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_maxHp;
        break;
      }

      // optional int32 maxHp = 9;
      case 9: {
        if (tag == 72) {
         parse_maxHp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxhp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_attack;
        break;
      }

      // optional int32 attack = 10;
      case 10: {
        if (tag == 80) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_magicAtk;
        break;
      }

      // optional int32 magicAtk = 11;
      case 11: {
        if (tag == 88) {
         parse_magicAtk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magicatk_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_physicsDef;
        break;
      }

      // optional int32 physicsDef = 12;
      case 12: {
        if (tag == 96) {
         parse_physicsDef:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &physicsdef_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_magicDef;
        break;
      }

      // optional int32 magicDef = 13;
      case 13: {
        if (tag == 104) {
         parse_magicDef:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magicdef_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(117)) goto parse_hitRate;
        break;
      }

      // optional float hitRate = 14;
      case 14: {
        if (tag == 117) {
         parse_hitRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hitrate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(125)) goto parse_dodge;
        break;
      }

      // optional float dodge = 15;
      case 15: {
        if (tag == 125) {
         parse_dodge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dodge_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(133)) goto parse_burstsRate;
        break;
      }

      // optional float burstsRate = 16;
      case 16: {
        if (tag == 133) {
         parse_burstsRate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &burstsrate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_moveSpeed;
        break;
      }

      // optional int32 moveSpeed = 17;
      case 17: {
        if (tag == 136) {
         parse_moveSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &movespeed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_aiID;
        break;
      }

      // optional int32 aiID = 18;
      case 18: {
        if (tag == 144) {
         parse_aiID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aiid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(157)) goto parse_actionDistance;
        break;
      }

      // optional float actionDistance = 19;
      case 19: {
        if (tag == 157) {
         parse_actionDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &actiondistance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(165)) goto parse_minActionTime;
        break;
      }

      // optional float minActionTime = 20;
      case 20: {
        if (tag == 165) {
         parse_minActionTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minactiontime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_skillList;
        break;
      }

      // repeated .gt_msg.Proto_SkillData skillList = 21;
      case 21: {
        if (tag == 170) {
         parse_skillList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_skillList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_skilllist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_loop_skillList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(178)) goto parse_birthEffectName;
        break;
      }

      // optional string birthEffectName = 22;
      case 22: {
        if (tag == 178) {
         parse_birthEffectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birtheffectname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birtheffectname().data(), this->birtheffectname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Monster.birthEffectName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_Monster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_Monster)
  return false;
#undef DO_
}

void Proto_Monster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_Monster)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Monster.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .gt_msg.JobType job = 3;
  if (this->job() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->job(), output);
  }

  // optional int32 scal = 4;
  if (this->scal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scal(), output);
  }

  // optional int32 exp = 5;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->exp(), output);
  }

  // optional .gt_msg.Object_Type_Enum objType = 6;
  if (this->objtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->objtype(), output);
  }

  // optional string modleName = 7;
  if (this->modlename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modlename().data(), this->modlename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Monster.modleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->modlename(), output);
  }

  // optional int32 level = 8;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->level(), output);
  }

  // optional int32 maxHp = 9;
  if (this->maxhp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->maxhp(), output);
  }

  // optional int32 attack = 10;
  if (this->attack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->attack(), output);
  }

  // optional int32 magicAtk = 11;
  if (this->magicatk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->magicatk(), output);
  }

  // optional int32 physicsDef = 12;
  if (this->physicsdef() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->physicsdef(), output);
  }

  // optional int32 magicDef = 13;
  if (this->magicdef() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->magicdef(), output);
  }

  // optional float hitRate = 14;
  if (this->hitrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->hitrate(), output);
  }

  // optional float dodge = 15;
  if (this->dodge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->dodge(), output);
  }

  // optional float burstsRate = 16;
  if (this->burstsrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->burstsrate(), output);
  }

  // optional int32 moveSpeed = 17;
  if (this->movespeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->movespeed(), output);
  }

  // optional int32 aiID = 18;
  if (this->aiid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->aiid(), output);
  }

  // optional float actionDistance = 19;
  if (this->actiondistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->actiondistance(), output);
  }

  // optional float minActionTime = 20;
  if (this->minactiontime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->minactiontime(), output);
  }

  // repeated .gt_msg.Proto_SkillData skillList = 21;
  for (unsigned int i = 0, n = this->skilllist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->skilllist(i), output);
  }

  // optional string birthEffectName = 22;
  if (this->birtheffectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birtheffectname().data(), this->birtheffectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Monster.birthEffectName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->birtheffectname(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_Monster)
}

::google::protobuf::uint8* Proto_Monster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_Monster)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Monster.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .gt_msg.JobType job = 3;
  if (this->job() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->job(), target);
  }

  // optional int32 scal = 4;
  if (this->scal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scal(), target);
  }

  // optional int32 exp = 5;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->exp(), target);
  }

  // optional .gt_msg.Object_Type_Enum objType = 6;
  if (this->objtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->objtype(), target);
  }

  // optional string modleName = 7;
  if (this->modlename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->modlename().data(), this->modlename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Monster.modleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->modlename(), target);
  }

  // optional int32 level = 8;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->level(), target);
  }

  // optional int32 maxHp = 9;
  if (this->maxhp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->maxhp(), target);
  }

  // optional int32 attack = 10;
  if (this->attack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->attack(), target);
  }

  // optional int32 magicAtk = 11;
  if (this->magicatk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->magicatk(), target);
  }

  // optional int32 physicsDef = 12;
  if (this->physicsdef() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->physicsdef(), target);
  }

  // optional int32 magicDef = 13;
  if (this->magicdef() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->magicdef(), target);
  }

  // optional float hitRate = 14;
  if (this->hitrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->hitrate(), target);
  }

  // optional float dodge = 15;
  if (this->dodge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->dodge(), target);
  }

  // optional float burstsRate = 16;
  if (this->burstsrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->burstsrate(), target);
  }

  // optional int32 moveSpeed = 17;
  if (this->movespeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->movespeed(), target);
  }

  // optional int32 aiID = 18;
  if (this->aiid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->aiid(), target);
  }

  // optional float actionDistance = 19;
  if (this->actiondistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->actiondistance(), target);
  }

  // optional float minActionTime = 20;
  if (this->minactiontime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->minactiontime(), target);
  }

  // repeated .gt_msg.Proto_SkillData skillList = 21;
  for (unsigned int i = 0, n = this->skilllist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, this->skilllist(i), false, target);
  }

  // optional string birthEffectName = 22;
  if (this->birtheffectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birtheffectname().data(), this->birtheffectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Monster.birthEffectName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->birtheffectname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_Monster)
  return target;
}

int Proto_Monster::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_Monster)
  int total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .gt_msg.JobType job = 3;
  if (this->job() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->job());
  }

  // optional int32 scal = 4;
  if (this->scal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scal());
  }

  // optional int32 exp = 5;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // optional .gt_msg.Object_Type_Enum objType = 6;
  if (this->objtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->objtype());
  }

  // optional string modleName = 7;
  if (this->modlename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modlename());
  }

  // optional int32 level = 8;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional int32 maxHp = 9;
  if (this->maxhp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxhp());
  }

  // optional int32 attack = 10;
  if (this->attack() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attack());
  }

  // optional int32 magicAtk = 11;
  if (this->magicatk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->magicatk());
  }

  // optional int32 physicsDef = 12;
  if (this->physicsdef() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->physicsdef());
  }

  // optional int32 magicDef = 13;
  if (this->magicdef() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->magicdef());
  }

  // optional float hitRate = 14;
  if (this->hitrate() != 0) {
    total_size += 1 + 4;
  }

  // optional float dodge = 15;
  if (this->dodge() != 0) {
    total_size += 1 + 4;
  }

  // optional float burstsRate = 16;
  if (this->burstsrate() != 0) {
    total_size += 2 + 4;
  }

  // optional int32 moveSpeed = 17;
  if (this->movespeed() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->movespeed());
  }

  // optional int32 aiID = 18;
  if (this->aiid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aiid());
  }

  // optional float actionDistance = 19;
  if (this->actiondistance() != 0) {
    total_size += 2 + 4;
  }

  // optional float minActionTime = 20;
  if (this->minactiontime() != 0) {
    total_size += 2 + 4;
  }

  // optional string birthEffectName = 22;
  if (this->birtheffectname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birtheffectname());
  }

  // repeated .gt_msg.Proto_SkillData skillList = 21;
  total_size += 2 * this->skilllist_size();
  for (int i = 0; i < this->skilllist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skilllist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_Monster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_Monster)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_Monster* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_Monster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_Monster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_Monster)
    MergeFrom(*source);
  }
}

void Proto_Monster::MergeFrom(const Proto_Monster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_Monster)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  skilllist_.MergeFrom(from.skilllist_);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.job() != 0) {
    set_job(from.job());
  }
  if (from.scal() != 0) {
    set_scal(from.scal());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.objtype() != 0) {
    set_objtype(from.objtype());
  }
  if (from.modlename().size() > 0) {

    modlename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modlename_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.maxhp() != 0) {
    set_maxhp(from.maxhp());
  }
  if (from.attack() != 0) {
    set_attack(from.attack());
  }
  if (from.magicatk() != 0) {
    set_magicatk(from.magicatk());
  }
  if (from.physicsdef() != 0) {
    set_physicsdef(from.physicsdef());
  }
  if (from.magicdef() != 0) {
    set_magicdef(from.magicdef());
  }
  if (from.hitrate() != 0) {
    set_hitrate(from.hitrate());
  }
  if (from.dodge() != 0) {
    set_dodge(from.dodge());
  }
  if (from.burstsrate() != 0) {
    set_burstsrate(from.burstsrate());
  }
  if (from.movespeed() != 0) {
    set_movespeed(from.movespeed());
  }
  if (from.aiid() != 0) {
    set_aiid(from.aiid());
  }
  if (from.actiondistance() != 0) {
    set_actiondistance(from.actiondistance());
  }
  if (from.minactiontime() != 0) {
    set_minactiontime(from.minactiontime());
  }
  if (from.birtheffectname().size() > 0) {

    birtheffectname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birtheffectname_);
  }
}

void Proto_Monster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_Monster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_Monster::CopyFrom(const Proto_Monster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_Monster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_Monster::IsInitialized() const {

  return true;
}

void Proto_Monster::Swap(Proto_Monster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_Monster::InternalSwap(Proto_Monster* other) {
  std::swap(type_, other->type_);
  name_.Swap(&other->name_);
  std::swap(job_, other->job_);
  std::swap(scal_, other->scal_);
  std::swap(exp_, other->exp_);
  std::swap(objtype_, other->objtype_);
  modlename_.Swap(&other->modlename_);
  std::swap(level_, other->level_);
  std::swap(maxhp_, other->maxhp_);
  std::swap(attack_, other->attack_);
  std::swap(magicatk_, other->magicatk_);
  std::swap(physicsdef_, other->physicsdef_);
  std::swap(magicdef_, other->magicdef_);
  std::swap(hitrate_, other->hitrate_);
  std::swap(dodge_, other->dodge_);
  std::swap(burstsrate_, other->burstsrate_);
  std::swap(movespeed_, other->movespeed_);
  std::swap(aiid_, other->aiid_);
  std::swap(actiondistance_, other->actiondistance_);
  std::swap(minactiontime_, other->minactiontime_);
  skilllist_.UnsafeArenaSwap(&other->skilllist_);
  birtheffectname_.Swap(&other->birtheffectname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_Monster::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_Monster_descriptor_;
  metadata.reflection = Proto_Monster_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_Monster

// optional int32 type = 1;
void Proto_Monster::clear_type() {
  type_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.type)
  return type_;
}
 void Proto_Monster::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.type)
}

// optional string name = 2;
void Proto_Monster::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Monster::name() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Monster::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.name)
}
 void Proto_Monster::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Monster.name)
}
 void Proto_Monster::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Monster.name)
}
 ::std::string* Proto_Monster::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Monster.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Monster::release_name() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Monster.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Monster::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Monster.name)
}

// optional .gt_msg.JobType job = 3;
void Proto_Monster::clear_job() {
  job_ = 0;
}
 ::gt_msg::JobType Proto_Monster::job() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.job)
  return static_cast< ::gt_msg::JobType >(job_);
}
 void Proto_Monster::set_job(::gt_msg::JobType value) {
  
  job_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.job)
}

// optional int32 scal = 4;
void Proto_Monster::clear_scal() {
  scal_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::scal() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.scal)
  return scal_;
}
 void Proto_Monster::set_scal(::google::protobuf::int32 value) {
  
  scal_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.scal)
}

// optional int32 exp = 5;
void Proto_Monster::clear_exp() {
  exp_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::exp() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.exp)
  return exp_;
}
 void Proto_Monster::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.exp)
}

// optional .gt_msg.Object_Type_Enum objType = 6;
void Proto_Monster::clear_objtype() {
  objtype_ = 0;
}
 ::gt_msg::Object_Type_Enum Proto_Monster::objtype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.objType)
  return static_cast< ::gt_msg::Object_Type_Enum >(objtype_);
}
 void Proto_Monster::set_objtype(::gt_msg::Object_Type_Enum value) {
  
  objtype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.objType)
}

// optional string modleName = 7;
void Proto_Monster::clear_modlename() {
  modlename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Monster::modlename() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.modleName)
  return modlename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Monster::set_modlename(const ::std::string& value) {
  
  modlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.modleName)
}
 void Proto_Monster::set_modlename(const char* value) {
  
  modlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Monster.modleName)
}
 void Proto_Monster::set_modlename(const char* value, size_t size) {
  
  modlename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Monster.modleName)
}
 ::std::string* Proto_Monster::mutable_modlename() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Monster.modleName)
  return modlename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Monster::release_modlename() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Monster.modleName)
  
  return modlename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Monster::set_allocated_modlename(::std::string* modlename) {
  if (modlename != NULL) {
    
  } else {
    
  }
  modlename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modlename);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Monster.modleName)
}

// optional int32 level = 8;
void Proto_Monster::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::level() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.level)
  return level_;
}
 void Proto_Monster::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.level)
}

// optional int32 maxHp = 9;
void Proto_Monster::clear_maxhp() {
  maxhp_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::maxhp() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.maxHp)
  return maxhp_;
}
 void Proto_Monster::set_maxhp(::google::protobuf::int32 value) {
  
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.maxHp)
}

// optional int32 attack = 10;
void Proto_Monster::clear_attack() {
  attack_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::attack() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.attack)
  return attack_;
}
 void Proto_Monster::set_attack(::google::protobuf::int32 value) {
  
  attack_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.attack)
}

// optional int32 magicAtk = 11;
void Proto_Monster::clear_magicatk() {
  magicatk_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::magicatk() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.magicAtk)
  return magicatk_;
}
 void Proto_Monster::set_magicatk(::google::protobuf::int32 value) {
  
  magicatk_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.magicAtk)
}

// optional int32 physicsDef = 12;
void Proto_Monster::clear_physicsdef() {
  physicsdef_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::physicsdef() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.physicsDef)
  return physicsdef_;
}
 void Proto_Monster::set_physicsdef(::google::protobuf::int32 value) {
  
  physicsdef_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.physicsDef)
}

// optional int32 magicDef = 13;
void Proto_Monster::clear_magicdef() {
  magicdef_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::magicdef() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.magicDef)
  return magicdef_;
}
 void Proto_Monster::set_magicdef(::google::protobuf::int32 value) {
  
  magicdef_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.magicDef)
}

// optional float hitRate = 14;
void Proto_Monster::clear_hitrate() {
  hitrate_ = 0;
}
 float Proto_Monster::hitrate() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.hitRate)
  return hitrate_;
}
 void Proto_Monster::set_hitrate(float value) {
  
  hitrate_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.hitRate)
}

// optional float dodge = 15;
void Proto_Monster::clear_dodge() {
  dodge_ = 0;
}
 float Proto_Monster::dodge() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.dodge)
  return dodge_;
}
 void Proto_Monster::set_dodge(float value) {
  
  dodge_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.dodge)
}

// optional float burstsRate = 16;
void Proto_Monster::clear_burstsrate() {
  burstsrate_ = 0;
}
 float Proto_Monster::burstsrate() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.burstsRate)
  return burstsrate_;
}
 void Proto_Monster::set_burstsrate(float value) {
  
  burstsrate_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.burstsRate)
}

// optional int32 moveSpeed = 17;
void Proto_Monster::clear_movespeed() {
  movespeed_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::movespeed() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.moveSpeed)
  return movespeed_;
}
 void Proto_Monster::set_movespeed(::google::protobuf::int32 value) {
  
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.moveSpeed)
}

// optional int32 aiID = 18;
void Proto_Monster::clear_aiid() {
  aiid_ = 0;
}
 ::google::protobuf::int32 Proto_Monster::aiid() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.aiID)
  return aiid_;
}
 void Proto_Monster::set_aiid(::google::protobuf::int32 value) {
  
  aiid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.aiID)
}

// optional float actionDistance = 19;
void Proto_Monster::clear_actiondistance() {
  actiondistance_ = 0;
}
 float Proto_Monster::actiondistance() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.actionDistance)
  return actiondistance_;
}
 void Proto_Monster::set_actiondistance(float value) {
  
  actiondistance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.actionDistance)
}

// optional float minActionTime = 20;
void Proto_Monster::clear_minactiontime() {
  minactiontime_ = 0;
}
 float Proto_Monster::minactiontime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.minActionTime)
  return minactiontime_;
}
 void Proto_Monster::set_minactiontime(float value) {
  
  minactiontime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.minActionTime)
}

// repeated .gt_msg.Proto_SkillData skillList = 21;
int Proto_Monster::skilllist_size() const {
  return skilllist_.size();
}
void Proto_Monster::clear_skilllist() {
  skilllist_.Clear();
}
const ::gt_msg::Proto_SkillData& Proto_Monster::skilllist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.skillList)
  return skilllist_.Get(index);
}
::gt_msg::Proto_SkillData* Proto_Monster::mutable_skilllist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Monster.skillList)
  return skilllist_.Mutable(index);
}
::gt_msg::Proto_SkillData* Proto_Monster::add_skilllist() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_Monster.skillList)
  return skilllist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
Proto_Monster::mutable_skilllist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_Monster.skillList)
  return &skilllist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
Proto_Monster::skilllist() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_Monster.skillList)
  return skilllist_;
}

// optional string birthEffectName = 22;
void Proto_Monster::clear_birtheffectname() {
  birtheffectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Monster::birtheffectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Monster.birthEffectName)
  return birtheffectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Monster::set_birtheffectname(const ::std::string& value) {
  
  birtheffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Monster.birthEffectName)
}
 void Proto_Monster::set_birtheffectname(const char* value) {
  
  birtheffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Monster.birthEffectName)
}
 void Proto_Monster::set_birtheffectname(const char* value, size_t size) {
  
  birtheffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Monster.birthEffectName)
}
 ::std::string* Proto_Monster::mutable_birtheffectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Monster.birthEffectName)
  return birtheffectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Monster::release_birtheffectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Monster.birthEffectName)
  
  return birtheffectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Monster::set_allocated_birtheffectname(::std::string* birtheffectname) {
  if (birtheffectname != NULL) {
    
  } else {
    
  }
  birtheffectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birtheffectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Monster.birthEffectName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_MonsterList::kDicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_MonsterList::Proto_MonsterList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_MonsterList)
}

void Proto_MonsterList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_MonsterList::Proto_MonsterList(const Proto_MonsterList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_MonsterList)
}

void Proto_MonsterList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Proto_MonsterList::~Proto_MonsterList() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_MonsterList)
  SharedDtor();
}

void Proto_MonsterList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_MonsterList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_MonsterList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_MonsterList_descriptor_;
}

const Proto_MonsterList& Proto_MonsterList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_MonsterList* Proto_MonsterList::default_instance_ = NULL;

Proto_MonsterList* Proto_MonsterList::New(::google::protobuf::Arena* arena) const {
  Proto_MonsterList* n = new Proto_MonsterList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_MonsterList::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_MonsterList)
  dic_.Clear();
}

bool Proto_MonsterList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_MonsterList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.Proto_Monster dic = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_dic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_dic;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_MonsterList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_MonsterList)
  return false;
#undef DO_
}

void Proto_MonsterList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_MonsterList)
  // repeated .gt_msg.Proto_Monster dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dic(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_MonsterList)
}

::google::protobuf::uint8* Proto_MonsterList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_MonsterList)
  // repeated .gt_msg.Proto_Monster dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dic(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_MonsterList)
  return target;
}

int Proto_MonsterList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_MonsterList)
  int total_size = 0;

  // repeated .gt_msg.Proto_Monster dic = 1;
  total_size += 1 * this->dic_size();
  for (int i = 0; i < this->dic_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dic(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_MonsterList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_MonsterList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_MonsterList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_MonsterList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_MonsterList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_MonsterList)
    MergeFrom(*source);
  }
}

void Proto_MonsterList::MergeFrom(const Proto_MonsterList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_MonsterList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  dic_.MergeFrom(from.dic_);
}

void Proto_MonsterList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_MonsterList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_MonsterList::CopyFrom(const Proto_MonsterList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_MonsterList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_MonsterList::IsInitialized() const {

  return true;
}

void Proto_MonsterList::Swap(Proto_MonsterList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_MonsterList::InternalSwap(Proto_MonsterList* other) {
  dic_.UnsafeArenaSwap(&other->dic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_MonsterList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_MonsterList_descriptor_;
  metadata.reflection = Proto_MonsterList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_MonsterList

// repeated .gt_msg.Proto_Monster dic = 1;
int Proto_MonsterList::dic_size() const {
  return dic_.size();
}
void Proto_MonsterList::clear_dic() {
  dic_.Clear();
}
const ::gt_msg::Proto_Monster& Proto_MonsterList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_MonsterList.dic)
  return dic_.Get(index);
}
::gt_msg::Proto_Monster* Proto_MonsterList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_MonsterList.dic)
  return dic_.Mutable(index);
}
::gt_msg::Proto_Monster* Proto_MonsterList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_MonsterList.dic)
  return dic_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Monster >*
Proto_MonsterList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_MonsterList.dic)
  return &dic_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Monster >&
Proto_MonsterList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_MonsterList.dic)
  return dic_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_BuffData::kIdFieldNumber;
const int Proto_BuffData::kLevFieldNumber;
const int Proto_BuffData::kTimeFieldNumber;
const int Proto_BuffData::kTargetTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_BuffData::Proto_BuffData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_BuffData)
}

void Proto_BuffData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_BuffData::Proto_BuffData(const Proto_BuffData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_BuffData)
}

void Proto_BuffData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  lev_ = 0;
  time_ = 0;
  targettype_ = 0;
}

Proto_BuffData::~Proto_BuffData() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_BuffData)
  SharedDtor();
}

void Proto_BuffData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_BuffData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_BuffData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_BuffData_descriptor_;
}

const Proto_BuffData& Proto_BuffData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_BuffData* Proto_BuffData::default_instance_ = NULL;

Proto_BuffData* Proto_BuffData::New(::google::protobuf::Arena* arena) const {
  Proto_BuffData* n = new Proto_BuffData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_BuffData::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_BuffData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Proto_BuffData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_BuffData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, targettype_);

#undef ZR_HELPER_
#undef ZR_

}

bool Proto_BuffData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_BuffData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_lev;
        break;
      }

      // optional int32 lev = 2;
      case 2: {
        if (tag == 16) {
         parse_lev:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lev_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_time;
        break;
      }

      // optional float time = 3;
      case 3: {
        if (tag == 29) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_targetType;
        break;
      }

      // optional int32 targetType = 4;
      case 4: {
        if (tag == 32) {
         parse_targetType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targettype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_BuffData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_BuffData)
  return false;
#undef DO_
}

void Proto_BuffData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_BuffData)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 lev = 2;
  if (this->lev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lev(), output);
  }

  // optional float time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->time(), output);
  }

  // optional int32 targetType = 4;
  if (this->targettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->targettype(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_BuffData)
}

::google::protobuf::uint8* Proto_BuffData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_BuffData)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 lev = 2;
  if (this->lev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lev(), target);
  }

  // optional float time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->time(), target);
  }

  // optional int32 targetType = 4;
  if (this->targettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->targettype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_BuffData)
  return target;
}

int Proto_BuffData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_BuffData)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int32 lev = 2;
  if (this->lev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lev());
  }

  // optional float time = 3;
  if (this->time() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 targetType = 4;
  if (this->targettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targettype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_BuffData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_BuffData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_BuffData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_BuffData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_BuffData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_BuffData)
    MergeFrom(*source);
  }
}

void Proto_BuffData::MergeFrom(const Proto_BuffData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_BuffData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.lev() != 0) {
    set_lev(from.lev());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.targettype() != 0) {
    set_targettype(from.targettype());
  }
}

void Proto_BuffData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_BuffData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_BuffData::CopyFrom(const Proto_BuffData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_BuffData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_BuffData::IsInitialized() const {

  return true;
}

void Proto_BuffData::Swap(Proto_BuffData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_BuffData::InternalSwap(Proto_BuffData* other) {
  std::swap(id_, other->id_);
  std::swap(lev_, other->lev_);
  std::swap(time_, other->time_);
  std::swap(targettype_, other->targettype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_BuffData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_BuffData_descriptor_;
  metadata.reflection = Proto_BuffData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_BuffData

// optional int32 id = 1;
void Proto_BuffData::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Proto_BuffData::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BuffData.id)
  return id_;
}
 void Proto_BuffData::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BuffData.id)
}

// optional int32 lev = 2;
void Proto_BuffData::clear_lev() {
  lev_ = 0;
}
 ::google::protobuf::int32 Proto_BuffData::lev() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BuffData.lev)
  return lev_;
}
 void Proto_BuffData::set_lev(::google::protobuf::int32 value) {
  
  lev_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BuffData.lev)
}

// optional float time = 3;
void Proto_BuffData::clear_time() {
  time_ = 0;
}
 float Proto_BuffData::time() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BuffData.time)
  return time_;
}
 void Proto_BuffData::set_time(float value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BuffData.time)
}

// optional int32 targetType = 4;
void Proto_BuffData::clear_targettype() {
  targettype_ = 0;
}
 ::google::protobuf::int32 Proto_BuffData::targettype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BuffData.targetType)
  return targettype_;
}
 void Proto_BuffData::set_targettype(::google::protobuf::int32 value) {
  
  targettype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BuffData.targetType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_Skill::kIdFieldNumber;
const int Proto_Skill::kNameFieldNumber;
const int Proto_Skill::kDescriptionFieldNumber;
const int Proto_Skill::kMaxLevelFieldNumber;
const int Proto_Skill::kTypeFieldNumber;
const int Proto_Skill::kRangeTypeFieldNumber;
const int Proto_Skill::kEffectTypeFieldNumber;
const int Proto_Skill::kDamageTypeFieldNumber;
const int Proto_Skill::kBreakFieldNumber;
const int Proto_Skill::kIsNeedTargetFieldNumber;
const int Proto_Skill::kConsumeDanderFieldNumber;
const int Proto_Skill::kEffectIDFieldNumber;
const int Proto_Skill::kIntonateTimeFieldNumber;
const int Proto_Skill::kRangeFieldNumber;
const int Proto_Skill::kLevRangeFieldNumber;
const int Proto_Skill::kCastDistanceFieldNumber;
const int Proto_Skill::kLevCastDistanceFieldNumber;
const int Proto_Skill::kCoolingTimeFieldNumber;
const int Proto_Skill::kLevCoolingTimeFieldNumber;
const int Proto_Skill::kStandingTimeFieldNumber;
const int Proto_Skill::kLevStandingTimeFieldNumber;
const int Proto_Skill::kDamageFieldNumber;
const int Proto_Skill::kLevDamageFieldNumber;
const int Proto_Skill::kPercentFieldNumber;
const int Proto_Skill::kLevPercentFieldNumber;
const int Proto_Skill::kBuffListFieldNumber;
const int Proto_Skill::kSoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_Skill::Proto_Skill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_Skill)
}

void Proto_Skill::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  bufflist_ = const_cast< ::gt_msg::Proto_BuffData*>(&::gt_msg::Proto_BuffData::default_instance());
}

Proto_Skill::Proto_Skill(const Proto_Skill& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_Skill)
}

void Proto_Skill::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxlevel_ = 0;
  type_ = 0;
  rangetype_ = 0;
  effecttype_ = 0;
  damagetype_ = 0;
  break__ = false;
  isneedtarget_ = false;
  consumedander_ = 0;
  effectid_ = 0;
  intonatetime_ = 0;
  range_ = 0;
  levrange_ = 0;
  castdistance_ = 0;
  levcastdistance_ = 0;
  coolingtime_ = 0;
  levcoolingtime_ = 0;
  standingtime_ = 0;
  levstandingtime_ = 0;
  damage_ = 0;
  levdamage_ = 0;
  percent_ = 0;
  levpercent_ = 0;
  bufflist_ = NULL;
  sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Proto_Skill::~Proto_Skill() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_Skill)
  SharedDtor();
}

void Proto_Skill::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sound_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete bufflist_;
  }
}

void Proto_Skill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_Skill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_Skill_descriptor_;
}

const Proto_Skill& Proto_Skill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_Skill* Proto_Skill::default_instance_ = NULL;

Proto_Skill* Proto_Skill::New(::google::protobuf::Arena* arena) const {
  Proto_Skill* n = new Proto_Skill;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_Skill::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_Skill)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Proto_Skill, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_Skill*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, maxlevel_);
  ZR_(type_, damagetype_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(break__, castdistance_);
  ZR_(levcastdistance_, percent_);
  levpercent_ = 0;
  if (GetArenaNoVirtual() == NULL && bufflist_ != NULL) delete bufflist_;
  bufflist_ = NULL;
  sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Proto_Skill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_Skill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Skill.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional string description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Skill.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maxLevel;
        break;
      }

      // optional int32 maxLevel = 4;
      case 4: {
        if (tag == 32) {
         parse_maxLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .gt_msg.SkillType type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::gt_msg::SkillType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_rangeType;
        break;
      }

      // optional .gt_msg.RangeType rangeType = 6;
      case 6: {
        if (tag == 48) {
         parse_rangeType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rangetype(static_cast< ::gt_msg::RangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_effectType;
        break;
      }

      // optional .gt_msg.SkillEffect_Type effectType = 7;
      case 7: {
        if (tag == 56) {
         parse_effectType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_effecttype(static_cast< ::gt_msg::SkillEffect_Type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_damageType;
        break;
      }

      // optional .gt_msg.DamageType damageType = 8;
      case 8: {
        if (tag == 64) {
         parse_damageType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_damagetype(static_cast< ::gt_msg::DamageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_break;
        break;
      }

      // optional bool break = 9;
      case 9: {
        if (tag == 72) {
         parse_break:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &break__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_isNeedTarget;
        break;
      }

      // optional bool isNeedTarget = 10;
      case 10: {
        if (tag == 80) {
         parse_isNeedTarget:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isneedtarget_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_consumeDander;
        break;
      }

      // optional int32 consumeDander = 11;
      case 11: {
        if (tag == 88) {
         parse_consumeDander:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &consumedander_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_effectID;
        break;
      }

      // optional int32 effectID = 12;
      case 12: {
        if (tag == 96) {
         parse_effectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effectid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(109)) goto parse_intonateTime;
        break;
      }

      // optional float intonateTime = 13;
      case 13: {
        if (tag == 109) {
         parse_intonateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intonatetime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(117)) goto parse_range;
        break;
      }

      // optional float range = 14;
      case 14: {
        if (tag == 117) {
         parse_range:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &range_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(125)) goto parse_levRange;
        break;
      }

      // optional float levRange = 15;
      case 15: {
        if (tag == 125) {
         parse_levRange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &levrange_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(133)) goto parse_castDistance;
        break;
      }

      // optional float castDistance = 16;
      case 16: {
        if (tag == 133) {
         parse_castDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &castdistance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(141)) goto parse_levCastDistance;
        break;
      }

      // optional float levCastDistance = 17;
      case 17: {
        if (tag == 141) {
         parse_levCastDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &levcastdistance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(149)) goto parse_coolingTime;
        break;
      }

      // optional float coolingTime = 18;
      case 18: {
        if (tag == 149) {
         parse_coolingTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &coolingtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(157)) goto parse_levCoolingTime;
        break;
      }

      // optional float levCoolingTime = 19;
      case 19: {
        if (tag == 157) {
         parse_levCoolingTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &levcoolingtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(165)) goto parse_standingTime;
        break;
      }

      // optional float standingTime = 20;
      case 20: {
        if (tag == 165) {
         parse_standingTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &standingtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(173)) goto parse_levStandingTime;
        break;
      }

      // optional float levStandingTime = 21;
      case 21: {
        if (tag == 173) {
         parse_levStandingTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &levstandingtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(181)) goto parse_damage;
        break;
      }

      // optional float damage = 22;
      case 22: {
        if (tag == 181) {
         parse_damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &damage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(189)) goto parse_levDamage;
        break;
      }

      // optional float levDamage = 23;
      case 23: {
        if (tag == 189) {
         parse_levDamage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &levdamage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(197)) goto parse_percent;
        break;
      }

      // optional float percent = 24;
      case 24: {
        if (tag == 197) {
         parse_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &percent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(205)) goto parse_levPercent;
        break;
      }

      // optional float levPercent = 25;
      case 25: {
        if (tag == 205) {
         parse_levPercent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &levpercent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_buffList;
        break;
      }

      // optional .gt_msg.Proto_BuffData buffList = 26;
      case 26: {
        if (tag == 210) {
         parse_buffList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bufflist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_sound;
        break;
      }

      // optional string sound = 27;
      case 27: {
        if (tag == 218) {
         parse_sound:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sound()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sound().data(), this->sound().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Skill.sound"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_Skill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_Skill)
  return false;
#undef DO_
}

void Proto_Skill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_Skill)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Skill.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Skill.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional int32 maxLevel = 4;
  if (this->maxlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxlevel(), output);
  }

  // optional .gt_msg.SkillType type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // optional .gt_msg.RangeType rangeType = 6;
  if (this->rangetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->rangetype(), output);
  }

  // optional .gt_msg.SkillEffect_Type effectType = 7;
  if (this->effecttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->effecttype(), output);
  }

  // optional .gt_msg.DamageType damageType = 8;
  if (this->damagetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->damagetype(), output);
  }

  // optional bool break = 9;
  if (this->break_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->break_(), output);
  }

  // optional bool isNeedTarget = 10;
  if (this->isneedtarget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isneedtarget(), output);
  }

  // optional int32 consumeDander = 11;
  if (this->consumedander() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->consumedander(), output);
  }

  // optional int32 effectID = 12;
  if (this->effectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->effectid(), output);
  }

  // optional float intonateTime = 13;
  if (this->intonatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->intonatetime(), output);
  }

  // optional float range = 14;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->range(), output);
  }

  // optional float levRange = 15;
  if (this->levrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->levrange(), output);
  }

  // optional float castDistance = 16;
  if (this->castdistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->castdistance(), output);
  }

  // optional float levCastDistance = 17;
  if (this->levcastdistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->levcastdistance(), output);
  }

  // optional float coolingTime = 18;
  if (this->coolingtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->coolingtime(), output);
  }

  // optional float levCoolingTime = 19;
  if (this->levcoolingtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->levcoolingtime(), output);
  }

  // optional float standingTime = 20;
  if (this->standingtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->standingtime(), output);
  }

  // optional float levStandingTime = 21;
  if (this->levstandingtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->levstandingtime(), output);
  }

  // optional float damage = 22;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->damage(), output);
  }

  // optional float levDamage = 23;
  if (this->levdamage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->levdamage(), output);
  }

  // optional float percent = 24;
  if (this->percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->percent(), output);
  }

  // optional float levPercent = 25;
  if (this->levpercent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(25, this->levpercent(), output);
  }

  // optional .gt_msg.Proto_BuffData buffList = 26;
  if (this->has_bufflist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->bufflist_, output);
  }

  // optional string sound = 27;
  if (this->sound().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sound().data(), this->sound().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Skill.sound");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->sound(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_Skill)
}

::google::protobuf::uint8* Proto_Skill::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_Skill)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Skill.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Skill.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional int32 maxLevel = 4;
  if (this->maxlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxlevel(), target);
  }

  // optional .gt_msg.SkillType type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // optional .gt_msg.RangeType rangeType = 6;
  if (this->rangetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->rangetype(), target);
  }

  // optional .gt_msg.SkillEffect_Type effectType = 7;
  if (this->effecttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->effecttype(), target);
  }

  // optional .gt_msg.DamageType damageType = 8;
  if (this->damagetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->damagetype(), target);
  }

  // optional bool break = 9;
  if (this->break_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->break_(), target);
  }

  // optional bool isNeedTarget = 10;
  if (this->isneedtarget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->isneedtarget(), target);
  }

  // optional int32 consumeDander = 11;
  if (this->consumedander() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->consumedander(), target);
  }

  // optional int32 effectID = 12;
  if (this->effectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->effectid(), target);
  }

  // optional float intonateTime = 13;
  if (this->intonatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->intonatetime(), target);
  }

  // optional float range = 14;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->range(), target);
  }

  // optional float levRange = 15;
  if (this->levrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->levrange(), target);
  }

  // optional float castDistance = 16;
  if (this->castdistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->castdistance(), target);
  }

  // optional float levCastDistance = 17;
  if (this->levcastdistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->levcastdistance(), target);
  }

  // optional float coolingTime = 18;
  if (this->coolingtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->coolingtime(), target);
  }

  // optional float levCoolingTime = 19;
  if (this->levcoolingtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->levcoolingtime(), target);
  }

  // optional float standingTime = 20;
  if (this->standingtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->standingtime(), target);
  }

  // optional float levStandingTime = 21;
  if (this->levstandingtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->levstandingtime(), target);
  }

  // optional float damage = 22;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->damage(), target);
  }

  // optional float levDamage = 23;
  if (this->levdamage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->levdamage(), target);
  }

  // optional float percent = 24;
  if (this->percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->percent(), target);
  }

  // optional float levPercent = 25;
  if (this->levpercent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(25, this->levpercent(), target);
  }

  // optional .gt_msg.Proto_BuffData buffList = 26;
  if (this->has_bufflist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->bufflist_, false, target);
  }

  // optional string sound = 27;
  if (this->sound().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sound().data(), this->sound().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Skill.sound");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->sound(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_Skill)
  return target;
}

int Proto_Skill::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_Skill)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional int32 maxLevel = 4;
  if (this->maxlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxlevel());
  }

  // optional .gt_msg.SkillType type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional .gt_msg.RangeType rangeType = 6;
  if (this->rangetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rangetype());
  }

  // optional .gt_msg.SkillEffect_Type effectType = 7;
  if (this->effecttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->effecttype());
  }

  // optional .gt_msg.DamageType damageType = 8;
  if (this->damagetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->damagetype());
  }

  // optional bool break = 9;
  if (this->break_() != 0) {
    total_size += 1 + 1;
  }

  // optional bool isNeedTarget = 10;
  if (this->isneedtarget() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 consumeDander = 11;
  if (this->consumedander() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->consumedander());
  }

  // optional int32 effectID = 12;
  if (this->effectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->effectid());
  }

  // optional float intonateTime = 13;
  if (this->intonatetime() != 0) {
    total_size += 1 + 4;
  }

  // optional float range = 14;
  if (this->range() != 0) {
    total_size += 1 + 4;
  }

  // optional float levRange = 15;
  if (this->levrange() != 0) {
    total_size += 1 + 4;
  }

  // optional float castDistance = 16;
  if (this->castdistance() != 0) {
    total_size += 2 + 4;
  }

  // optional float levCastDistance = 17;
  if (this->levcastdistance() != 0) {
    total_size += 2 + 4;
  }

  // optional float coolingTime = 18;
  if (this->coolingtime() != 0) {
    total_size += 2 + 4;
  }

  // optional float levCoolingTime = 19;
  if (this->levcoolingtime() != 0) {
    total_size += 2 + 4;
  }

  // optional float standingTime = 20;
  if (this->standingtime() != 0) {
    total_size += 2 + 4;
  }

  // optional float levStandingTime = 21;
  if (this->levstandingtime() != 0) {
    total_size += 2 + 4;
  }

  // optional float damage = 22;
  if (this->damage() != 0) {
    total_size += 2 + 4;
  }

  // optional float levDamage = 23;
  if (this->levdamage() != 0) {
    total_size += 2 + 4;
  }

  // optional float percent = 24;
  if (this->percent() != 0) {
    total_size += 2 + 4;
  }

  // optional float levPercent = 25;
  if (this->levpercent() != 0) {
    total_size += 2 + 4;
  }

  // optional .gt_msg.Proto_BuffData buffList = 26;
  if (this->has_bufflist()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bufflist_);
  }

  // optional string sound = 27;
  if (this->sound().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sound());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_Skill::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_Skill)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_Skill* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_Skill>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_Skill)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_Skill)
    MergeFrom(*source);
  }
}

void Proto_Skill::MergeFrom(const Proto_Skill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_Skill)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.maxlevel() != 0) {
    set_maxlevel(from.maxlevel());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.rangetype() != 0) {
    set_rangetype(from.rangetype());
  }
  if (from.effecttype() != 0) {
    set_effecttype(from.effecttype());
  }
  if (from.damagetype() != 0) {
    set_damagetype(from.damagetype());
  }
  if (from.break_() != 0) {
    set_break_(from.break_());
  }
  if (from.isneedtarget() != 0) {
    set_isneedtarget(from.isneedtarget());
  }
  if (from.consumedander() != 0) {
    set_consumedander(from.consumedander());
  }
  if (from.effectid() != 0) {
    set_effectid(from.effectid());
  }
  if (from.intonatetime() != 0) {
    set_intonatetime(from.intonatetime());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.levrange() != 0) {
    set_levrange(from.levrange());
  }
  if (from.castdistance() != 0) {
    set_castdistance(from.castdistance());
  }
  if (from.levcastdistance() != 0) {
    set_levcastdistance(from.levcastdistance());
  }
  if (from.coolingtime() != 0) {
    set_coolingtime(from.coolingtime());
  }
  if (from.levcoolingtime() != 0) {
    set_levcoolingtime(from.levcoolingtime());
  }
  if (from.standingtime() != 0) {
    set_standingtime(from.standingtime());
  }
  if (from.levstandingtime() != 0) {
    set_levstandingtime(from.levstandingtime());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.levdamage() != 0) {
    set_levdamage(from.levdamage());
  }
  if (from.percent() != 0) {
    set_percent(from.percent());
  }
  if (from.levpercent() != 0) {
    set_levpercent(from.levpercent());
  }
  if (from.has_bufflist()) {
    mutable_bufflist()->::gt_msg::Proto_BuffData::MergeFrom(from.bufflist());
  }
  if (from.sound().size() > 0) {

    sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sound_);
  }
}

void Proto_Skill::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_Skill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_Skill::CopyFrom(const Proto_Skill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_Skill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_Skill::IsInitialized() const {

  return true;
}

void Proto_Skill::Swap(Proto_Skill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_Skill::InternalSwap(Proto_Skill* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  std::swap(maxlevel_, other->maxlevel_);
  std::swap(type_, other->type_);
  std::swap(rangetype_, other->rangetype_);
  std::swap(effecttype_, other->effecttype_);
  std::swap(damagetype_, other->damagetype_);
  std::swap(break__, other->break__);
  std::swap(isneedtarget_, other->isneedtarget_);
  std::swap(consumedander_, other->consumedander_);
  std::swap(effectid_, other->effectid_);
  std::swap(intonatetime_, other->intonatetime_);
  std::swap(range_, other->range_);
  std::swap(levrange_, other->levrange_);
  std::swap(castdistance_, other->castdistance_);
  std::swap(levcastdistance_, other->levcastdistance_);
  std::swap(coolingtime_, other->coolingtime_);
  std::swap(levcoolingtime_, other->levcoolingtime_);
  std::swap(standingtime_, other->standingtime_);
  std::swap(levstandingtime_, other->levstandingtime_);
  std::swap(damage_, other->damage_);
  std::swap(levdamage_, other->levdamage_);
  std::swap(percent_, other->percent_);
  std::swap(levpercent_, other->levpercent_);
  std::swap(bufflist_, other->bufflist_);
  sound_.Swap(&other->sound_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_Skill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_Skill_descriptor_;
  metadata.reflection = Proto_Skill_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_Skill

// optional int32 id = 1;
void Proto_Skill::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Proto_Skill::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.id)
  return id_;
}
 void Proto_Skill::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.id)
}

// optional string name = 2;
void Proto_Skill::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Skill::name() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Skill::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.name)
}
 void Proto_Skill::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Skill.name)
}
 void Proto_Skill::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Skill.name)
}
 ::std::string* Proto_Skill::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Skill.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Skill::release_name() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Skill.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Skill::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Skill.name)
}

// optional string description = 3;
void Proto_Skill::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Skill::description() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Skill::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.description)
}
 void Proto_Skill::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Skill.description)
}
 void Proto_Skill::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Skill.description)
}
 ::std::string* Proto_Skill::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Skill.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Skill::release_description() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Skill.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Skill::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Skill.description)
}

// optional int32 maxLevel = 4;
void Proto_Skill::clear_maxlevel() {
  maxlevel_ = 0;
}
 ::google::protobuf::int32 Proto_Skill::maxlevel() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.maxLevel)
  return maxlevel_;
}
 void Proto_Skill::set_maxlevel(::google::protobuf::int32 value) {
  
  maxlevel_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.maxLevel)
}

// optional .gt_msg.SkillType type = 5;
void Proto_Skill::clear_type() {
  type_ = 0;
}
 ::gt_msg::SkillType Proto_Skill::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.type)
  return static_cast< ::gt_msg::SkillType >(type_);
}
 void Proto_Skill::set_type(::gt_msg::SkillType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.type)
}

// optional .gt_msg.RangeType rangeType = 6;
void Proto_Skill::clear_rangetype() {
  rangetype_ = 0;
}
 ::gt_msg::RangeType Proto_Skill::rangetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.rangeType)
  return static_cast< ::gt_msg::RangeType >(rangetype_);
}
 void Proto_Skill::set_rangetype(::gt_msg::RangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.rangeType)
}

// optional .gt_msg.SkillEffect_Type effectType = 7;
void Proto_Skill::clear_effecttype() {
  effecttype_ = 0;
}
 ::gt_msg::SkillEffect_Type Proto_Skill::effecttype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.effectType)
  return static_cast< ::gt_msg::SkillEffect_Type >(effecttype_);
}
 void Proto_Skill::set_effecttype(::gt_msg::SkillEffect_Type value) {
  
  effecttype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.effectType)
}

// optional .gt_msg.DamageType damageType = 8;
void Proto_Skill::clear_damagetype() {
  damagetype_ = 0;
}
 ::gt_msg::DamageType Proto_Skill::damagetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.damageType)
  return static_cast< ::gt_msg::DamageType >(damagetype_);
}
 void Proto_Skill::set_damagetype(::gt_msg::DamageType value) {
  
  damagetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.damageType)
}

// optional bool break = 9;
void Proto_Skill::clear_break_() {
  break__ = false;
}
 bool Proto_Skill::break_() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.break)
  return break__;
}
 void Proto_Skill::set_break_(bool value) {
  
  break__ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.break)
}

// optional bool isNeedTarget = 10;
void Proto_Skill::clear_isneedtarget() {
  isneedtarget_ = false;
}
 bool Proto_Skill::isneedtarget() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.isNeedTarget)
  return isneedtarget_;
}
 void Proto_Skill::set_isneedtarget(bool value) {
  
  isneedtarget_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.isNeedTarget)
}

// optional int32 consumeDander = 11;
void Proto_Skill::clear_consumedander() {
  consumedander_ = 0;
}
 ::google::protobuf::int32 Proto_Skill::consumedander() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.consumeDander)
  return consumedander_;
}
 void Proto_Skill::set_consumedander(::google::protobuf::int32 value) {
  
  consumedander_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.consumeDander)
}

// optional int32 effectID = 12;
void Proto_Skill::clear_effectid() {
  effectid_ = 0;
}
 ::google::protobuf::int32 Proto_Skill::effectid() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.effectID)
  return effectid_;
}
 void Proto_Skill::set_effectid(::google::protobuf::int32 value) {
  
  effectid_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.effectID)
}

// optional float intonateTime = 13;
void Proto_Skill::clear_intonatetime() {
  intonatetime_ = 0;
}
 float Proto_Skill::intonatetime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.intonateTime)
  return intonatetime_;
}
 void Proto_Skill::set_intonatetime(float value) {
  
  intonatetime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.intonateTime)
}

// optional float range = 14;
void Proto_Skill::clear_range() {
  range_ = 0;
}
 float Proto_Skill::range() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.range)
  return range_;
}
 void Proto_Skill::set_range(float value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.range)
}

// optional float levRange = 15;
void Proto_Skill::clear_levrange() {
  levrange_ = 0;
}
 float Proto_Skill::levrange() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levRange)
  return levrange_;
}
 void Proto_Skill::set_levrange(float value) {
  
  levrange_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levRange)
}

// optional float castDistance = 16;
void Proto_Skill::clear_castdistance() {
  castdistance_ = 0;
}
 float Proto_Skill::castdistance() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.castDistance)
  return castdistance_;
}
 void Proto_Skill::set_castdistance(float value) {
  
  castdistance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.castDistance)
}

// optional float levCastDistance = 17;
void Proto_Skill::clear_levcastdistance() {
  levcastdistance_ = 0;
}
 float Proto_Skill::levcastdistance() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levCastDistance)
  return levcastdistance_;
}
 void Proto_Skill::set_levcastdistance(float value) {
  
  levcastdistance_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levCastDistance)
}

// optional float coolingTime = 18;
void Proto_Skill::clear_coolingtime() {
  coolingtime_ = 0;
}
 float Proto_Skill::coolingtime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.coolingTime)
  return coolingtime_;
}
 void Proto_Skill::set_coolingtime(float value) {
  
  coolingtime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.coolingTime)
}

// optional float levCoolingTime = 19;
void Proto_Skill::clear_levcoolingtime() {
  levcoolingtime_ = 0;
}
 float Proto_Skill::levcoolingtime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levCoolingTime)
  return levcoolingtime_;
}
 void Proto_Skill::set_levcoolingtime(float value) {
  
  levcoolingtime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levCoolingTime)
}

// optional float standingTime = 20;
void Proto_Skill::clear_standingtime() {
  standingtime_ = 0;
}
 float Proto_Skill::standingtime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.standingTime)
  return standingtime_;
}
 void Proto_Skill::set_standingtime(float value) {
  
  standingtime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.standingTime)
}

// optional float levStandingTime = 21;
void Proto_Skill::clear_levstandingtime() {
  levstandingtime_ = 0;
}
 float Proto_Skill::levstandingtime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levStandingTime)
  return levstandingtime_;
}
 void Proto_Skill::set_levstandingtime(float value) {
  
  levstandingtime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levStandingTime)
}

// optional float damage = 22;
void Proto_Skill::clear_damage() {
  damage_ = 0;
}
 float Proto_Skill::damage() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.damage)
  return damage_;
}
 void Proto_Skill::set_damage(float value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.damage)
}

// optional float levDamage = 23;
void Proto_Skill::clear_levdamage() {
  levdamage_ = 0;
}
 float Proto_Skill::levdamage() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levDamage)
  return levdamage_;
}
 void Proto_Skill::set_levdamage(float value) {
  
  levdamage_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levDamage)
}

// optional float percent = 24;
void Proto_Skill::clear_percent() {
  percent_ = 0;
}
 float Proto_Skill::percent() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.percent)
  return percent_;
}
 void Proto_Skill::set_percent(float value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.percent)
}

// optional float levPercent = 25;
void Proto_Skill::clear_levpercent() {
  levpercent_ = 0;
}
 float Proto_Skill::levpercent() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.levPercent)
  return levpercent_;
}
 void Proto_Skill::set_levpercent(float value) {
  
  levpercent_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.levPercent)
}

// optional .gt_msg.Proto_BuffData buffList = 26;
bool Proto_Skill::has_bufflist() const {
  return !_is_default_instance_ && bufflist_ != NULL;
}
void Proto_Skill::clear_bufflist() {
  if (GetArenaNoVirtual() == NULL && bufflist_ != NULL) delete bufflist_;
  bufflist_ = NULL;
}
const ::gt_msg::Proto_BuffData& Proto_Skill::bufflist() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.buffList)
  return bufflist_ != NULL ? *bufflist_ : *default_instance_->bufflist_;
}
::gt_msg::Proto_BuffData* Proto_Skill::mutable_bufflist() {
  
  if (bufflist_ == NULL) {
    bufflist_ = new ::gt_msg::Proto_BuffData;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Skill.buffList)
  return bufflist_;
}
::gt_msg::Proto_BuffData* Proto_Skill::release_bufflist() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Skill.buffList)
  
  ::gt_msg::Proto_BuffData* temp = bufflist_;
  bufflist_ = NULL;
  return temp;
}
void Proto_Skill::set_allocated_bufflist(::gt_msg::Proto_BuffData* bufflist) {
  delete bufflist_;
  bufflist_ = bufflist;
  if (bufflist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Skill.buffList)
}

// optional string sound = 27;
void Proto_Skill::clear_sound() {
  sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Skill::sound() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Skill.sound)
  return sound_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Skill::set_sound(const ::std::string& value) {
  
  sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Skill.sound)
}
 void Proto_Skill::set_sound(const char* value) {
  
  sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Skill.sound)
}
 void Proto_Skill::set_sound(const char* value, size_t size) {
  
  sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Skill.sound)
}
 ::std::string* Proto_Skill::mutable_sound() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Skill.sound)
  return sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Skill::release_sound() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Skill.sound)
  
  return sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Skill::set_allocated_sound(::std::string* sound) {
  if (sound != NULL) {
    
  } else {
    
  }
  sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sound);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Skill.sound)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_SkillList::kDicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_SkillList::Proto_SkillList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_SkillList)
}

void Proto_SkillList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_SkillList::Proto_SkillList(const Proto_SkillList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_SkillList)
}

void Proto_SkillList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Proto_SkillList::~Proto_SkillList() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_SkillList)
  SharedDtor();
}

void Proto_SkillList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_SkillList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SkillList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SkillList_descriptor_;
}

const Proto_SkillList& Proto_SkillList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_SkillList* Proto_SkillList::default_instance_ = NULL;

Proto_SkillList* Proto_SkillList::New(::google::protobuf::Arena* arena) const {
  Proto_SkillList* n = new Proto_SkillList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_SkillList::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_SkillList)
  dic_.Clear();
}

bool Proto_SkillList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_SkillList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.Proto_Skill dic = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_dic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_dic;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_SkillList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_SkillList)
  return false;
#undef DO_
}

void Proto_SkillList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_SkillList)
  // repeated .gt_msg.Proto_Skill dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dic(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_SkillList)
}

::google::protobuf::uint8* Proto_SkillList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_SkillList)
  // repeated .gt_msg.Proto_Skill dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dic(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_SkillList)
  return target;
}

int Proto_SkillList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_SkillList)
  int total_size = 0;

  // repeated .gt_msg.Proto_Skill dic = 1;
  total_size += 1 * this->dic_size();
  for (int i = 0; i < this->dic_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dic(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SkillList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_SkillList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_SkillList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_SkillList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_SkillList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_SkillList)
    MergeFrom(*source);
  }
}

void Proto_SkillList::MergeFrom(const Proto_SkillList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_SkillList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  dic_.MergeFrom(from.dic_);
}

void Proto_SkillList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_SkillList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SkillList::CopyFrom(const Proto_SkillList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_SkillList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SkillList::IsInitialized() const {

  return true;
}

void Proto_SkillList::Swap(Proto_SkillList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_SkillList::InternalSwap(Proto_SkillList* other) {
  dic_.UnsafeArenaSwap(&other->dic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_SkillList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SkillList_descriptor_;
  metadata.reflection = Proto_SkillList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_SkillList

// repeated .gt_msg.Proto_Skill dic = 1;
int Proto_SkillList::dic_size() const {
  return dic_.size();
}
void Proto_SkillList::clear_dic() {
  dic_.Clear();
}
const ::gt_msg::Proto_Skill& Proto_SkillList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillList.dic)
  return dic_.Get(index);
}
::gt_msg::Proto_Skill* Proto_SkillList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillList.dic)
  return dic_.Mutable(index);
}
::gt_msg::Proto_Skill* Proto_SkillList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_SkillList.dic)
  return dic_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Skill >*
Proto_SkillList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_SkillList.dic)
  return &dic_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Skill >&
Proto_SkillList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_SkillList.dic)
  return dic_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_FlyInfo::kEffectNameFieldNumber;
const int Proto_FlyInfo::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_FlyInfo::Proto_FlyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_FlyInfo)
}

void Proto_FlyInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_FlyInfo::Proto_FlyInfo(const Proto_FlyInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_FlyInfo)
}

void Proto_FlyInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  effectname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_ = 0;
}

Proto_FlyInfo::~Proto_FlyInfo() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_FlyInfo)
  SharedDtor();
}

void Proto_FlyInfo::SharedDtor() {
  effectname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Proto_FlyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_FlyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_FlyInfo_descriptor_;
}

const Proto_FlyInfo& Proto_FlyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_FlyInfo* Proto_FlyInfo::default_instance_ = NULL;

Proto_FlyInfo* Proto_FlyInfo::New(::google::protobuf::Arena* arena) const {
  Proto_FlyInfo* n = new Proto_FlyInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_FlyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_FlyInfo)
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_ = 0;
}

bool Proto_FlyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_FlyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string effectName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->effectname().data(), this->effectname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_FlyInfo.effectName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_FlyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_FlyInfo)
  return false;
#undef DO_
}

void Proto_FlyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_FlyInfo)
  // optional string effectName = 1;
  if (this->effectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_FlyInfo.effectName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->effectname(), output);
  }

  // optional int32 num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_FlyInfo)
}

::google::protobuf::uint8* Proto_FlyInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_FlyInfo)
  // optional string effectName = 1;
  if (this->effectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_FlyInfo.effectName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->effectname(), target);
  }

  // optional int32 num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_FlyInfo)
  return target;
}

int Proto_FlyInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_FlyInfo)
  int total_size = 0;

  // optional string effectName = 1;
  if (this->effectname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->effectname());
  }

  // optional int32 num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_FlyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_FlyInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_FlyInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_FlyInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_FlyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_FlyInfo)
    MergeFrom(*source);
  }
}

void Proto_FlyInfo::MergeFrom(const Proto_FlyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_FlyInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.effectname().size() > 0) {

    effectname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effectname_);
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void Proto_FlyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_FlyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_FlyInfo::CopyFrom(const Proto_FlyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_FlyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_FlyInfo::IsInitialized() const {

  return true;
}

void Proto_FlyInfo::Swap(Proto_FlyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_FlyInfo::InternalSwap(Proto_FlyInfo* other) {
  effectname_.Swap(&other->effectname_);
  std::swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_FlyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_FlyInfo_descriptor_;
  metadata.reflection = Proto_FlyInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_FlyInfo

// optional string effectName = 1;
void Proto_FlyInfo::clear_effectname() {
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_FlyInfo::effectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_FlyInfo.effectName)
  return effectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_FlyInfo::set_effectname(const ::std::string& value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_FlyInfo.effectName)
}
 void Proto_FlyInfo::set_effectname(const char* value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_FlyInfo.effectName)
}
 void Proto_FlyInfo::set_effectname(const char* value, size_t size) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_FlyInfo.effectName)
}
 ::std::string* Proto_FlyInfo::mutable_effectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_FlyInfo.effectName)
  return effectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_FlyInfo::release_effectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_FlyInfo.effectName)
  
  return effectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_FlyInfo::set_allocated_effectname(::std::string* effectname) {
  if (effectname != NULL) {
    
  } else {
    
  }
  effectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_FlyInfo.effectName)
}

// optional int32 num = 2;
void Proto_FlyInfo::clear_num() {
  num_ = 0;
}
 ::google::protobuf::int32 Proto_FlyInfo::num() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_FlyInfo.num)
  return num_;
}
 void Proto_FlyInfo::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_FlyInfo.num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_EffectData::kEffectNameFieldNumber;
const int Proto_EffectData::kAddonFieldNumber;
const int Proto_EffectData::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_EffectData::Proto_EffectData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_EffectData)
}

void Proto_EffectData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  offset_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

Proto_EffectData::Proto_EffectData(const Proto_EffectData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_EffectData)
}

void Proto_EffectData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  effectname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addon_ = 0;
  offset_ = NULL;
}

Proto_EffectData::~Proto_EffectData() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_EffectData)
  SharedDtor();
}

void Proto_EffectData::SharedDtor() {
  effectname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete offset_;
  }
}

void Proto_EffectData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_EffectData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_EffectData_descriptor_;
}

const Proto_EffectData& Proto_EffectData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_EffectData* Proto_EffectData::default_instance_ = NULL;

Proto_EffectData* Proto_EffectData::New(::google::protobuf::Arena* arena) const {
  Proto_EffectData* n = new Proto_EffectData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_EffectData::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_EffectData)
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addon_ = 0;
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}

bool Proto_EffectData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_EffectData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string effectName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->effectname().data(), this->effectname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_EffectData.effectName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_addon;
        break;
      }

      // optional .gt_msg.AddonIndexEnum addon = 2;
      case 2: {
        if (tag == 16) {
         parse_addon:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_addon(static_cast< ::gt_msg::AddonIndexEnum >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_offset;
        break;
      }

      // optional .gt_msg.Vec3 offset = 3;
      case 3: {
        if (tag == 26) {
         parse_offset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_offset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_EffectData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_EffectData)
  return false;
#undef DO_
}

void Proto_EffectData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_EffectData)
  // optional string effectName = 1;
  if (this->effectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_EffectData.effectName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->effectname(), output);
  }

  // optional .gt_msg.AddonIndexEnum addon = 2;
  if (this->addon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->addon(), output);
  }

  // optional .gt_msg.Vec3 offset = 3;
  if (this->has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->offset_, output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_EffectData)
}

::google::protobuf::uint8* Proto_EffectData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_EffectData)
  // optional string effectName = 1;
  if (this->effectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_EffectData.effectName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->effectname(), target);
  }

  // optional .gt_msg.AddonIndexEnum addon = 2;
  if (this->addon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->addon(), target);
  }

  // optional .gt_msg.Vec3 offset = 3;
  if (this->has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->offset_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_EffectData)
  return target;
}

int Proto_EffectData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_EffectData)
  int total_size = 0;

  // optional string effectName = 1;
  if (this->effectname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->effectname());
  }

  // optional .gt_msg.AddonIndexEnum addon = 2;
  if (this->addon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->addon());
  }

  // optional .gt_msg.Vec3 offset = 3;
  if (this->has_offset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->offset_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_EffectData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_EffectData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_EffectData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_EffectData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_EffectData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_EffectData)
    MergeFrom(*source);
  }
}

void Proto_EffectData::MergeFrom(const Proto_EffectData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_EffectData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.effectname().size() > 0) {

    effectname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effectname_);
  }
  if (from.addon() != 0) {
    set_addon(from.addon());
  }
  if (from.has_offset()) {
    mutable_offset()->::gt_msg::Vec3::MergeFrom(from.offset());
  }
}

void Proto_EffectData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_EffectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_EffectData::CopyFrom(const Proto_EffectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_EffectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_EffectData::IsInitialized() const {

  return true;
}

void Proto_EffectData::Swap(Proto_EffectData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_EffectData::InternalSwap(Proto_EffectData* other) {
  effectname_.Swap(&other->effectname_);
  std::swap(addon_, other->addon_);
  std::swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_EffectData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_EffectData_descriptor_;
  metadata.reflection = Proto_EffectData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_EffectData

// optional string effectName = 1;
void Proto_EffectData::clear_effectname() {
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_EffectData::effectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectData.effectName)
  return effectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_EffectData::set_effectname(const ::std::string& value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_EffectData.effectName)
}
 void Proto_EffectData::set_effectname(const char* value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_EffectData.effectName)
}
 void Proto_EffectData::set_effectname(const char* value, size_t size) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_EffectData.effectName)
}
 ::std::string* Proto_EffectData::mutable_effectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_EffectData.effectName)
  return effectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_EffectData::release_effectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_EffectData.effectName)
  
  return effectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_EffectData::set_allocated_effectname(::std::string* effectname) {
  if (effectname != NULL) {
    
  } else {
    
  }
  effectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_EffectData.effectName)
}

// optional .gt_msg.AddonIndexEnum addon = 2;
void Proto_EffectData::clear_addon() {
  addon_ = 0;
}
 ::gt_msg::AddonIndexEnum Proto_EffectData::addon() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectData.addon)
  return static_cast< ::gt_msg::AddonIndexEnum >(addon_);
}
 void Proto_EffectData::set_addon(::gt_msg::AddonIndexEnum value) {
  
  addon_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_EffectData.addon)
}

// optional .gt_msg.Vec3 offset = 3;
bool Proto_EffectData::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
void Proto_EffectData::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
const ::gt_msg::Vec3& Proto_EffectData::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectData.offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
::gt_msg::Vec3* Proto_EffectData::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_EffectData.offset)
  return offset_;
}
::gt_msg::Vec3* Proto_EffectData::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_EffectData.offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
void Proto_EffectData::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_EffectData.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_EffectInfo::kAnimationFieldNumber;
const int Proto_EffectInfo::kDurationFieldNumber;
const int Proto_EffectInfo::kEffectListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_EffectInfo::Proto_EffectInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_EffectInfo)
}

void Proto_EffectInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_EffectInfo::Proto_EffectInfo(const Proto_EffectInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_EffectInfo)
}

void Proto_EffectInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  animation_ = 0;
  duration_ = 0;
}

Proto_EffectInfo::~Proto_EffectInfo() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_EffectInfo)
  SharedDtor();
}

void Proto_EffectInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_EffectInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_EffectInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_EffectInfo_descriptor_;
}

const Proto_EffectInfo& Proto_EffectInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_EffectInfo* Proto_EffectInfo::default_instance_ = NULL;

Proto_EffectInfo* Proto_EffectInfo::New(::google::protobuf::Arena* arena) const {
  Proto_EffectInfo* n = new Proto_EffectInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_EffectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_EffectInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Proto_EffectInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_EffectInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(animation_, duration_);

#undef ZR_HELPER_
#undef ZR_

  effectlist_.Clear();
}

bool Proto_EffectInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_EffectInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .gt_msg.AnimationType animation = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_animation(static_cast< ::gt_msg::AnimationType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_duration;
        break;
      }

      // optional float duration = 2;
      case 2: {
        if (tag == 21) {
         parse_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_effectList;
        break;
      }

      // repeated .gt_msg.Proto_EffectData effectList = 3;
      case 3: {
        if (tag == 26) {
         parse_effectList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_effectList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_effectlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_effectList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_EffectInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_EffectInfo)
  return false;
#undef DO_
}

void Proto_EffectInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_EffectInfo)
  // optional .gt_msg.AnimationType animation = 1;
  if (this->animation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->animation(), output);
  }

  // optional float duration = 2;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  // repeated .gt_msg.Proto_EffectData effectList = 3;
  for (unsigned int i = 0, n = this->effectlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->effectlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_EffectInfo)
}

::google::protobuf::uint8* Proto_EffectInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_EffectInfo)
  // optional .gt_msg.AnimationType animation = 1;
  if (this->animation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->animation(), target);
  }

  // optional float duration = 2;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  // repeated .gt_msg.Proto_EffectData effectList = 3;
  for (unsigned int i = 0, n = this->effectlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->effectlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_EffectInfo)
  return target;
}

int Proto_EffectInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_EffectInfo)
  int total_size = 0;

  // optional .gt_msg.AnimationType animation = 1;
  if (this->animation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->animation());
  }

  // optional float duration = 2;
  if (this->duration() != 0) {
    total_size += 1 + 4;
  }

  // repeated .gt_msg.Proto_EffectData effectList = 3;
  total_size += 1 * this->effectlist_size();
  for (int i = 0; i < this->effectlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->effectlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_EffectInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_EffectInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_EffectInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_EffectInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_EffectInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_EffectInfo)
    MergeFrom(*source);
  }
}

void Proto_EffectInfo::MergeFrom(const Proto_EffectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_EffectInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  effectlist_.MergeFrom(from.effectlist_);
  if (from.animation() != 0) {
    set_animation(from.animation());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void Proto_EffectInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_EffectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_EffectInfo::CopyFrom(const Proto_EffectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_EffectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_EffectInfo::IsInitialized() const {

  return true;
}

void Proto_EffectInfo::Swap(Proto_EffectInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_EffectInfo::InternalSwap(Proto_EffectInfo* other) {
  std::swap(animation_, other->animation_);
  std::swap(duration_, other->duration_);
  effectlist_.UnsafeArenaSwap(&other->effectlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_EffectInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_EffectInfo_descriptor_;
  metadata.reflection = Proto_EffectInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_EffectInfo

// optional .gt_msg.AnimationType animation = 1;
void Proto_EffectInfo::clear_animation() {
  animation_ = 0;
}
 ::gt_msg::AnimationType Proto_EffectInfo::animation() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectInfo.animation)
  return static_cast< ::gt_msg::AnimationType >(animation_);
}
 void Proto_EffectInfo::set_animation(::gt_msg::AnimationType value) {
  
  animation_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_EffectInfo.animation)
}

// optional float duration = 2;
void Proto_EffectInfo::clear_duration() {
  duration_ = 0;
}
 float Proto_EffectInfo::duration() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectInfo.duration)
  return duration_;
}
 void Proto_EffectInfo::set_duration(float value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_EffectInfo.duration)
}

// repeated .gt_msg.Proto_EffectData effectList = 3;
int Proto_EffectInfo::effectlist_size() const {
  return effectlist_.size();
}
void Proto_EffectInfo::clear_effectlist() {
  effectlist_.Clear();
}
const ::gt_msg::Proto_EffectData& Proto_EffectInfo::effectlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_EffectInfo.effectList)
  return effectlist_.Get(index);
}
::gt_msg::Proto_EffectData* Proto_EffectInfo::mutable_effectlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_EffectInfo.effectList)
  return effectlist_.Mutable(index);
}
::gt_msg::Proto_EffectData* Proto_EffectInfo::add_effectlist() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_EffectInfo.effectList)
  return effectlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_EffectData >*
Proto_EffectInfo::mutable_effectlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_EffectInfo.effectList)
  return &effectlist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_EffectData >&
Proto_EffectInfo::effectlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_EffectInfo.effectList)
  return effectlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_SkillEffect::kIdFieldNumber;
const int Proto_SkillEffect::kDescriptionFieldNumber;
const int Proto_SkillEffect::kBeatenEffectNameFieldNumber;
const int Proto_SkillEffect::kFlyAddonFieldNumber;
const int Proto_SkillEffect::kFlySpeedFieldNumber;
const int Proto_SkillEffect::kFirstEffectFieldNumber;
const int Proto_SkillEffect::kDamageEffectFieldNumber;
const int Proto_SkillEffect::kDurationEffectFieldNumber;
const int Proto_SkillEffect::kFlyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_SkillEffect::Proto_SkillEffect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_SkillEffect)
}

void Proto_SkillEffect::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  firsteffect_ = const_cast< ::gt_msg::Proto_EffectInfo*>(&::gt_msg::Proto_EffectInfo::default_instance());
  damageeffect_ = const_cast< ::gt_msg::Proto_EffectInfo*>(&::gt_msg::Proto_EffectInfo::default_instance());
  durationeffect_ = const_cast< ::gt_msg::Proto_EffectInfo*>(&::gt_msg::Proto_EffectInfo::default_instance());
  flylist_ = const_cast< ::gt_msg::Proto_FlyInfo*>(&::gt_msg::Proto_FlyInfo::default_instance());
}

Proto_SkillEffect::Proto_SkillEffect(const Proto_SkillEffect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_SkillEffect)
}

void Proto_SkillEffect::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  beateneffectname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flyaddon_ = 0;
  flyspeed_ = 0;
  firsteffect_ = NULL;
  damageeffect_ = NULL;
  durationeffect_ = NULL;
  flylist_ = NULL;
}

Proto_SkillEffect::~Proto_SkillEffect() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_SkillEffect)
  SharedDtor();
}

void Proto_SkillEffect::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  beateneffectname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete firsteffect_;
    delete damageeffect_;
    delete durationeffect_;
    delete flylist_;
  }
}

void Proto_SkillEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SkillEffect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SkillEffect_descriptor_;
}

const Proto_SkillEffect& Proto_SkillEffect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_SkillEffect* Proto_SkillEffect::default_instance_ = NULL;

Proto_SkillEffect* Proto_SkillEffect::New(::google::protobuf::Arena* arena) const {
  Proto_SkillEffect* n = new Proto_SkillEffect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_SkillEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_SkillEffect)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Proto_SkillEffect, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_SkillEffect*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, flyaddon_);
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  beateneffectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flyspeed_ = 0;
  if (GetArenaNoVirtual() == NULL && firsteffect_ != NULL) delete firsteffect_;
  firsteffect_ = NULL;
  if (GetArenaNoVirtual() == NULL && damageeffect_ != NULL) delete damageeffect_;
  damageeffect_ = NULL;
  if (GetArenaNoVirtual() == NULL && durationeffect_ != NULL) delete durationeffect_;
  durationeffect_ = NULL;
  if (GetArenaNoVirtual() == NULL && flylist_ != NULL) delete flylist_;
  flylist_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Proto_SkillEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_SkillEffect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_description;
        break;
      }

      // optional string description = 2;
      case 2: {
        if (tag == 18) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_SkillEffect.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_beatenEffectName;
        break;
      }

      // optional string beatenEffectName = 3;
      case 3: {
        if (tag == 26) {
         parse_beatenEffectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beateneffectname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->beateneffectname().data(), this->beateneffectname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_SkillEffect.beatenEffectName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_flyAddon;
        break;
      }

      // optional .gt_msg.AddonIndexEnum flyAddon = 4;
      case 4: {
        if (tag == 32) {
         parse_flyAddon:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flyaddon(static_cast< ::gt_msg::AddonIndexEnum >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_flySpeed;
        break;
      }

      // optional float flySpeed = 5;
      case 5: {
        if (tag == 45) {
         parse_flySpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &flyspeed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_firstEffect;
        break;
      }

      // optional .gt_msg.Proto_EffectInfo firstEffect = 6;
      case 6: {
        if (tag == 50) {
         parse_firstEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_firsteffect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_damageEffect;
        break;
      }

      // optional .gt_msg.Proto_EffectInfo damageEffect = 7;
      case 7: {
        if (tag == 58) {
         parse_damageEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_damageeffect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_durationEffect;
        break;
      }

      // optional .gt_msg.Proto_EffectInfo durationEffect = 8;
      case 8: {
        if (tag == 66) {
         parse_durationEffect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_durationeffect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_flyList;
        break;
      }

      // optional .gt_msg.Proto_FlyInfo flyList = 9;
      case 9: {
        if (tag == 74) {
         parse_flyList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_flylist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_SkillEffect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_SkillEffect)
  return false;
#undef DO_
}

void Proto_SkillEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_SkillEffect)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_SkillEffect.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // optional string beatenEffectName = 3;
  if (this->beateneffectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->beateneffectname().data(), this->beateneffectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_SkillEffect.beatenEffectName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->beateneffectname(), output);
  }

  // optional .gt_msg.AddonIndexEnum flyAddon = 4;
  if (this->flyaddon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->flyaddon(), output);
  }

  // optional float flySpeed = 5;
  if (this->flyspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->flyspeed(), output);
  }

  // optional .gt_msg.Proto_EffectInfo firstEffect = 6;
  if (this->has_firsteffect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->firsteffect_, output);
  }

  // optional .gt_msg.Proto_EffectInfo damageEffect = 7;
  if (this->has_damageeffect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->damageeffect_, output);
  }

  // optional .gt_msg.Proto_EffectInfo durationEffect = 8;
  if (this->has_durationeffect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->durationeffect_, output);
  }

  // optional .gt_msg.Proto_FlyInfo flyList = 9;
  if (this->has_flylist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->flylist_, output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_SkillEffect)
}

::google::protobuf::uint8* Proto_SkillEffect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_SkillEffect)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_SkillEffect.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // optional string beatenEffectName = 3;
  if (this->beateneffectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->beateneffectname().data(), this->beateneffectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_SkillEffect.beatenEffectName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->beateneffectname(), target);
  }

  // optional .gt_msg.AddonIndexEnum flyAddon = 4;
  if (this->flyaddon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->flyaddon(), target);
  }

  // optional float flySpeed = 5;
  if (this->flyspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->flyspeed(), target);
  }

  // optional .gt_msg.Proto_EffectInfo firstEffect = 6;
  if (this->has_firsteffect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->firsteffect_, false, target);
  }

  // optional .gt_msg.Proto_EffectInfo damageEffect = 7;
  if (this->has_damageeffect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->damageeffect_, false, target);
  }

  // optional .gt_msg.Proto_EffectInfo durationEffect = 8;
  if (this->has_durationeffect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->durationeffect_, false, target);
  }

  // optional .gt_msg.Proto_FlyInfo flyList = 9;
  if (this->has_flylist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->flylist_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_SkillEffect)
  return target;
}

int Proto_SkillEffect::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_SkillEffect)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional string beatenEffectName = 3;
  if (this->beateneffectname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->beateneffectname());
  }

  // optional .gt_msg.AddonIndexEnum flyAddon = 4;
  if (this->flyaddon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flyaddon());
  }

  // optional float flySpeed = 5;
  if (this->flyspeed() != 0) {
    total_size += 1 + 4;
  }

  // optional .gt_msg.Proto_EffectInfo firstEffect = 6;
  if (this->has_firsteffect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->firsteffect_);
  }

  // optional .gt_msg.Proto_EffectInfo damageEffect = 7;
  if (this->has_damageeffect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->damageeffect_);
  }

  // optional .gt_msg.Proto_EffectInfo durationEffect = 8;
  if (this->has_durationeffect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->durationeffect_);
  }

  // optional .gt_msg.Proto_FlyInfo flyList = 9;
  if (this->has_flylist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->flylist_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SkillEffect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_SkillEffect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_SkillEffect* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_SkillEffect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_SkillEffect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_SkillEffect)
    MergeFrom(*source);
  }
}

void Proto_SkillEffect::MergeFrom(const Proto_SkillEffect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_SkillEffect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.beateneffectname().size() > 0) {

    beateneffectname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.beateneffectname_);
  }
  if (from.flyaddon() != 0) {
    set_flyaddon(from.flyaddon());
  }
  if (from.flyspeed() != 0) {
    set_flyspeed(from.flyspeed());
  }
  if (from.has_firsteffect()) {
    mutable_firsteffect()->::gt_msg::Proto_EffectInfo::MergeFrom(from.firsteffect());
  }
  if (from.has_damageeffect()) {
    mutable_damageeffect()->::gt_msg::Proto_EffectInfo::MergeFrom(from.damageeffect());
  }
  if (from.has_durationeffect()) {
    mutable_durationeffect()->::gt_msg::Proto_EffectInfo::MergeFrom(from.durationeffect());
  }
  if (from.has_flylist()) {
    mutable_flylist()->::gt_msg::Proto_FlyInfo::MergeFrom(from.flylist());
  }
}

void Proto_SkillEffect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_SkillEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SkillEffect::CopyFrom(const Proto_SkillEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_SkillEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SkillEffect::IsInitialized() const {

  return true;
}

void Proto_SkillEffect::Swap(Proto_SkillEffect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_SkillEffect::InternalSwap(Proto_SkillEffect* other) {
  std::swap(id_, other->id_);
  description_.Swap(&other->description_);
  beateneffectname_.Swap(&other->beateneffectname_);
  std::swap(flyaddon_, other->flyaddon_);
  std::swap(flyspeed_, other->flyspeed_);
  std::swap(firsteffect_, other->firsteffect_);
  std::swap(damageeffect_, other->damageeffect_);
  std::swap(durationeffect_, other->durationeffect_);
  std::swap(flylist_, other->flylist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_SkillEffect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SkillEffect_descriptor_;
  metadata.reflection = Proto_SkillEffect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_SkillEffect

// optional int32 id = 1;
void Proto_SkillEffect::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Proto_SkillEffect::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.id)
  return id_;
}
 void Proto_SkillEffect::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.id)
}

// optional string description = 2;
void Proto_SkillEffect::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_SkillEffect::description() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_SkillEffect::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.description)
}
 void Proto_SkillEffect::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_SkillEffect.description)
}
 void Proto_SkillEffect::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_SkillEffect.description)
}
 ::std::string* Proto_SkillEffect::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_SkillEffect::release_description() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_SkillEffect::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.description)
}

// optional string beatenEffectName = 3;
void Proto_SkillEffect::clear_beateneffectname() {
  beateneffectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_SkillEffect::beateneffectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.beatenEffectName)
  return beateneffectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_SkillEffect::set_beateneffectname(const ::std::string& value) {
  
  beateneffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.beatenEffectName)
}
 void Proto_SkillEffect::set_beateneffectname(const char* value) {
  
  beateneffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_SkillEffect.beatenEffectName)
}
 void Proto_SkillEffect::set_beateneffectname(const char* value, size_t size) {
  
  beateneffectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_SkillEffect.beatenEffectName)
}
 ::std::string* Proto_SkillEffect::mutable_beateneffectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.beatenEffectName)
  return beateneffectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_SkillEffect::release_beateneffectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.beatenEffectName)
  
  return beateneffectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_SkillEffect::set_allocated_beateneffectname(::std::string* beateneffectname) {
  if (beateneffectname != NULL) {
    
  } else {
    
  }
  beateneffectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), beateneffectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.beatenEffectName)
}

// optional .gt_msg.AddonIndexEnum flyAddon = 4;
void Proto_SkillEffect::clear_flyaddon() {
  flyaddon_ = 0;
}
 ::gt_msg::AddonIndexEnum Proto_SkillEffect::flyaddon() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.flyAddon)
  return static_cast< ::gt_msg::AddonIndexEnum >(flyaddon_);
}
 void Proto_SkillEffect::set_flyaddon(::gt_msg::AddonIndexEnum value) {
  
  flyaddon_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.flyAddon)
}

// optional float flySpeed = 5;
void Proto_SkillEffect::clear_flyspeed() {
  flyspeed_ = 0;
}
 float Proto_SkillEffect::flyspeed() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.flySpeed)
  return flyspeed_;
}
 void Proto_SkillEffect::set_flyspeed(float value) {
  
  flyspeed_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_SkillEffect.flySpeed)
}

// optional .gt_msg.Proto_EffectInfo firstEffect = 6;
bool Proto_SkillEffect::has_firsteffect() const {
  return !_is_default_instance_ && firsteffect_ != NULL;
}
void Proto_SkillEffect::clear_firsteffect() {
  if (GetArenaNoVirtual() == NULL && firsteffect_ != NULL) delete firsteffect_;
  firsteffect_ = NULL;
}
const ::gt_msg::Proto_EffectInfo& Proto_SkillEffect::firsteffect() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.firstEffect)
  return firsteffect_ != NULL ? *firsteffect_ : *default_instance_->firsteffect_;
}
::gt_msg::Proto_EffectInfo* Proto_SkillEffect::mutable_firsteffect() {
  
  if (firsteffect_ == NULL) {
    firsteffect_ = new ::gt_msg::Proto_EffectInfo;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.firstEffect)
  return firsteffect_;
}
::gt_msg::Proto_EffectInfo* Proto_SkillEffect::release_firsteffect() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.firstEffect)
  
  ::gt_msg::Proto_EffectInfo* temp = firsteffect_;
  firsteffect_ = NULL;
  return temp;
}
void Proto_SkillEffect::set_allocated_firsteffect(::gt_msg::Proto_EffectInfo* firsteffect) {
  delete firsteffect_;
  firsteffect_ = firsteffect;
  if (firsteffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.firstEffect)
}

// optional .gt_msg.Proto_EffectInfo damageEffect = 7;
bool Proto_SkillEffect::has_damageeffect() const {
  return !_is_default_instance_ && damageeffect_ != NULL;
}
void Proto_SkillEffect::clear_damageeffect() {
  if (GetArenaNoVirtual() == NULL && damageeffect_ != NULL) delete damageeffect_;
  damageeffect_ = NULL;
}
const ::gt_msg::Proto_EffectInfo& Proto_SkillEffect::damageeffect() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.damageEffect)
  return damageeffect_ != NULL ? *damageeffect_ : *default_instance_->damageeffect_;
}
::gt_msg::Proto_EffectInfo* Proto_SkillEffect::mutable_damageeffect() {
  
  if (damageeffect_ == NULL) {
    damageeffect_ = new ::gt_msg::Proto_EffectInfo;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.damageEffect)
  return damageeffect_;
}
::gt_msg::Proto_EffectInfo* Proto_SkillEffect::release_damageeffect() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.damageEffect)
  
  ::gt_msg::Proto_EffectInfo* temp = damageeffect_;
  damageeffect_ = NULL;
  return temp;
}
void Proto_SkillEffect::set_allocated_damageeffect(::gt_msg::Proto_EffectInfo* damageeffect) {
  delete damageeffect_;
  damageeffect_ = damageeffect;
  if (damageeffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.damageEffect)
}

// optional .gt_msg.Proto_EffectInfo durationEffect = 8;
bool Proto_SkillEffect::has_durationeffect() const {
  return !_is_default_instance_ && durationeffect_ != NULL;
}
void Proto_SkillEffect::clear_durationeffect() {
  if (GetArenaNoVirtual() == NULL && durationeffect_ != NULL) delete durationeffect_;
  durationeffect_ = NULL;
}
const ::gt_msg::Proto_EffectInfo& Proto_SkillEffect::durationeffect() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.durationEffect)
  return durationeffect_ != NULL ? *durationeffect_ : *default_instance_->durationeffect_;
}
::gt_msg::Proto_EffectInfo* Proto_SkillEffect::mutable_durationeffect() {
  
  if (durationeffect_ == NULL) {
    durationeffect_ = new ::gt_msg::Proto_EffectInfo;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.durationEffect)
  return durationeffect_;
}
::gt_msg::Proto_EffectInfo* Proto_SkillEffect::release_durationeffect() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.durationEffect)
  
  ::gt_msg::Proto_EffectInfo* temp = durationeffect_;
  durationeffect_ = NULL;
  return temp;
}
void Proto_SkillEffect::set_allocated_durationeffect(::gt_msg::Proto_EffectInfo* durationeffect) {
  delete durationeffect_;
  durationeffect_ = durationeffect;
  if (durationeffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.durationEffect)
}

// optional .gt_msg.Proto_FlyInfo flyList = 9;
bool Proto_SkillEffect::has_flylist() const {
  return !_is_default_instance_ && flylist_ != NULL;
}
void Proto_SkillEffect::clear_flylist() {
  if (GetArenaNoVirtual() == NULL && flylist_ != NULL) delete flylist_;
  flylist_ = NULL;
}
const ::gt_msg::Proto_FlyInfo& Proto_SkillEffect::flylist() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffect.flyList)
  return flylist_ != NULL ? *flylist_ : *default_instance_->flylist_;
}
::gt_msg::Proto_FlyInfo* Proto_SkillEffect::mutable_flylist() {
  
  if (flylist_ == NULL) {
    flylist_ = new ::gt_msg::Proto_FlyInfo;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffect.flyList)
  return flylist_;
}
::gt_msg::Proto_FlyInfo* Proto_SkillEffect::release_flylist() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_SkillEffect.flyList)
  
  ::gt_msg::Proto_FlyInfo* temp = flylist_;
  flylist_ = NULL;
  return temp;
}
void Proto_SkillEffect::set_allocated_flylist(::gt_msg::Proto_FlyInfo* flylist) {
  delete flylist_;
  flylist_ = flylist;
  if (flylist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_SkillEffect.flyList)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_SkillEffectList::kDicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_SkillEffectList::Proto_SkillEffectList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_SkillEffectList)
}

void Proto_SkillEffectList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_SkillEffectList::Proto_SkillEffectList(const Proto_SkillEffectList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_SkillEffectList)
}

void Proto_SkillEffectList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Proto_SkillEffectList::~Proto_SkillEffectList() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_SkillEffectList)
  SharedDtor();
}

void Proto_SkillEffectList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_SkillEffectList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_SkillEffectList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_SkillEffectList_descriptor_;
}

const Proto_SkillEffectList& Proto_SkillEffectList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_SkillEffectList* Proto_SkillEffectList::default_instance_ = NULL;

Proto_SkillEffectList* Proto_SkillEffectList::New(::google::protobuf::Arena* arena) const {
  Proto_SkillEffectList* n = new Proto_SkillEffectList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_SkillEffectList::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_SkillEffectList)
  dic_.Clear();
}

bool Proto_SkillEffectList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_SkillEffectList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.Proto_SkillEffect dic = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_dic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_dic;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_SkillEffectList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_SkillEffectList)
  return false;
#undef DO_
}

void Proto_SkillEffectList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_SkillEffectList)
  // repeated .gt_msg.Proto_SkillEffect dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dic(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_SkillEffectList)
}

::google::protobuf::uint8* Proto_SkillEffectList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_SkillEffectList)
  // repeated .gt_msg.Proto_SkillEffect dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dic(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_SkillEffectList)
  return target;
}

int Proto_SkillEffectList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_SkillEffectList)
  int total_size = 0;

  // repeated .gt_msg.Proto_SkillEffect dic = 1;
  total_size += 1 * this->dic_size();
  for (int i = 0; i < this->dic_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dic(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_SkillEffectList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_SkillEffectList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_SkillEffectList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_SkillEffectList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_SkillEffectList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_SkillEffectList)
    MergeFrom(*source);
  }
}

void Proto_SkillEffectList::MergeFrom(const Proto_SkillEffectList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_SkillEffectList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  dic_.MergeFrom(from.dic_);
}

void Proto_SkillEffectList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_SkillEffectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_SkillEffectList::CopyFrom(const Proto_SkillEffectList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_SkillEffectList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_SkillEffectList::IsInitialized() const {

  return true;
}

void Proto_SkillEffectList::Swap(Proto_SkillEffectList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_SkillEffectList::InternalSwap(Proto_SkillEffectList* other) {
  dic_.UnsafeArenaSwap(&other->dic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_SkillEffectList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_SkillEffectList_descriptor_;
  metadata.reflection = Proto_SkillEffectList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_SkillEffectList

// repeated .gt_msg.Proto_SkillEffect dic = 1;
int Proto_SkillEffectList::dic_size() const {
  return dic_.size();
}
void Proto_SkillEffectList::clear_dic() {
  dic_.Clear();
}
const ::gt_msg::Proto_SkillEffect& Proto_SkillEffectList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_SkillEffectList.dic)
  return dic_.Get(index);
}
::gt_msg::Proto_SkillEffect* Proto_SkillEffectList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_SkillEffectList.dic)
  return dic_.Mutable(index);
}
::gt_msg::Proto_SkillEffect* Proto_SkillEffectList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_SkillEffectList.dic)
  return dic_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillEffect >*
Proto_SkillEffectList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_SkillEffectList.dic)
  return &dic_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillEffect >&
Proto_SkillEffectList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_SkillEffectList.dic)
  return dic_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_BufEffect::kIDFieldNumber;
const int Proto_BufEffect::kTypeFieldNumber;
const int Proto_BufEffect::kParam1FieldNumber;
const int Proto_BufEffect::kParam2FieldNumber;
const int Proto_BufEffect::kLevParam2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_BufEffect::Proto_BufEffect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_BufEffect)
}

void Proto_BufEffect::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_BufEffect::Proto_BufEffect(const Proto_BufEffect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_BufEffect)
}

void Proto_BufEffect::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0;
  type_ = 0;
  param1_ = 0;
  param2_ = 0;
  levparam2_ = 0;
}

Proto_BufEffect::~Proto_BufEffect() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_BufEffect)
  SharedDtor();
}

void Proto_BufEffect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_BufEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_BufEffect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_BufEffect_descriptor_;
}

const Proto_BufEffect& Proto_BufEffect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_BufEffect* Proto_BufEffect::default_instance_ = NULL;

Proto_BufEffect* Proto_BufEffect::New(::google::protobuf::Arena* arena) const {
  Proto_BufEffect* n = new Proto_BufEffect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_BufEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_BufEffect)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Proto_BufEffect, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_BufEffect*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, levparam2_);

#undef ZR_HELPER_
#undef ZR_

}

bool Proto_BufEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_BufEffect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 iD = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_param1;
        break;
      }

      // optional int32 param1 = 3;
      case 3: {
        if (tag == 24) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_param2;
        break;
      }

      // optional float param2 = 4;
      case 4: {
        if (tag == 37) {
         parse_param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_levParam2;
        break;
      }

      // optional float levParam2 = 5;
      case 5: {
        if (tag == 45) {
         parse_levParam2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &levparam2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_BufEffect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_BufEffect)
  return false;
#undef DO_
}

void Proto_BufEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_BufEffect)
  // optional int32 iD = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 param1 = 3;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->param1(), output);
  }

  // optional float param2 = 4;
  if (this->param2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->param2(), output);
  }

  // optional float levParam2 = 5;
  if (this->levparam2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->levparam2(), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_BufEffect)
}

::google::protobuf::uint8* Proto_BufEffect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_BufEffect)
  // optional int32 iD = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 param1 = 3;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->param1(), target);
  }

  // optional float param2 = 4;
  if (this->param2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->param2(), target);
  }

  // optional float levParam2 = 5;
  if (this->levparam2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->levparam2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_BufEffect)
  return target;
}

int Proto_BufEffect::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_BufEffect)
  int total_size = 0;

  // optional int32 iD = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional int32 param1 = 3;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param1());
  }

  // optional float param2 = 4;
  if (this->param2() != 0) {
    total_size += 1 + 4;
  }

  // optional float levParam2 = 5;
  if (this->levparam2() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_BufEffect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_BufEffect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_BufEffect* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_BufEffect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_BufEffect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_BufEffect)
    MergeFrom(*source);
  }
}

void Proto_BufEffect::MergeFrom(const Proto_BufEffect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_BufEffect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.param1() != 0) {
    set_param1(from.param1());
  }
  if (from.param2() != 0) {
    set_param2(from.param2());
  }
  if (from.levparam2() != 0) {
    set_levparam2(from.levparam2());
  }
}

void Proto_BufEffect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_BufEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_BufEffect::CopyFrom(const Proto_BufEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_BufEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_BufEffect::IsInitialized() const {

  return true;
}

void Proto_BufEffect::Swap(Proto_BufEffect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_BufEffect::InternalSwap(Proto_BufEffect* other) {
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(param1_, other->param1_);
  std::swap(param2_, other->param2_);
  std::swap(levparam2_, other->levparam2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_BufEffect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_BufEffect_descriptor_;
  metadata.reflection = Proto_BufEffect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_BufEffect

// optional int32 iD = 1;
void Proto_BufEffect::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Proto_BufEffect::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.iD)
  return id_;
}
 void Proto_BufEffect::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.iD)
}

// optional int32 type = 2;
void Proto_BufEffect::clear_type() {
  type_ = 0;
}
 ::google::protobuf::int32 Proto_BufEffect::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.type)
  return type_;
}
 void Proto_BufEffect::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.type)
}

// optional int32 param1 = 3;
void Proto_BufEffect::clear_param1() {
  param1_ = 0;
}
 ::google::protobuf::int32 Proto_BufEffect::param1() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.param1)
  return param1_;
}
 void Proto_BufEffect::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.param1)
}

// optional float param2 = 4;
void Proto_BufEffect::clear_param2() {
  param2_ = 0;
}
 float Proto_BufEffect::param2() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.param2)
  return param2_;
}
 void Proto_BufEffect::set_param2(float value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.param2)
}

// optional float levParam2 = 5;
void Proto_BufEffect::clear_levparam2() {
  levparam2_ = 0;
}
 float Proto_BufEffect::levparam2() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufEffect.levParam2)
  return levparam2_;
}
 void Proto_BufEffect::set_levparam2(float value) {
  
  levparam2_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_BufEffect.levParam2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_Buf::kIdFieldNumber;
const int Proto_Buf::kNameFieldNumber;
const int Proto_Buf::kDescriptionFieldNumber;
const int Proto_Buf::kMaxLevelFieldNumber;
const int Proto_Buf::kBenefitTypeFieldNumber;
const int Proto_Buf::kReplaceTypeFieldNumber;
const int Proto_Buf::kEffectNameFieldNumber;
const int Proto_Buf::kDamageFieldNumber;
const int Proto_Buf::kIsPercentFieldNumber;
const int Proto_Buf::kDamageTypeFieldNumber;
const int Proto_Buf::kInfluenceTypeFieldNumber;
const int Proto_Buf::kCycleTimeFieldNumber;
const int Proto_Buf::kOffsetFieldNumber;
const int Proto_Buf::kEffectListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_Buf::Proto_Buf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_Buf)
}

void Proto_Buf::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  offset_ = const_cast< ::gt_msg::Vec3*>(&::gt_msg::Vec3::default_instance());
}

Proto_Buf::Proto_Buf(const Proto_Buf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_Buf)
}

void Proto_Buf::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxlevel_ = 0;
  benefittype_ = 0;
  replacetype_ = 0;
  effectname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  damage_ = 0;
  ispercent_ = false;
  damagetype_ = 0;
  influencetype_ = 0;
  cycletime_ = 0;
  offset_ = NULL;
}

Proto_Buf::~Proto_Buf() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_Buf)
  SharedDtor();
}

void Proto_Buf::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effectname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete offset_;
  }
}

void Proto_Buf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_Buf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_Buf_descriptor_;
}

const Proto_Buf& Proto_Buf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_Buf* Proto_Buf::default_instance_ = NULL;

Proto_Buf* Proto_Buf::New(::google::protobuf::Arena* arena) const {
  Proto_Buf* n = new Proto_Buf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_Buf::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_Buf)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Proto_Buf, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Proto_Buf*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, maxlevel_);
  ZR_(benefittype_, replacetype_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  damage_ = 0;
  ZR_(ispercent_, influencetype_);
  cycletime_ = 0;
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  effectlist_.Clear();
}

bool Proto_Buf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_Buf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Buf.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional string description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Buf.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maxLevel;
        break;
      }

      // optional int32 maxLevel = 4;
      case 4: {
        if (tag == 32) {
         parse_maxLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_benefitType;
        break;
      }

      // optional .gt_msg.BenefitType benefitType = 5;
      case 5: {
        if (tag == 40) {
         parse_benefitType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_benefittype(static_cast< ::gt_msg::BenefitType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_replaceType;
        break;
      }

      // optional .gt_msg.ReplaceType replaceType = 6;
      case 6: {
        if (tag == 48) {
         parse_replaceType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_replacetype(static_cast< ::gt_msg::ReplaceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_effectName;
        break;
      }

      // optional string effectName = 7;
      case 7: {
        if (tag == 58) {
         parse_effectName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->effectname().data(), this->effectname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gt_msg.Proto_Buf.effectName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_damage;
        break;
      }

      // optional int32 damage = 8;
      case 8: {
        if (tag == 64) {
         parse_damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_isPercent;
        break;
      }

      // optional bool isPercent = 9;
      case 9: {
        if (tag == 72) {
         parse_isPercent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispercent_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_damageType;
        break;
      }

      // optional .gt_msg.DamageType damageType = 10;
      case 10: {
        if (tag == 80) {
         parse_damageType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_damagetype(static_cast< ::gt_msg::DamageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_influenceType;
        break;
      }

      // optional .gt_msg.InfluenceType influenceType = 11;
      case 11: {
        if (tag == 88) {
         parse_influenceType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_influencetype(static_cast< ::gt_msg::InfluenceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_cycleTime;
        break;
      }

      // optional float cycleTime = 12;
      case 12: {
        if (tag == 101) {
         parse_cycleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cycletime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_offset;
        break;
      }

      // optional .gt_msg.Vec3 offset = 13;
      case 13: {
        if (tag == 106) {
         parse_offset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_offset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_effectList;
        break;
      }

      // repeated .gt_msg.Proto_BufEffect effectList = 14;
      case 14: {
        if (tag == 114) {
         parse_effectList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_effectList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_effectlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_loop_effectList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_Buf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_Buf)
  return false;
#undef DO_
}

void Proto_Buf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_Buf)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Buf.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Buf.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional int32 maxLevel = 4;
  if (this->maxlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxlevel(), output);
  }

  // optional .gt_msg.BenefitType benefitType = 5;
  if (this->benefittype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->benefittype(), output);
  }

  // optional .gt_msg.ReplaceType replaceType = 6;
  if (this->replacetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->replacetype(), output);
  }

  // optional string effectName = 7;
  if (this->effectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Buf.effectName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->effectname(), output);
  }

  // optional int32 damage = 8;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->damage(), output);
  }

  // optional bool isPercent = 9;
  if (this->ispercent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->ispercent(), output);
  }

  // optional .gt_msg.DamageType damageType = 10;
  if (this->damagetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->damagetype(), output);
  }

  // optional .gt_msg.InfluenceType influenceType = 11;
  if (this->influencetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->influencetype(), output);
  }

  // optional float cycleTime = 12;
  if (this->cycletime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->cycletime(), output);
  }

  // optional .gt_msg.Vec3 offset = 13;
  if (this->has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->offset_, output);
  }

  // repeated .gt_msg.Proto_BufEffect effectList = 14;
  for (unsigned int i = 0, n = this->effectlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->effectlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_Buf)
}

::google::protobuf::uint8* Proto_Buf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_Buf)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Buf.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Buf.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional int32 maxLevel = 4;
  if (this->maxlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxlevel(), target);
  }

  // optional .gt_msg.BenefitType benefitType = 5;
  if (this->benefittype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->benefittype(), target);
  }

  // optional .gt_msg.ReplaceType replaceType = 6;
  if (this->replacetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->replacetype(), target);
  }

  // optional string effectName = 7;
  if (this->effectname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->effectname().data(), this->effectname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gt_msg.Proto_Buf.effectName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->effectname(), target);
  }

  // optional int32 damage = 8;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->damage(), target);
  }

  // optional bool isPercent = 9;
  if (this->ispercent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->ispercent(), target);
  }

  // optional .gt_msg.DamageType damageType = 10;
  if (this->damagetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->damagetype(), target);
  }

  // optional .gt_msg.InfluenceType influenceType = 11;
  if (this->influencetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->influencetype(), target);
  }

  // optional float cycleTime = 12;
  if (this->cycletime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->cycletime(), target);
  }

  // optional .gt_msg.Vec3 offset = 13;
  if (this->has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->offset_, false, target);
  }

  // repeated .gt_msg.Proto_BufEffect effectList = 14;
  for (unsigned int i = 0, n = this->effectlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->effectlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_Buf)
  return target;
}

int Proto_Buf::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_Buf)
  int total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional int32 maxLevel = 4;
  if (this->maxlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxlevel());
  }

  // optional .gt_msg.BenefitType benefitType = 5;
  if (this->benefittype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->benefittype());
  }

  // optional .gt_msg.ReplaceType replaceType = 6;
  if (this->replacetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->replacetype());
  }

  // optional string effectName = 7;
  if (this->effectname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->effectname());
  }

  // optional int32 damage = 8;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  // optional bool isPercent = 9;
  if (this->ispercent() != 0) {
    total_size += 1 + 1;
  }

  // optional .gt_msg.DamageType damageType = 10;
  if (this->damagetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->damagetype());
  }

  // optional .gt_msg.InfluenceType influenceType = 11;
  if (this->influencetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->influencetype());
  }

  // optional float cycleTime = 12;
  if (this->cycletime() != 0) {
    total_size += 1 + 4;
  }

  // optional .gt_msg.Vec3 offset = 13;
  if (this->has_offset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->offset_);
  }

  // repeated .gt_msg.Proto_BufEffect effectList = 14;
  total_size += 1 * this->effectlist_size();
  for (int i = 0; i < this->effectlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->effectlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_Buf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_Buf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_Buf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_Buf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_Buf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_Buf)
    MergeFrom(*source);
  }
}

void Proto_Buf::MergeFrom(const Proto_Buf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_Buf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  effectlist_.MergeFrom(from.effectlist_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.maxlevel() != 0) {
    set_maxlevel(from.maxlevel());
  }
  if (from.benefittype() != 0) {
    set_benefittype(from.benefittype());
  }
  if (from.replacetype() != 0) {
    set_replacetype(from.replacetype());
  }
  if (from.effectname().size() > 0) {

    effectname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.effectname_);
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.ispercent() != 0) {
    set_ispercent(from.ispercent());
  }
  if (from.damagetype() != 0) {
    set_damagetype(from.damagetype());
  }
  if (from.influencetype() != 0) {
    set_influencetype(from.influencetype());
  }
  if (from.cycletime() != 0) {
    set_cycletime(from.cycletime());
  }
  if (from.has_offset()) {
    mutable_offset()->::gt_msg::Vec3::MergeFrom(from.offset());
  }
}

void Proto_Buf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_Buf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_Buf::CopyFrom(const Proto_Buf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_Buf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_Buf::IsInitialized() const {

  return true;
}

void Proto_Buf::Swap(Proto_Buf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_Buf::InternalSwap(Proto_Buf* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  std::swap(maxlevel_, other->maxlevel_);
  std::swap(benefittype_, other->benefittype_);
  std::swap(replacetype_, other->replacetype_);
  effectname_.Swap(&other->effectname_);
  std::swap(damage_, other->damage_);
  std::swap(ispercent_, other->ispercent_);
  std::swap(damagetype_, other->damagetype_);
  std::swap(influencetype_, other->influencetype_);
  std::swap(cycletime_, other->cycletime_);
  std::swap(offset_, other->offset_);
  effectlist_.UnsafeArenaSwap(&other->effectlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_Buf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_Buf_descriptor_;
  metadata.reflection = Proto_Buf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_Buf

// optional int32 id = 1;
void Proto_Buf::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Proto_Buf::id() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.id)
  return id_;
}
 void Proto_Buf::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.id)
}

// optional string name = 2;
void Proto_Buf::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Buf::name() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Buf::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.name)
}
 void Proto_Buf::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Buf.name)
}
 void Proto_Buf::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Buf.name)
}
 ::std::string* Proto_Buf::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Buf::release_name() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Buf.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Buf::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Buf.name)
}

// optional string description = 3;
void Proto_Buf::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Buf::description() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Buf::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.description)
}
 void Proto_Buf::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Buf.description)
}
 void Proto_Buf::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Buf.description)
}
 ::std::string* Proto_Buf::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Buf::release_description() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Buf.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Buf::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Buf.description)
}

// optional int32 maxLevel = 4;
void Proto_Buf::clear_maxlevel() {
  maxlevel_ = 0;
}
 ::google::protobuf::int32 Proto_Buf::maxlevel() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.maxLevel)
  return maxlevel_;
}
 void Proto_Buf::set_maxlevel(::google::protobuf::int32 value) {
  
  maxlevel_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.maxLevel)
}

// optional .gt_msg.BenefitType benefitType = 5;
void Proto_Buf::clear_benefittype() {
  benefittype_ = 0;
}
 ::gt_msg::BenefitType Proto_Buf::benefittype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.benefitType)
  return static_cast< ::gt_msg::BenefitType >(benefittype_);
}
 void Proto_Buf::set_benefittype(::gt_msg::BenefitType value) {
  
  benefittype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.benefitType)
}

// optional .gt_msg.ReplaceType replaceType = 6;
void Proto_Buf::clear_replacetype() {
  replacetype_ = 0;
}
 ::gt_msg::ReplaceType Proto_Buf::replacetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.replaceType)
  return static_cast< ::gt_msg::ReplaceType >(replacetype_);
}
 void Proto_Buf::set_replacetype(::gt_msg::ReplaceType value) {
  
  replacetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.replaceType)
}

// optional string effectName = 7;
void Proto_Buf::clear_effectname() {
  effectname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Proto_Buf::effectname() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.effectName)
  return effectname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Buf::set_effectname(const ::std::string& value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.effectName)
}
 void Proto_Buf::set_effectname(const char* value) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gt_msg.Proto_Buf.effectName)
}
 void Proto_Buf::set_effectname(const char* value, size_t size) {
  
  effectname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gt_msg.Proto_Buf.effectName)
}
 ::std::string* Proto_Buf::mutable_effectname() {
  
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.effectName)
  return effectname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Proto_Buf::release_effectname() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Buf.effectName)
  
  return effectname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Proto_Buf::set_allocated_effectname(::std::string* effectname) {
  if (effectname != NULL) {
    
  } else {
    
  }
  effectname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effectname);
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Buf.effectName)
}

// optional int32 damage = 8;
void Proto_Buf::clear_damage() {
  damage_ = 0;
}
 ::google::protobuf::int32 Proto_Buf::damage() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.damage)
  return damage_;
}
 void Proto_Buf::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.damage)
}

// optional bool isPercent = 9;
void Proto_Buf::clear_ispercent() {
  ispercent_ = false;
}
 bool Proto_Buf::ispercent() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.isPercent)
  return ispercent_;
}
 void Proto_Buf::set_ispercent(bool value) {
  
  ispercent_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.isPercent)
}

// optional .gt_msg.DamageType damageType = 10;
void Proto_Buf::clear_damagetype() {
  damagetype_ = 0;
}
 ::gt_msg::DamageType Proto_Buf::damagetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.damageType)
  return static_cast< ::gt_msg::DamageType >(damagetype_);
}
 void Proto_Buf::set_damagetype(::gt_msg::DamageType value) {
  
  damagetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.damageType)
}

// optional .gt_msg.InfluenceType influenceType = 11;
void Proto_Buf::clear_influencetype() {
  influencetype_ = 0;
}
 ::gt_msg::InfluenceType Proto_Buf::influencetype() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.influenceType)
  return static_cast< ::gt_msg::InfluenceType >(influencetype_);
}
 void Proto_Buf::set_influencetype(::gt_msg::InfluenceType value) {
  
  influencetype_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.influenceType)
}

// optional float cycleTime = 12;
void Proto_Buf::clear_cycletime() {
  cycletime_ = 0;
}
 float Proto_Buf::cycletime() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.cycleTime)
  return cycletime_;
}
 void Proto_Buf::set_cycletime(float value) {
  
  cycletime_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_Buf.cycleTime)
}

// optional .gt_msg.Vec3 offset = 13;
bool Proto_Buf::has_offset() const {
  return !_is_default_instance_ && offset_ != NULL;
}
void Proto_Buf::clear_offset() {
  if (GetArenaNoVirtual() == NULL && offset_ != NULL) delete offset_;
  offset_ = NULL;
}
const ::gt_msg::Vec3& Proto_Buf::offset() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.offset)
  return offset_ != NULL ? *offset_ : *default_instance_->offset_;
}
::gt_msg::Vec3* Proto_Buf::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::gt_msg::Vec3;
  }
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.offset)
  return offset_;
}
::gt_msg::Vec3* Proto_Buf::release_offset() {
  // @@protoc_insertion_point(field_release:gt_msg.Proto_Buf.offset)
  
  ::gt_msg::Vec3* temp = offset_;
  offset_ = NULL;
  return temp;
}
void Proto_Buf::set_allocated_offset(::gt_msg::Vec3* offset) {
  delete offset_;
  offset_ = offset;
  if (offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gt_msg.Proto_Buf.offset)
}

// repeated .gt_msg.Proto_BufEffect effectList = 14;
int Proto_Buf::effectlist_size() const {
  return effectlist_.size();
}
void Proto_Buf::clear_effectlist() {
  effectlist_.Clear();
}
const ::gt_msg::Proto_BufEffect& Proto_Buf::effectlist(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_Buf.effectList)
  return effectlist_.Get(index);
}
::gt_msg::Proto_BufEffect* Proto_Buf::mutable_effectlist(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_Buf.effectList)
  return effectlist_.Mutable(index);
}
::gt_msg::Proto_BufEffect* Proto_Buf::add_effectlist() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_Buf.effectList)
  return effectlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_BufEffect >*
Proto_Buf::mutable_effectlist() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_Buf.effectList)
  return &effectlist_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_BufEffect >&
Proto_Buf::effectlist() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_Buf.effectList)
  return effectlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_BufList::kDicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_BufList::Proto_BufList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_BufList)
}

void Proto_BufList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_BufList::Proto_BufList(const Proto_BufList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_BufList)
}

void Proto_BufList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Proto_BufList::~Proto_BufList() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_BufList)
  SharedDtor();
}

void Proto_BufList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_BufList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_BufList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_BufList_descriptor_;
}

const Proto_BufList& Proto_BufList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_BufList* Proto_BufList::default_instance_ = NULL;

Proto_BufList* Proto_BufList::New(::google::protobuf::Arena* arena) const {
  Proto_BufList* n = new Proto_BufList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_BufList::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_BufList)
  dic_.Clear();
}

bool Proto_BufList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_BufList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.Proto_Buf dic = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_dic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_dic;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_BufList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_BufList)
  return false;
#undef DO_
}

void Proto_BufList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_BufList)
  // repeated .gt_msg.Proto_Buf dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dic(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_BufList)
}

::google::protobuf::uint8* Proto_BufList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_BufList)
  // repeated .gt_msg.Proto_Buf dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dic(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_BufList)
  return target;
}

int Proto_BufList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_BufList)
  int total_size = 0;

  // repeated .gt_msg.Proto_Buf dic = 1;
  total_size += 1 * this->dic_size();
  for (int i = 0; i < this->dic_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dic(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_BufList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_BufList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_BufList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_BufList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_BufList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_BufList)
    MergeFrom(*source);
  }
}

void Proto_BufList::MergeFrom(const Proto_BufList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_BufList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  dic_.MergeFrom(from.dic_);
}

void Proto_BufList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_BufList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_BufList::CopyFrom(const Proto_BufList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_BufList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_BufList::IsInitialized() const {

  return true;
}

void Proto_BufList::Swap(Proto_BufList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_BufList::InternalSwap(Proto_BufList* other) {
  dic_.UnsafeArenaSwap(&other->dic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_BufList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_BufList_descriptor_;
  metadata.reflection = Proto_BufList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_BufList

// repeated .gt_msg.Proto_Buf dic = 1;
int Proto_BufList::dic_size() const {
  return dic_.size();
}
void Proto_BufList::clear_dic() {
  dic_.Clear();
}
const ::gt_msg::Proto_Buf& Proto_BufList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_BufList.dic)
  return dic_.Get(index);
}
::gt_msg::Proto_Buf* Proto_BufList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_BufList.dic)
  return dic_.Mutable(index);
}
::gt_msg::Proto_Buf* Proto_BufList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_BufList.dic)
  return dic_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Buf >*
Proto_BufList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_BufList.dic)
  return &dic_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_Buf >&
Proto_BufList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_BufList.dic)
  return dic_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_LearnSkill::kTypeFieldNumber;
const int Proto_LearnSkill::kFixedSkillFieldNumber;
const int Proto_LearnSkill::kLearnSkillFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_LearnSkill::Proto_LearnSkill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_LearnSkill)
}

void Proto_LearnSkill::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_LearnSkill::Proto_LearnSkill(const Proto_LearnSkill& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_LearnSkill)
}

void Proto_LearnSkill::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
}

Proto_LearnSkill::~Proto_LearnSkill() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_LearnSkill)
  SharedDtor();
}

void Proto_LearnSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_LearnSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_LearnSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_LearnSkill_descriptor_;
}

const Proto_LearnSkill& Proto_LearnSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_LearnSkill* Proto_LearnSkill::default_instance_ = NULL;

Proto_LearnSkill* Proto_LearnSkill::New(::google::protobuf::Arena* arena) const {
  Proto_LearnSkill* n = new Proto_LearnSkill;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_LearnSkill::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_LearnSkill)
  type_ = 0;
  fixedskill_.Clear();
  learnskill_.Clear();
}

bool Proto_LearnSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_LearnSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fixedSkill;
        break;
      }

      // repeated .gt_msg.Proto_SkillData fixedSkill = 2;
      case 2: {
        if (tag == 18) {
         parse_fixedSkill:
          DO_(input->IncrementRecursionDepth());
         parse_loop_fixedSkill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fixedskill()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_fixedSkill;
        if (input->ExpectTag(26)) goto parse_loop_learnSkill;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .gt_msg.Proto_SkillData learnSkill = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_learnSkill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_learnskill()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_learnSkill;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_LearnSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_LearnSkill)
  return false;
#undef DO_
}

void Proto_LearnSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_LearnSkill)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // repeated .gt_msg.Proto_SkillData fixedSkill = 2;
  for (unsigned int i = 0, n = this->fixedskill_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fixedskill(i), output);
  }

  // repeated .gt_msg.Proto_SkillData learnSkill = 3;
  for (unsigned int i = 0, n = this->learnskill_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->learnskill(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_LearnSkill)
}

::google::protobuf::uint8* Proto_LearnSkill::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_LearnSkill)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // repeated .gt_msg.Proto_SkillData fixedSkill = 2;
  for (unsigned int i = 0, n = this->fixedskill_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->fixedskill(i), false, target);
  }

  // repeated .gt_msg.Proto_SkillData learnSkill = 3;
  for (unsigned int i = 0, n = this->learnskill_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->learnskill(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_LearnSkill)
  return target;
}

int Proto_LearnSkill::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_LearnSkill)
  int total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // repeated .gt_msg.Proto_SkillData fixedSkill = 2;
  total_size += 1 * this->fixedskill_size();
  for (int i = 0; i < this->fixedskill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fixedskill(i));
  }

  // repeated .gt_msg.Proto_SkillData learnSkill = 3;
  total_size += 1 * this->learnskill_size();
  for (int i = 0; i < this->learnskill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->learnskill(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_LearnSkill::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_LearnSkill)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_LearnSkill* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_LearnSkill>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_LearnSkill)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_LearnSkill)
    MergeFrom(*source);
  }
}

void Proto_LearnSkill::MergeFrom(const Proto_LearnSkill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_LearnSkill)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  fixedskill_.MergeFrom(from.fixedskill_);
  learnskill_.MergeFrom(from.learnskill_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Proto_LearnSkill::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_LearnSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_LearnSkill::CopyFrom(const Proto_LearnSkill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_LearnSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_LearnSkill::IsInitialized() const {

  return true;
}

void Proto_LearnSkill::Swap(Proto_LearnSkill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_LearnSkill::InternalSwap(Proto_LearnSkill* other) {
  std::swap(type_, other->type_);
  fixedskill_.UnsafeArenaSwap(&other->fixedskill_);
  learnskill_.UnsafeArenaSwap(&other->learnskill_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_LearnSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_LearnSkill_descriptor_;
  metadata.reflection = Proto_LearnSkill_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_LearnSkill

// optional int32 type = 1;
void Proto_LearnSkill::clear_type() {
  type_ = 0;
}
 ::google::protobuf::int32 Proto_LearnSkill::type() const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_LearnSkill.type)
  return type_;
}
 void Proto_LearnSkill::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gt_msg.Proto_LearnSkill.type)
}

// repeated .gt_msg.Proto_SkillData fixedSkill = 2;
int Proto_LearnSkill::fixedskill_size() const {
  return fixedskill_.size();
}
void Proto_LearnSkill::clear_fixedskill() {
  fixedskill_.Clear();
}
const ::gt_msg::Proto_SkillData& Proto_LearnSkill::fixedskill(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_LearnSkill.fixedSkill)
  return fixedskill_.Get(index);
}
::gt_msg::Proto_SkillData* Proto_LearnSkill::mutable_fixedskill(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_LearnSkill.fixedSkill)
  return fixedskill_.Mutable(index);
}
::gt_msg::Proto_SkillData* Proto_LearnSkill::add_fixedskill() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_LearnSkill.fixedSkill)
  return fixedskill_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
Proto_LearnSkill::mutable_fixedskill() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_LearnSkill.fixedSkill)
  return &fixedskill_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
Proto_LearnSkill::fixedskill() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_LearnSkill.fixedSkill)
  return fixedskill_;
}

// repeated .gt_msg.Proto_SkillData learnSkill = 3;
int Proto_LearnSkill::learnskill_size() const {
  return learnskill_.size();
}
void Proto_LearnSkill::clear_learnskill() {
  learnskill_.Clear();
}
const ::gt_msg::Proto_SkillData& Proto_LearnSkill::learnskill(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_LearnSkill.learnSkill)
  return learnskill_.Get(index);
}
::gt_msg::Proto_SkillData* Proto_LearnSkill::mutable_learnskill(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_LearnSkill.learnSkill)
  return learnskill_.Mutable(index);
}
::gt_msg::Proto_SkillData* Proto_LearnSkill::add_learnskill() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_LearnSkill.learnSkill)
  return learnskill_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >*
Proto_LearnSkill::mutable_learnskill() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_LearnSkill.learnSkill)
  return &learnskill_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_SkillData >&
Proto_LearnSkill::learnskill() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_LearnSkill.learnSkill)
  return learnskill_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proto_LearnSkillList::kDicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proto_LearnSkillList::Proto_LearnSkillList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gt_msg.Proto_LearnSkillList)
}

void Proto_LearnSkillList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Proto_LearnSkillList::Proto_LearnSkillList(const Proto_LearnSkillList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gt_msg.Proto_LearnSkillList)
}

void Proto_LearnSkillList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Proto_LearnSkillList::~Proto_LearnSkillList() {
  // @@protoc_insertion_point(destructor:gt_msg.Proto_LearnSkillList)
  SharedDtor();
}

void Proto_LearnSkillList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto_LearnSkillList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto_LearnSkillList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto_LearnSkillList_descriptor_;
}

const Proto_LearnSkillList& Proto_LearnSkillList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gt_5fbuyu_2eproto();
  return *default_instance_;
}

Proto_LearnSkillList* Proto_LearnSkillList::default_instance_ = NULL;

Proto_LearnSkillList* Proto_LearnSkillList::New(::google::protobuf::Arena* arena) const {
  Proto_LearnSkillList* n = new Proto_LearnSkillList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Proto_LearnSkillList::Clear() {
// @@protoc_insertion_point(message_clear_start:gt_msg.Proto_LearnSkillList)
  dic_.Clear();
}

bool Proto_LearnSkillList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gt_msg.Proto_LearnSkillList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gt_msg.Proto_LearnSkill dic = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_dic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_dic;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gt_msg.Proto_LearnSkillList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gt_msg.Proto_LearnSkillList)
  return false;
#undef DO_
}

void Proto_LearnSkillList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gt_msg.Proto_LearnSkillList)
  // repeated .gt_msg.Proto_LearnSkill dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dic(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gt_msg.Proto_LearnSkillList)
}

::google::protobuf::uint8* Proto_LearnSkillList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gt_msg.Proto_LearnSkillList)
  // repeated .gt_msg.Proto_LearnSkill dic = 1;
  for (unsigned int i = 0, n = this->dic_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dic(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gt_msg.Proto_LearnSkillList)
  return target;
}

int Proto_LearnSkillList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gt_msg.Proto_LearnSkillList)
  int total_size = 0;

  // repeated .gt_msg.Proto_LearnSkill dic = 1;
  total_size += 1 * this->dic_size();
  for (int i = 0; i < this->dic_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dic(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto_LearnSkillList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gt_msg.Proto_LearnSkillList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Proto_LearnSkillList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Proto_LearnSkillList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gt_msg.Proto_LearnSkillList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gt_msg.Proto_LearnSkillList)
    MergeFrom(*source);
  }
}

void Proto_LearnSkillList::MergeFrom(const Proto_LearnSkillList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gt_msg.Proto_LearnSkillList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  dic_.MergeFrom(from.dic_);
}

void Proto_LearnSkillList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gt_msg.Proto_LearnSkillList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto_LearnSkillList::CopyFrom(const Proto_LearnSkillList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gt_msg.Proto_LearnSkillList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto_LearnSkillList::IsInitialized() const {

  return true;
}

void Proto_LearnSkillList::Swap(Proto_LearnSkillList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proto_LearnSkillList::InternalSwap(Proto_LearnSkillList* other) {
  dic_.UnsafeArenaSwap(&other->dic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Proto_LearnSkillList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto_LearnSkillList_descriptor_;
  metadata.reflection = Proto_LearnSkillList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Proto_LearnSkillList

// repeated .gt_msg.Proto_LearnSkill dic = 1;
int Proto_LearnSkillList::dic_size() const {
  return dic_.size();
}
void Proto_LearnSkillList::clear_dic() {
  dic_.Clear();
}
const ::gt_msg::Proto_LearnSkill& Proto_LearnSkillList::dic(int index) const {
  // @@protoc_insertion_point(field_get:gt_msg.Proto_LearnSkillList.dic)
  return dic_.Get(index);
}
::gt_msg::Proto_LearnSkill* Proto_LearnSkillList::mutable_dic(int index) {
  // @@protoc_insertion_point(field_mutable:gt_msg.Proto_LearnSkillList.dic)
  return dic_.Mutable(index);
}
::gt_msg::Proto_LearnSkill* Proto_LearnSkillList::add_dic() {
  // @@protoc_insertion_point(field_add:gt_msg.Proto_LearnSkillList.dic)
  return dic_.Add();
}
::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_LearnSkill >*
Proto_LearnSkillList::mutable_dic() {
  // @@protoc_insertion_point(field_mutable_list:gt_msg.Proto_LearnSkillList.dic)
  return &dic_;
}
const ::google::protobuf::RepeatedPtrField< ::gt_msg::Proto_LearnSkill >&
Proto_LearnSkillList::dic() const {
  // @@protoc_insertion_point(field_list:gt_msg.Proto_LearnSkillList.dic)
  return dic_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gt_msg

// @@protoc_insertion_point(global_scope)
